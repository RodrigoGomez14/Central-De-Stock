{"version":3,"sources":["images/projectManagement.jpg","components/SpinnerLoading.js","actions/index.js","components/Login.js","components/Product.js","Pages/ProductList.js","components/PedidoItem.js","components/BotoneraPedido.js","components/Pedido.js","Pages/PedidosList.js","Pages/MecanizadosList.js","Pages/NoMecanizadosList.js","Pages/SurtidoresList.js","components/NavBar.js","components/Item.js","components/Ficha.js","components/PedidoCliente.js","components/PedidoProovedor.js","components/FichaPedidos.js","components/FichaProovedor.js","Pages/ProovedoresList.js","components/FichaCliente.js","Pages/ClientesList.js","components/FichaExpreso.jsx","Pages/ExpresosList.js","components/BotoneraDeuda.js","components/Deuda.js","Pages/Deudas.js","Pages/ListasDePrecios.js","components/ProductElection.js","components/BotoneraNuevoPedido.js","components/ResumenPedido.js","Pages/NuevoPedido.js","components/Cheque.js","Pages/ChequesList.js","components/FormNuevoCliente.js","Pages/NuevoCliente.js","Pages/NuevoRecibo.js","components/FormNuevoCheque.js","Pages/NuevoCheque.js","components/ProductoCadena.js","components/CadenaDeProduccion.js","components/IntroCadenasDeProduccion.js","Pages/CadenasDeProduccion.js","components/Registro.js","components/Layout.js","App.js","serviceWorker.js","reducers/index.js","index.js","images/logo.png"],"names":["module","exports","SpinnerLoading","className","role","this","props","title","Component","getDocumentos","payload","type","changeUser","changeRegistro","changeCliente","changeProveedor","isLoading","recuperandoUsuario","Login","state","mail","undefined","password","firebase","signInWithEmailAndPassword","then","success","catch","error","alert","data","setState","user","to","loading","height","src","Logo","value","onChange","e","updateMail","target","id","placeholder","updatePass","onClick","preventDefault","logIn","mapDispatchToProps","connect","Product","imagen","cambiarPrecio","a","nuevoPrecio","prompt","ref","child","uid","seccion","nombre","update","precio","parseFloat","eliminarProducto","confirmAlert","buttons","label","remove","eliminarEnlace","disminuye","enlace","result","filter","valor","datosRef","alertConvertirEnProductoSimple","customUI","onClose","convertirEnProductoSimple","esElaborado","compuestoPor","alertConvertirEnProductoCompuesto","Object","keys","productos","map","articulo","includes","convertirEnProductoCompuesto","alertAgregarCompuestoPor","agregarCompuestoPor","arr","document","getElementById","push","producto1","producto2","0","1","alertConfiguracionProducto","console","log","eliminarCompuestoPor","icon","faTimes","length","cantidad","class","autoFocus","sumarArticulo","cantidadActual","respetarCadena","checked","nuevaCantidad","values","cadenasDeProduccion","cadena","index","cantidadVieja","getDownloadURL","url","faTrash","alt","alertSumarCantidad","ProductList","nuevaCategoria","alertAgregarProducto","faPlus","agregarProducto","alertGuia","faFrownOpen","forEach","Array","prototype","arrayProductos","getElementsByClassName","call","f","children","innerHTML","toLowerCase","search","email","handleChange","key","redirect","PedidoItem","BotoneraPedido","enviarPedido","faCheck","eliminarPedido","Pedido","pedido","producto","componente","cantidadComponente","restarProducto","parseInt","pathname","cliente","articulos","descontarPedido","PedidosList","productosRef","date","Date","fecha","getDate","getMonth","getFullYear","pedidos","MecanizadosList","products","images","NoMecanizadosList","noMecanizados","mecanizados","SurtidoresList","getele","surtidores","NavBar","handleClick","Navbar","collapseOnSelect","bg","expand","variant","sticky","Toggle","aria-controls","Brand","displayName","confirmLogOut","Collapse","Nav","Link","Item","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","infoExtra","propiedad","nuevaInfo","array","newArr","newInfo","infoDelete","splice","indexOf","name","edit","eliminarInfoArray","editarCliente","agregarInfoArray","editarInfo","Ficha","alertModificarDeuda","sumarDeuda","restarDeuda","faMinus","agregarValor","datos","info","alertAgregarValor","agregarCampo","nuevoCampo","nuevoValor","alertAgregarCampo","eliminarValor","valores","valorEliminado","alertEliminarValor","faQuestionCircle","alertEditarNombre","editarNombre","nuevoNombre","nuevaDeuda","deudaRef","deuda","scope","PedidoCliente","alertEliminarPedido","llave","PedidoProovedor","proveedor","Fichapedido","reverse","FichaProovedor","eliminarCliente","proovedor","accion","faArrowLeft","faEdit","FichaPedidos","ProovedoresList","returnBack","alertNuevoProveedor","nuevoProveedor","arrayClientes","parentNode","style","display","proveedores","FichaCliente","alertEditarCliente","arrayInfo","ClientesList","clientes","FichaExpreso","eliminarExpreso","ExpresosList","alertNuevoExpreso","nuevoExpreso","changeExpreso","expreso","expresos","BotoneraDeuda","deudaVieja","adicion","quita","pedirCantidad","Deuda","Deudas","arrayDeudas","deudas","updateDeuda","ListasDePrecios","fetchData","file","put","documentos","documento","delete","subirDocumento","files","for","borrarDocumento","slice","window","open","BotoneraNuevoPedido","porcentaje","restar","nuevoTotal","Math","floor","total","modificarTotal","cancelarPedido","ResumenPedido","NuevoPedido","nuevoCliente","alertNuevoCliente","alertElegirProducto","sumaPrecios","cantidadPlus","agregarArticulo","seleccionarDestinatario","alertResumen","handleChangeProducto","ProductElection","handleChangeCliente","Cheque","enviadoA","cheque","enviarCheque","ChequesList","filtro","arrayCheques","$filtro","arrayButton","actualizarBotones","cheques","FormNuevoCliente","direccionPrincipal","direccionSecundaria","ciudad","codigoPostal","CUIT","DNI","telefono1","telefono2","telefono3","telefono4","direccion","telefono","2","3","submitForm","onSubmit","confirm","when","message","NuevoCliente","NuevoRecibo","comprobarCadenaDeProduccion","articuloCadena","descontarMercaderia","enviarPedidoAFicha","FormNuevoCheque","entrada","banco","numero","monto","Banco","Cliente","NuevoCheque","ProductoCadena","faArrowDown","CadenaDeProduccion","alertConfiguracionCadena","eliminarCadena","configuracionProducto","IntroCadenasDeProduccion","CadenasDeProduccion","alertNuevaCadena","agregarNuevaCadena","elemento","nombreCadena","Registro","registro","isValid","createUserWithEmailAndPassword","updateProfile","sendEmailVerification","signOut","noValidate","required","updateNombre","registrar","Layout","logOut","location","reload","on","snapshot","getProductos","val","getPedidos","getClientes","getProveedores","getDeudas","getCadenasDeProduccion","getCheques","getExpresos","listAll","imagenesRef","items","getImagenes","onAuthStateChanged","fetchImagenes","authListener","recuperarUsuario","emailVerified","section","App","exact","path","component","Boolean","hostname","match","reducer","action","imagenes","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qIAAAA,EAAOC,QAAU,IAA0B,+C,+dCwB5BC,G,8LAnBP,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,4BAA4BC,KAAK,aAIxD,yBAAKD,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,+BAA+BE,KAAKC,MAAMC,e,GAbvDC,c,yBC2DhBC,G,MAAgB,SAAAC,GACzB,MAAO,CACHC,KAAM,iBACND,aAIKE,EAAa,SAAAF,GACtB,MAAO,CACHC,KAAM,cACND,YAGKG,EAAiB,SAAAH,GAC1B,MAAO,CACHC,KAAM,kBACND,YAGKI,EAAgB,SAAAJ,GACzB,MAAO,CACHC,KAAM,iBACND,YAGKK,EAAkB,SAAAL,GAC3B,MAAO,CACHC,KAAM,mBACND,YASKM,EAAY,SAAAN,GACrB,MAAO,CACHC,KAAM,aACND,YAGKO,EAAqB,SAAAP,GAC9B,MAAO,CACHC,KAAM,sBACND,Y,QC7FFQ,E,2MACFC,MAAQ,CACJC,UAAMC,EACNC,cAAUD,G,mMAGVhB,KAAKC,MAAMU,WAAU,G,SACfO,SAAgBC,2BAA2BnB,KAAKc,MAAMC,KAAMf,KAAKc,MAAMG,UAAUG,MAAK,SAAAC,GACxF,EAAKpB,MAAMU,WAAU,MAEpBW,OAAM,SAAAC,GACHC,MAAM,iDACN,EAAKvB,MAAMU,WAAU,M,uIAItBc,GACPzB,KAAK0B,SACD,CACIX,KAAMU,M,iCAIPA,GACPzB,KAAK0B,SACD,CACIT,SAAUQ,M,+BAIZ,IAAD,OACL,OACI,6BACKzB,KAAKC,MAAM0B,KACR,kBAAC,IAAD,CAAUC,GAAI,eAEd,yBAAK9B,UAAU,yBACVE,KAAKc,MAAMe,QACR,yBAAK/B,UAAU,OACVE,KAAKc,MAAMe,QAAU,kBAAC,EAAD,MAAqB,MAG/C,kBAAC,WAAD,KACI,yBAAK/B,UAAU,OACX,yBAAKA,UAAU,+BACX,yBAAKgC,OAAO,QAAQC,IAAKC,QAGjC,yBAAKlC,UAAU,OACX,yBAAKA,UAAU,6DACX,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,qBACX,wCACA,2BAAOmC,MAAOjC,KAAKc,MAAMC,KAAMT,KAAK,QAAQ4B,SAAU,SAAAC,GAClD,EAAKC,WAAWD,EAAEE,OAAOJ,QAC1BnC,UAAU,eAAewC,GAAG,aAAaC,YAAY,YAGhE,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,qBACX,2CACA,2BAAOmC,MAAOjC,KAAKc,MAAMG,SAAUX,KAAK,WAAW4B,SAAU,SAAAC,GACzD,EAAKK,WAAWL,EAAEE,OAAOJ,QAC1BnC,UAAU,eAAewC,GAAG,iBAAiBC,YAAY,eAGpE,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,kBAAC,IAAD,CAAM8B,GAAG,cACL,4BAAQtB,KAAK,SAASmC,QAAS,SAAAN,GAC3BA,EAAEO,iBACF,EAAKC,SACN7C,UAAU,mBAHb,qBAMR,yBAAKA,UAAU,8BACX,kBAAC,IAAD,CAAM8B,GAAG,aACL,4BAAQtB,KAAK,SAASR,UAAU,0BAA0B2C,QAAS,WAC/D,EAAKxC,MAAMO,gBAAe,KAD9B,kC,GA9EpCL,aAqGdyC,EAAqB,CACvBrC,aACAC,iBACAG,YACAC,sBAEWiC,eAZS,SAAA/B,GACpB,MAAO,CACHa,KAAMb,EAAMa,KACZE,QAASf,EAAMe,WASiBe,EAAzBC,CAA6ChC,G,uCClHtDiC,E,2MACFhC,MAAM,CACFiC,YAAO/B,G,EAwFXgC,c,sBAAgB,4BAAAC,EAAA,2DACNC,EAAcC,OAAO,0CADf,gCAGFjC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMuD,QAAQC,OAAO,CACjHC,OAAQC,WAAWT,KAJf,2C,EAQhBU,iB,sBAAmB,sBAAAX,EAAA,sDACfY,uBAAa,CACT3D,MAAO,qBACP4D,QAAS,CACL,CACIC,MAAO,eACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sEACC/B,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMuD,QAAQQ,SADzG,2CAAF,kDAAC,IAIZ,CACID,MAAO,eAXJ,2C,EAgBnBE,e,uCAAiB,WAAOT,EAAOU,EAAUC,GAAxB,SAAAlB,EAAA,sDACbY,uBAAa,CACT3D,MAAO,uBAAuBsD,EAAO,IACrCM,QAAS,CACL,CACIC,MAAO,eACPtB,QAAQ,WAAD,4BAAE,8BAAAQ,EAAA,6DACCmB,EAASF,EAAUG,QAAO,SAAAC,GAAK,OAAIA,IAAQH,KAD5C,SAEkBjD,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAMG,GAFvG,cAECe,EAFD,gBAGCA,EAASd,OAAO,CACdS,UAAUE,IAJb,2CAAF,kDAAC,IASZ,CACIL,MAAO,eAhBN,2C,4DA8BjBS,+BAA+B,WAC3BX,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QAEb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wCAAc,EAAKG,MAAMuD,OAAzB,0BAGR,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,UACX,yHAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,yBACV2C,QAAS,WACL,EAAKkC,4BACLD,MALR,iCAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,eACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCC,0B,sBAA2B,sBAAA1B,EAAA,sEACjB/B,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMuD,QAAQC,OAAO,CACjHmB,aAAY,EACZC,aAAa,OAHM,2C,EAM3BC,kCAAkC,WAC9BjB,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACTG,EAAa,GACjB,OACI,yBAAK/E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wCAAc,EAAKG,MAAMuD,OAAzB,6BAGR,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,UACX,0KAEJ,yBAAKA,UAAU,UACX,+IAEJ,yBAAKA,UAAU,UACX,8GAGR,8BACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACf,4BAAQA,UAAU,eAAewC,GAAG,2BAChC,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GAInC,GAHI,EAAKlF,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,eACxCA,EAAa,KAEbA,EAAaO,SAASD,GACvB,OAAO,gCAAUA,SAMpC,yBAAKrF,UAAU,YACX,yBAAKA,UAAU,kBACf,4BAAQA,UAAU,eAAewC,GAAG,2BAChC,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GAInC,GAHI,EAAKlF,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,eACxCA,EAAa,KAEbA,EAAaO,SAASD,GACvB,OAAO,gCAAUA,SAMhC,yBAAKrF,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAK4C,+BACLX,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCY,yBAAyB,WACrBzB,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACTG,EAAa,EAAK5E,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,aACzD,OACI,yBAAK/E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,yEAA+C,EAAKG,MAAMuD,UAGlE,8BACA,yBAAK1D,UAAU,YACX,yBAAKA,UAAU,kBACf,4BAAQA,UAAU,eAAewC,GAAG,4BAChC,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GAInC,GAHI,EAAKlF,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,eACxCA,EAAa,KAEbA,EAAaO,SAASD,GACvB,OAAO,gCAAUA,SAMhC,yBAAKrF,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAK8C,sBACLb,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCa,oB,sBAAqB,8BAAAtC,EAAA,yDACbuC,EAAI,EAAKvF,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,eAC1CA,EAAeY,SAASC,eAAe,4BAA4BzD,OAFxD,uBAIbuD,EAAIG,KAAKd,GAJI,SAKP3D,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMuD,QAAQC,OAAO,CACjHoB,aAAaW,IANJ,2C,EAUrBH,6B,sBAA8B,8BAAApC,EAAA,6DACpB2C,EAAYH,SAASC,eAAe,2BAA2BzD,MAC/D4D,EAAYJ,SAASC,eAAe,2BAA2BzD,MAF3C,SAGpBf,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMuD,QAAQC,OAAO,CACjHmB,aAAY,EACZC,aAAa,CACTiB,EAAEF,EACFG,EAAEF,KAPgB,2C,EAW9BG,2BAA2B,SAACxC,GACxBK,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACVmG,QAAQC,IAAI,EAAKjG,MAAMgF,UAAU,EAAKhF,MAAMuD,SAC7C,yBAAK1D,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,0DACA,4BAAK0D,KAGb,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,kBACV,EAAKG,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQoB,YACxC,EAAK3E,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,aACrC,yBAAK/E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,+CAGP,EAAKG,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,aACrC,yBAAK/E,UAAU,OACX,yBAAKA,UAAU,mBACV,EAAKG,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,aAAaK,KAAI,SAAAC,GAAQ,OAC1D,4BACI,0BAAMrF,UAAU,+BAA+BqF,EAC3C,kBAAC,IAAD,CAAiB1C,QAAS,WAAK,EAAK0D,qBAAqBhB,IAAWrF,UAAU,kBAAkBsG,KAAMC,aAOlI,KAEA,yBAAKvG,UAAU,+BACX,yBAAKA,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B2C,QAAS,EAAK6C,0BAAxE,sCAEJ,yBAAKxF,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,yBAAyB2C,QAAS,EAAK+B,gCAAvE,mCAKZ,KAGJ,yBAAK1E,UAAU,sBACX,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B2C,QAAS,EAAKqC,mCAAxE,sCAKZ,8BACI,yBAAKhF,UAAU,YACX,yBAAKA,UAAU,kBACX,4BACIA,UAAU,eACV2C,QAAS,WACLiC,MAHR,mB,EAiBhCyB,qB,uCAAuB,WAAOtB,GAAP,SAAA5B,EAAA,sDACnBY,uBAAa,CACT3D,MAAO,YAAY,EAAKD,MAAMuD,OAAO,mCACrCM,QAAS,CACL,CACIC,MAAO,eACPtB,QAAQ,WAAD,4BAAE,8BAAAQ,EAAA,yDACCmB,EAAS,EAAKnE,MAAMgF,UAAU,EAAKhF,MAAMuD,QAAQqB,aAAaR,QAAO,SAAAC,GAAK,OAAIA,IAAQO,KAC5FoB,QAAQC,IAAI9B,IACTA,EAAOkC,OAHL,iCAIsBpF,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMuD,QAJtH,cAIKe,EAJL,gBAKKA,EAASd,OAAO,CACdoB,aAAaT,IANpB,+BAWD,EAAKO,4BAXJ,4CAAF,kDAAC,IAeZ,CACIZ,MAAO,eAtBA,2C,iLArbEP,EAAQ+C,G,4EAC7B1C,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,oDAA0B0D,KAGlC,8BACI,yBAAK1D,UAAU,+BACX,yBAAKA,UAAU,+BACX,yBAAK0G,MAAM,YACP,2BAAO1G,UAAU,aAAY,2BAAOQ,KAAK,WAAWR,UAAU,OAAMwC,GAAG,2BAAvE,qCAIZ,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,iCACP,2BACI2G,WAAS,EACTnG,KAAK,SACLR,UAAU,eACVwC,GAAG,uBACHC,YAAY,wBAG5B,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIA,UAAU,kBACV2C,QAAO,sBAAE,sBAAAQ,EAAA,sEACC,EAAKyD,cACPlD,EACA+C,EACA,EAAKtG,MAAMsD,SACbnC,MAAK,WACHsD,OANC,4CAFb,qBAeJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,eACV2C,QAAS,WACLiC,MAHR,oB,iLAiBZlB,EAAQmD,EAAgBpD,G,uFAClCqD,EAAiBnB,SAASC,eAAe,0BAA0BmB,QACnEC,EAAgBnD,WAAW8B,SAASC,eAAe,wBAAwBzD,OAC9E2E,GACC7B,OAAOgC,OAAO/G,KAAKC,MAAM+G,qBAAqB9B,IAA9C,iBAAAH,OAAA,IAAAA,CAAA,UAAkD,WAAMkC,GAAN,SAAAhE,EAAA,sDAC9CgE,EAAO/B,IAAP,uCAAW,WAAOC,EAAS+B,GAAhB,eAAAjE,EAAA,yDACJO,IAAS2B,EADL,oBAEA8B,EAAOC,EAAM,GAFb,uBAGOC,EAAc,EAAKlH,MAAMgF,UAAUgC,EAAOC,EAAM,IAAIX,SAH3D,SAIOrF,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaA,MAAM4D,EAAOC,EAAM,IAAIzD,OACrG,CACI8C,SAAUY,EAAgBL,IAN/B,2CAAX,yDAD8C,2CAAlD,uD,SAcE5F,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAME,GAASF,MAAMG,GAAQC,OAAO,CAC3F8C,SAAW5C,WAAWgD,GAAkBG,I,6QAiDnB,iCAAtB9G,KAAKC,MAAM0B,KAAK2B,I,gCACTpC,YAAmBkC,MAAMC,MAAM,YAAYA,MAAMrD,KAAKC,MAAMuD,OAAO,QAAQ4D,iBAAiBhG,MAAK,SAAAiG,GACnG,EAAK3F,SAAS,CACVqB,OAAOsE,O,qIAyUb,IAAD,OACL,OACI,yBAAKvH,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,6BAA6B2C,QAAS,SAAAN,GAChD,EAAK6D,2BAA2B,EAAK/F,MAAMuD,UAC3CxD,KAAKC,MAAMuD,QACf,kBAAC,IAAD,CAAiB1D,UAAU,aAAasG,KAAMkB,IAAS7E,QAASzC,KAAK4D,qBAG5E5D,KAAKc,MAAMiC,OACR,yBAAKjD,UAAU,iBACX,yBAAKA,UAAU,iBACP,yBACAiC,IAAK/B,KAAKc,MAAMiC,OAChBjD,UAAU,aAAayH,IAAI,OAIvC,KAEJ,yBAAKzH,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,aAEJ,yBAAKA,UAAU,oBACX,4BAAI,0BAAMA,UAAU,qBAAqBE,KAAKC,MAAMsG,aAG5D,yBAAKzG,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,WAEJ,yBAAKA,UAAU,oBACX,4BAAI,0BAAMA,UAAU,qBAAhB,KAAuCE,KAAKC,MAAMyD,gBAQlF,yBAAK5D,UAAU,YACX,yBAAKA,UAAU,gCACX,4BAAQQ,KAAK,SAASR,UAAU,mCAAmC2C,QAAO,sBAAE,sBAAAQ,EAAA,sEAClE,EAAKuE,mBACP,EAAKvH,MAAMuD,OACX,EAAKvD,MAAMsG,UAHyD,4CAA5E,sBASJ,yBAAKzG,UAAU,gCACX,4BAAQQ,KAAK,SAASR,UAAU,mCAAmC2C,QAASzC,KAAKgD,eAAjF,4B,GAhhBF7C,aAgiBP0C,eAPS,SAAA/B,GACpB,MAAO,CACHa,KAAKb,EAAMa,KACXsD,UAAUnE,EAAMmE,UAChB+B,oBAAoBlG,EAAMkG,uBAGM,KAAzBnE,CAA+BC,GC5hBxC2E,G,wNACF3G,MAAM,CAAC4G,gBAAe,G,EActBC,qBAAqB,WACjB9D,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,wDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAQ2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,0BAGpG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,aAGzF,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKoF,kBACLnD,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCmD,gB,sBAAkB,8BAAA5E,EAAA,yDACRO,EAASiC,SAASC,eAAe,uBAAuBzD,MACxDyB,EAAS+B,SAASC,eAAe,uBAAuBzD,OAC3DuB,EAHW,gCAIJtC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaI,OAAxE,eAEGD,EAAQ,CACLA,OAAOA,EACP+C,SAAS,EACT7C,OAAOA,KATT,2C,EAelBoE,UAAY,WACRjE,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,yBAAyBsG,KAAM2B,QAGlE,yBAAKjI,UAAU,OACX,yBAAKA,UAAU,sBACX,kDAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,oHAIR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OACX,6HAIR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,0BAGnG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,aAGzF,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKoF,kBACLnD,MALR,oB,4EA/HnBvC,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BG,EAAiB1C,SAAS2C,uBAAuB,sEACrDJ,EAAQK,KAAKF,GAAgB,SAAUG,IACwH,GAAvJA,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eACpIH,EAAExI,UAAY,4EAGdwI,EAAExI,UAAY,iF,+BA0IhB,IAAD,OACL,IAGI,GADOE,KAAKC,MAAM0B,KAAKgH,MAEnB,OACI,6BACI,yBAAK7I,UAAU,eACX,yBAAKA,UAAU,mBACTE,KAAKC,MAAMgF,UAeb,oCACI,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAM8B,GAAG,wBACL,4BAAQtB,KAAK,SAASR,UAAU,iBAAhC,2BAKR,yBAAKA,UAAU,qBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,wBAK9B,yBAAKzC,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAASzC,KAAK2H,sBAAhE,6BAKR,yBAAK7H,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMgF,WAAWC,KAAI,SAAA1B,GAAM,OACzC,yBAAK1D,UAAU,4EAA4E+I,IAAK,EAAK5I,MAAMgF,UAAUzB,GAAQA,QACzH,kBAAC,EAAD,CAASU,UAAW,EAAKjE,MAAMgF,UAAUzB,GAAQU,UAAWV,OAAQ,EAAKvD,MAAMgF,UAAUzB,GAAQA,OAAQE,OAAQ,EAAKzD,MAAMgF,UAAUzB,GAAQE,OAAS6C,SAAU,EAAKtG,MAAMgF,UAAUzB,GAAQ+C,SAAUhD,QAAQ,oBA7ChO,oCACKvD,KAAK8H,YACN,yBAAKhI,UAAU,OACX,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,cAAd,gCAEJ,yBAAKA,UAAU,iCACf,4BAAQQ,KAAK,SAASR,UAAU,6BAA6B2C,QAASzC,KAAK2H,sBAA3E,iCAkDhC,MAAOpG,GACH,OACI,kBAAC,EAAD,CAAOuH,SAAS,mB,GAzNN3I,cAqOX0C,eAPS,SAAA/B,GACpB,MAAO,CACHe,QAASf,EAAMe,QACfoD,UAAWnE,EAAMmE,UACjBtD,KAAMb,EAAMa,QAGoB,KAAzBkB,CAA+B4E,GC/N/BsB,E,iLAdP,OACI,yBAAKjJ,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,4BAAKE,KAAKC,MAAMuD,SAEpB,yBAAK1D,UAAU,SACX,4BAAKE,KAAKC,MAAMsG,iB,GATfpG,aCuBV6I,G,uLAjBP,OACI,yBAAKlJ,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAASzC,KAAKC,MAAMgJ,cAAc,kBAAC,IAAD,CAAiB7C,KAAM8C,QAErH,yBAAKpJ,UAAU,mBACX,0BAAMA,UAAU,qBACZ,iCAAOE,KAAKC,MAAMyD,UAG1B,yBAAK5D,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAASzC,KAAKC,MAAMkJ,gBAAgB,kBAAC,IAAD,CAAiB/C,KAAMC,a,GAb1GlG,cCIvBiJ,G,kNACFtI,MAAQ,CACJuI,OAAQ,I,uHAGSC,EAAS/C,EAAUO,EAAcjC,G,+EAClDoB,QAAQC,IAAIoD,EAAUxC,IACnBjC,E,gBACCA,EAAaK,IAAb,uCAAiB,WAAMqE,GAAN,eAAAtG,EAAA,6DACPuG,EAAqB,EAAKvJ,MAAMgF,UAAUsE,GAAYhD,UAAUO,EADzD,SAEP5F,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaA,MAAMkG,GAAY9F,OAC5F,CACI8C,SAAUiD,IAJL,2CAAjB,uD,sCAU0BtI,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaA,MAAMiG,G,cAC5F7F,OACR,CACI8C,SAAUA,EAASO,I,4LAMbuC,G,4EAClBtE,OAAOgC,OAAOsC,GAAQnE,IAAtB,iBAAAH,OAAA,IAAAA,CAAA,UAA0B,WAAMI,GAAN,SAAAlC,EAAA,sDACtB,EAAKwG,eAAetE,EAAS3B,OAAQ,EAAKvD,MAAMgF,UAAUE,EAAS3B,QAAQ+C,SAAWmD,SAASvE,EAASoB,UAAU,EAAKtG,MAAMgF,UAAUE,EAAS3B,QAAQqB,cADlI,2CAA1B,uD,iIAIM,IAAD,OACL,OACI,yBAAK/E,UAAU,sBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAS,aACTjB,OAAO,GAAD,OAAK1I,KAAKC,MAAM2J,WAEtB,wBAAInH,QACA,WAC6B,aAArB,EAAKxC,MAAM2J,SACX,EAAK3J,MAAMQ,cAAc,EAAKR,MAAM2J,WAG9C,0BAAM9J,UAAU,6BAA6BE,KAAKC,MAAM2J,YAGlE,yBAAK9J,UAAU,UACViF,OAAOC,KAAKhF,KAAKC,MAAMoJ,OAAOQ,WAAW3E,KAAI,SAAAC,GAAQ,OAClD,oCACA,kBAAC,EAAD,CAAY3B,OAAQ,EAAKvD,MAAMoJ,OAAOQ,UAAU1E,GAAU3B,OAAQ+C,SAAU,EAAKtG,MAAMoJ,OAAOQ,UAAU1E,GAAUoB,iBAK9H,kBAAC,EAAD,CACI7C,OAAQ1D,KAAKC,MAAMoJ,OAAO3F,OAC1BuF,aAAY,uCAAE,WAAM9G,GAAN,SAAAc,EAAA,sDACVY,uBAAa,CACT3D,MAAO,iBACP4D,QAAS,CACL,CACIC,MAAO,SACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sEACC,EAAK6G,gBAAgB,EAAK7J,MAAMoJ,OAAOQ,WADxC,OAEL,EAAK5J,MAAMgJ,aAAa,EAAKhJ,MAAMqC,GAAI,EAAKrC,MAAMoJ,QAF7C,2CAAF,kDAAC,IAKZ,CACItF,MAAO,eAZT,2CAAF,sDAkBZoF,eAAgB,SAAAhH,GACZ0B,uBAAa,CACT3D,MAAO,mBACP4D,QAAS,CACL,CACIC,MAAO,WACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sDACL,EAAKhD,MAAMkJ,eAAe,EAAKlJ,MAAMqC,IADhC,2CAAF,kDAAC,IAIZ,CACIyB,MAAO,wB,GA1F1B5D,cAoGfyC,EAAmB,CACrBnC,iBAMWoC,eAJO,SAAA/B,GAAK,MAAG,CAC1Ba,KAAKb,EAAMa,KACXsD,UAAUnE,EAAMmE,aAEmBrC,EAAxBC,CAA4CuG,GC1GrDW,G,4OAEiBlB,EAAKQ,EAAO/F,G,4EACP,YAAjB+F,EAAOO,Q,gCACqB1I,aAAoBkC,MAAMC,MAAMC,GAAKD,MAAM,YAAYA,MAAMgG,EAAOO,S,QAAzFI,E,QACW3G,MAAM,aACV,EACH4G,EAAO,IAAIC,KACjBF,EAAa3G,MAAM,WAAWsC,KAAK,CAC/BwE,MAAM,GAAD,OAAKF,EAAKG,UAAV,YAAuBH,EAAKI,WAAa,EAAzC,YAA8CJ,EAAKK,eACxDT,UAAWR,EAAOQ,a,OAI9B7J,KAAKmJ,eAAeN,G,yLAEHA,G,iFACX3H,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,WAAWA,MAAMwF,GAAK7E,S,sIAEjF,IAAD,OACLiC,QAAQC,IAAIlG,KAAKC,MAAM0B,KAAK2B,KAC5B,IAEI,GADatD,KAAKC,MAAM0B,KAAKgH,MAEzB,OAAI3I,KAAKC,MAAMsK,QAEP,6BACI,yBAAKzK,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMsK,SAASrF,KAAI,SAAA2D,GAAG,OACpC,yBAAK/I,UAAU,6EACX,kBAAC,EAAD,CAAQwC,GAAIuG,EAAKQ,OAAQ,EAAKpJ,MAAMsK,QAAQ1B,GAAMe,QAAS,EAAK3J,MAAMsK,QAAQ1B,GAAKe,QAASX,aAAc,SAACJ,EAAIQ,GAC3G,EAAKJ,aAAaJ,EAAIQ,EAAO,EAAKpJ,MAAM0B,KAAK2B,IAAI,EAAKrD,MAAMsK,QAAQ1B,KACrEM,eAAgB,SAACN,GAChB,EAAKM,eAAeN,cAahD,6BACI,yBAAK/I,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,eAAd,kCAUpC,SACI,OACI,kBAAC,EAAD,CAAOgJ,SAAS,iB,GAjEN3I,cA0EX0C,eAJS,SAAA/B,GAAK,MAAK,CAC1ByJ,QAASzJ,EAAMyJ,QACf5I,KAAMb,EAAMa,QAEoB,KAAzBkB,CAA+BkH,GC9ExCS,E,qLACWrI,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BG,EAAiB1C,SAAS2C,uBAAuB,sEACrDJ,EAAQK,KAAKF,GAAgB,SAAUG,IACwH,GAAvJA,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,gBACpIH,EAAExI,UAAY,4EACdmG,QAAQC,IAAIoC,EAAExI,YAGdwI,EAAExI,UAAY,iF,+BAIhB,IAAD,OACL,IAGI,GADOE,KAAKC,MAAM0B,KAAKgH,MAEnB,OACI,6BACI,yBAAK7I,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAeoC,SACxC,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,yBAMlC,yBAAKzC,UAAU,OACVmG,QAAQC,IAAIlG,KAAKC,MAAMwK,UACvB1F,OAAOgC,OAAO/G,KAAKC,MAAMwK,UAAUvF,KAAI,SAAAoE,GAAQ,OAC5C,yBAAKxJ,UAAU,4EAA4E+I,IAAKS,EAAS9F,QACrG,kBAAC,EAAD,CAASA,OAAQ8F,EAAS9F,OAAQ+C,SAAU+C,EAAS/C,SAAUxD,OAAQ,EAAK9C,MAAMyK,OAAOpB,EAAS9F,QAASD,QAAQ,wBAWvJ,MAAOhC,GACH,OACI,kBAAC,EAAD,CAAOuH,SAAS,qB,GAvDF3I,aAqEf0C,eATS,SAAA/B,GAEpB,OADAmF,QAAQC,IAAIpF,GACL,CACHe,QAASf,EAAMe,QACf4I,SAAU3J,EAAMW,KAAN,aACViJ,OAAQ5J,EAAM4J,OACd/I,KAAMb,EAAMa,QAGoB,KAAzBkB,CAA+B2H,GCrExCG,E,qLACWxI,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BG,EAAiB1C,SAAS2C,uBAAuB,sEACrDJ,EAAQK,KAAKF,GAAgB,SAAUG,IACwH,GAAvJA,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,gBACpIH,EAAExI,UAAY,4EACdmG,QAAQC,IAAIoC,EAAExI,YAGdwI,EAAExI,UAAY,iF,+BAIhB,IAAD,OACL,IAGI,GADOE,KAAKC,MAAM0B,KAAKgH,MAEnB,OACI,6BACI,yBAAK7I,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAeoC,SACxC,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,yBAMlC,yBAAKzC,UAAU,OACViF,OAAOgC,OAAO/G,KAAKC,MAAM2K,eAAe1F,KAAI,SAAAoE,GAAQ,OACjD,yBAAKxJ,UAAU,4EAA4E+I,IAAKS,EAAS9F,QACrG,kBAAC,EAAD,CAASA,OAAQ8F,EAAS9F,OAAQE,OAAQ4F,EAAS5F,OAAQ6C,SAAU+C,EAAS/C,SAAUxD,OAAQ,EAAK9C,MAAMyK,OAAOpB,EAAS9F,QAASD,QAAQ,2BAWhL,MAAOhC,GACH,OACI,kBAAC,EAAD,CAAOuH,SAAS,mB,GAtDA3I,aAqEjB0C,eAVS,SAAA/B,GACpB,MAAO,CACHe,QAASf,EAAMe,QACf4I,SAAU3J,EAAMW,KAAN,WACVoJ,YAAa/J,EAAMW,KAAN,aACbmJ,cAAe9J,EAAMW,KAAK,mBAC1BiJ,OAAQ5J,EAAM4J,OACd/I,KAAMb,EAAMa,QAGoB,KAAzBkB,CAA+B8H,GCvExCG,E,qLACW3I,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAE1BG,GADQ1C,SAASsF,OACAtF,SAAS2C,uBAAuB,uEACrDJ,EAAQK,KAAKF,GAAgB,SAAUG,IACwH,GAAvJA,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,gBACpIH,EAAExI,UAAY,4EACdmG,QAAQC,IAAIoC,EAAExI,YAGdwI,EAAExI,UAAY,iF,+BAIhB,IAAD,OACL,IAGI,GADOE,KAAKC,MAAM0B,KAAKgH,MAEnB,OACI,6BACI,yBAAK7I,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAeoC,SACxC,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,yBAMlC,yBAAKzC,UAAU,OACViF,OAAOgC,OAAO/G,KAAKC,MAAM+K,YAAY9F,KAAI,SAAAoE,GAAQ,OAC9C,yBAAKxJ,UAAU,4EAA4E+I,IAAKS,EAAS9F,QACrG,kBAAC,EAAD,CAASA,OAAQ8F,EAAS9F,OAAQE,OAAQ4F,EAAS5F,OAAQ6C,SAAU+C,EAAS/C,SAAUxD,OAAQ,EAAK9C,MAAMyK,OAAOpB,EAAS9F,QAASD,QAAQ,sBAWhL,MAAOhC,GACH,OACI,kBAAC,EAAD,CAAOuH,SAAS,oB,GAvDH3I,aAmEd0C,eAPS,SAAA/B,GACpB,MAAO,CACHkK,WAAYlK,EAAMW,KAAN,YACZiJ,OAAQ5J,EAAM4J,OACd/I,KAAMb,EAAMa,QAGoB,KAAzBkB,CAA+BiI,G,kBC9DxCG,I,+LACe,IAAD,OACZpH,uBAAa,CACT3D,MAAO,oBACP4D,QAAS,CACL,CACIC,MAAO,aACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sDACL,EAAKhD,MAAMiL,cADN,2CAAF,kDAAC,IAIZ,CACInH,MAAO,iB,+BAKb,IAAD,OACL,OACI,oCACK/D,KAAKC,MAAM0B,KACR,kBAACwJ,GAAA,EAAD,CAAQC,kBAAgB,EAACC,GAAG,OAAOC,OAAO,KAAKC,QAAQ,OAAOC,OAAO,OACjE,kBAACL,GAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,GAAA,EAAOQ,MAAR,KACI,yBAAK7L,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAcE,KAAKC,MAAM0B,KAAKiK,eAGpD,yBAAK9L,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,yBAAyB2C,QAAS,SAAAN,GAC9D,EAAK0J,kBADT,eAOhB,kBAACV,GAAA,EAAOW,SAAR,CAAiBxJ,GAAG,oBAChB,kBAACyJ,GAAA,EAAD,CAAKjM,UAAU,mBACX,kBAACiM,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,cAA9B,cAEJ,kBAACmK,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,YAA9B,YAEJ,kBAACmK,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,aAA9B,aAEJ,kBAACmK,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,gBAA9B,gBAEJ,kBAACmK,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,aAA9B,aAEJ,kBAACmK,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,WAA9B,WAEJ,kBAACmK,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,YAA9B,YAEmB,iCAAtB5B,KAAKC,MAAM0B,KAAK2B,IACjB,kBAACyI,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,WAAW8B,GAAG,oBAA9B,sBAGJ,OAIR,kBAACmK,GAAA,EAAIC,KAAL,MAEI,kBAAC,IAAD,CAAMlM,UAAU,+BAA+B8B,GAAG,cAAcU,GAAG,qBAAnE,eACJ,kBAACyJ,GAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMlM,UAAU,uCAAuC8B,GAAG,eAAeU,GAAG,qBAA5E,kBAIR,U,GA/ECnC,cAwFN0C,gBAHO,SAAA/B,GAAK,MAAG,CAC1Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8BoI,IC3FvCgB,I,kBACF,WAAYhM,GAAQ,IAAD,6BAUViB,OAAcoF,QACfpF,gBAVmB,CACnBgL,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBACnBC,MAAO,0CAKX,4CAAMvM,KAEVa,MAAQ,CACJ2L,eAAWzL,GAhBI,E,8JAqBF0L,G,4EACPC,EAAYxJ,OAAO,+B,gCAEfjC,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAMsD,QAAU,KAAKF,MAAMrD,KAAKC,MAAM2J,SAASvG,MAAM,SAASI,OAAnG,eAEGiJ,EAAYC,I,6CAKfzL,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAMsD,QAAU,KAAKF,MAAMrD,KAAKC,MAAM2J,SAASvG,MAAM,SAASA,MAAMqJ,GAAW1I,S,uLAG3G0I,EAAWE,G,4EAC1BC,EAASD,IACTE,EAAU3J,OAAO,iC,uBAEjB0J,EAAOlH,KAAKmH,G,SACN5L,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAMsD,QAAU,KAAKF,MAAMrD,KAAKC,MAAM2J,SAASvG,MAAM,SAASI,OAAnG,eAEGiJ,EAAYG,I,0LAKLH,EAAWE,EAAOG,G,4EACtClJ,uBAAa,CACT3D,MAAO,wBACP4D,QAAS,CACL,CACIC,MAAO,cACPtB,QAAQ,WAAD,4BAAE,4BAAAQ,EAAA,6DACD4J,EAASD,GACNI,OAAOH,EAAOI,QAAQF,GAAa,GAFrC,SAGC7L,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAMsD,QAAU,KAAKF,MAAM,EAAKpD,MAAM2J,SAASvG,MAAM,SAASI,OAAnG,eAEGiJ,EAAYG,IALhB,2CAAF,kDAAC,IAUZ,CACI9I,MAAO,e,qIAKb,IAAD,OACL,MAAwB,WAApB/D,KAAKC,MAAMiN,KACH,KAGgB,aAApBlN,KAAKC,MAAMiN,MAA2C,cAApBlN,KAAKC,MAAMiN,MAA4C,cAApBlN,KAAKC,MAAMiN,KAGnD,cAApBlN,KAAKC,MAAMiN,KACPlN,KAAKC,MAAMkN,KACR,yBAAKrN,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAI,gDAGZ,yBAAKA,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMwB,MAAMyD,KAAI,SAAA2D,GAC9B,OACI,yBAAK/I,UAAU,sBACX,wBAAIA,UAAU,WAAW2C,QAAS,SAAAN,GAC9B,EAAKiL,kBAAkB,EAAKnN,MAAMiN,KAAM,EAAKjN,MAAMwB,KAAM,EAAKxB,MAAMwB,KAAKoH,IAAMzH,KAC3E,EAAKnB,MAAMoN,iBAEf,EAAKpN,MAAMwB,KAAKoH,UAOxC,yBAAK/I,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAI,gDAGZ,yBAAKA,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMwB,MAAMyD,KAAI,SAAA2D,GAC9B,OACI,yBAAK/I,UAAU,sBACX,4BAAK,EAAKG,MAAMwB,KAAKoH,UAQ5C7I,KAAKC,MAAMkN,KACR,yBAAKrN,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAK0G,MAAM,UACP,wBAAI1G,UAAU,aAAa2C,QAAS,SAAAN,GAChC,EAAKmL,iBAAiB,EAAKrN,MAAMiN,KAAM,EAAKjN,MAAMwB,MAAML,KACpD,EAAKnB,MAAMoN,mBAFnB,IAII,+BAAQrN,KAAKC,MAAMiN,MAJvB,OAOR,yBAAKpN,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMwB,MAAMyD,KAAI,SAAA2D,GAC9B,OACI,yBAAK/I,UAAU,sBACX,wBAAIA,UAAU,WAAW2C,QAAS,SAAAN,GAC9B,EAAKiL,kBAAkB,EAAKnN,MAAMiN,KAAM,EAAKjN,MAAMwB,KAAM,EAAKxB,MAAMwB,KAAKoH,IAAMzH,KAC3E,EAAKnB,MAAMoN,mBAEf,EAAKpN,MAAMwB,KAAKoH,UAOxC,yBAAK/I,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAK0G,MAAM,UACP,4BAAI,+BAAQxG,KAAKC,MAAMiN,SAG/B,yBAAKpN,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMwB,MAAMyD,KAAI,SAAA2D,GAC9B,OACI,yBAAK/I,UAAU,sBACX,4BAAK,EAAKG,MAAMwB,KAAKoH,UAcrD7I,KAAKC,MAAMkN,KACP,yBAAKrN,UAAU,mCACU,UAApBE,KAAKC,MAAMiN,KACR,4BAAI,+BAAQlN,KAAKC,MAAMiN,OAEvB,wBAAIpN,UAAU,aAAa2C,QAAS,SAAAN,GAChC,EAAKoL,WAAW,EAAKtN,MAAMiN,MAAM9L,KAC7B,EAAKnB,MAAMoN,mBAFnB,IAII,+BAAQrN,KAAKC,MAAMiN,MAJvB,KAMJ,4BAAKlN,KAAKC,MAAMwB,OAGpB,yBAAK3B,UAAU,oCACX,wBAAIA,UAAU,IAAG,+BAAQE,KAAKC,MAAMiN,OACf,UAApBlN,KAAKC,MAAMiN,KACa,IAApBlN,KAAKC,MAAMwB,KACR,wBAAI3B,UAAU,cAAeE,KAAKC,MAAMwB,MAExC,wBAAI3B,UAAU,IAAd,KAAoBE,KAAKC,MAAMwB,MAEnC,wBAAI3B,UAAU,IAAIE,KAAKC,MAAMwB,W,GA9L1CtB,cCIbqN,IDqMS3K,aAHS,SAAA/B,GAAK,MAAG,CAC5Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8BoJ,I,2MCpMzCwB,oBAAoB,WAChB5J,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,iDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,SAASR,UAAU,eAAewC,GAAG,kBAAkBC,YAAY,uBAGjG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKiL,aACLhJ,MAGR,kBAAC,IAAD,CAAiB0B,KAAMwB,QAG3B,yBAAK9H,UAAU,mBACX,4BACIA,UAAU,iBACV2C,QAAS,WACL,EAAKkL,cACLjJ,MAGJ,kBAAC,IAAD,CAAiB0B,KAAMwH,gB,EAW3DC,a,uCAAa,WAAOhF,GAAP,mBAAA5F,EAAA,yDACH0J,EAAYlH,SAASC,eAAe,kBAAkBzD,MACxD4K,EAAS,EAAK5M,MAAM2J,QAAQkE,MAAMC,KAAKlF,IACxC8D,EAHM,wBAILE,EAAOlH,KAAKgH,GAJP,SAKkBzL,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAM2J,QAAQkE,MAAMtK,QAAQH,MAAM,SAASA,MAAM,QAL7J,cAKCkB,EALD,gBAMCA,EAASd,OAAT,eACDoF,EAAKgE,IAPL,OAUL,EAAK5M,MAAMoN,gBAVN,4C,wDAabW,kBAAkB,SAACnF,GACfhF,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,uCAAa+I,KAGrB,8BACI,yBAAK/I,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,iBAAiBC,YAAY,8BAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKoL,aAAahF,GAClBnE,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,yBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCuJ,a,sBAAa,gCAAAhL,EAAA,yDACHiL,EAAazI,SAASC,eAAe,mBAAmBzD,MACxDkM,EAAa1I,SAASC,eAAe,mBAAmBzD,OAC3DiM,EAHM,gCAIkBhN,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAM2J,QAAQkE,MAAMtK,QAAQH,MAAM,SAASA,MAAM,QAJ7J,cAICkB,EAJD,gBAKCA,EAASd,OAAT,eACDyK,EAAY,CACTpI,EAAEqI,KAPL,OAWL,EAAKlO,MAAMoN,gBAXN,2C,EAcbe,kBAAkB,WACdvK,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,2DAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAK0G,MAAM,uBACP,0BAAMA,MAAM,mBAAmBlE,GAAG,6BAAlC,UAEJ,2BAAOmE,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,kBAAkBC,YAAY,kBAInG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAK0G,MAAM,uBACP,0BAAMA,MAAM,mBAAmBlE,GAAG,6BAAlC,UAEJ,2BAAOhC,KAAK,OAAOR,UAAU,eAAewC,GAAG,kBAAkBC,YAAY,wBAIzF,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKwL,eACLvJ,MAGR,kBAAC,IAAD,CAAiB0B,KAAMwB,QAG3B,yBAAK9H,UAAU,mBACX,4BACIA,UAAU,iBACV2C,QAAS,WACLiC,MAGJ,kBAAC,IAAD,CAAiB0B,KAAMwH,gB,EAW3DS,c,uCAAc,WAAOxF,EAAIyF,EAAQC,GAAnB,iBAAAtL,EAAA,6DACJmB,EAASkK,EAAQjK,QAAO,SAAAC,GAAK,OAAIA,IAAQiK,KADrC,SAEarN,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAM2J,QAAQkE,MAAMtK,QAAQH,MAAM,SAASA,MAAM,QAFxJ,cAEJkB,EAFI,gBAGJA,EAASd,OAAT,eACGoF,EAAKzE,IAJJ,OAOV,EAAKnE,MAAMoN,gBAPD,2C,4DAUdmB,mBAAmB,SAAC3F,EAAIyF,EAAQhK,GAC5BT,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,yBAAyBsG,KAAMqI,QAGlE,yBAAK3O,UAAU,OACX,yBAAKA,UAAU,sBACX,sDAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,6CAAmBwE,EAAnB,QAGR,8BACI,yBAAKxE,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAK4L,cAAcxF,EAAIyF,EAAQhK,GAC/BI,MALR,iBAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,yBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCgK,kBAAkB,WACd7K,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,yBAAyBsG,KAAMqI,QAGlE,yBAAK3O,UAAU,OACX,yBAAKA,UAAU,sBACX,gDAAsB,EAAKG,MAAM2J,QAAQkE,MAAMtK,UAGvD,8BACI,yBAAK1D,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,mBAAmBC,YAAY,4BAGhG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKkM,eACLjK,MALR,eAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,yBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCiK,a,sBAAc,gCAAA1L,EAAA,2DACJ2L,EAAcnJ,SAASC,eAAe,oBAAoBzD,OADtD,wBAGFR,EAAO,EAAKxB,MAAM2J,QAHhB,SAIA1I,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM5B,EAAKqM,MAAMtK,QAAQQ,SAJxG,cAKNvC,EAAKqM,MAAMtK,OAAOoL,EALZ,SAMiB1N,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SANvF,cAMAgB,EANA,iBAOAA,EAASd,OAAT,eACDhC,EAAKqM,MAAMtK,OAAQ/B,IARlB,QAWkB,aAArB,EAAKxB,MAAMsD,QACV,EAAKtD,MAAMQ,cAAcgB,EAAKqM,MAAMtK,QAGpC,EAAKvD,MAAMS,gBAAgBe,EAAKqM,MAAMtK,QAfpC,4C,mMAoBJqL,EAAalL,WAAW8B,SAASC,eAAe,mBAAmBzD,Q,gCAE9Cf,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAMrD,KAAKC,MAAMsD,SAASF,MAAMrD,KAAKC,MAAM2J,QAAQkE,MAAMtK,QAAQH,MAAM,S,cAA7IyL,E,gBACAA,EAASrL,OAAO,CAClBsL,MAAOpL,WAAW3D,KAAKC,MAAM2J,QAAQkE,MAAMiB,OAAOF,I,iQAMpDA,EAAalL,WAAW8B,SAASC,eAAe,mBAAmBzD,Q,gCAE9Cf,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAMrD,KAAKC,MAAMsD,SAASF,MAAMrD,KAAKC,MAAM2J,QAAQkE,MAAMtK,QAAQH,MAAM,S,cAA7IyL,E,gBACAA,EAASrL,OAAO,CAClBsL,MAAOpL,WAAW3D,KAAKC,MAAM2J,QAAQkE,MAAMiB,OAAOF,I,qIAKpD,IAAD,OACL,OACI,yBAAK/O,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACVE,KAAKC,MAAMkN,KACR,wBAAI1K,QAASzC,KAAK0O,kBAAmB5O,UAAU,QAAQE,KAAKC,MAAM2J,QAAQkE,MAAMtK,OACtD,aAArBxD,KAAKC,MAAMsD,QACR,KAEA,0BAAMzD,UAAWE,KAAKC,MAAM2J,QAAQkE,MAAMiB,MAAM,EAAE,2CAA2C,6CAA7F,IAA6I/O,KAAKC,MAAM2J,QAAQkE,MAAMiB,QAI9K,4BAAK/O,KAAKC,MAAM2J,QAAQkE,MAAMtK,OACJ,aAArBxD,KAAKC,MAAMsD,QACR,KAEA,0BAAMzD,UAAWE,KAAKC,MAAM2J,QAAQkE,MAAMiB,MAAM,EAAE,2CAA2C,4CAA6CtM,QAASzC,KAAKyN,qBAAxJ,IAAgLzN,KAAKC,MAAM2J,QAAQkE,MAAMiB,UAM5N/O,KAAKC,MAAMkN,KACZ,yBAAKrN,UAAU,OACX,yBAAKA,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAASzC,KAAKoO,mBAAhE,yBAMR,KAEA,yBAAKtO,UAAU,OACVE,KAAKC,MAAM2J,QAAQkE,MAAMC,KAEtB,2BAAOjO,UAAU,gCACb,+BAEQiF,OAAOC,KAAKhF,KAAKC,MAAM2J,QAAQkE,MAAMC,MAAM7I,KAAI,SAAA2D,GAAG,MACzC,WAARA,GAAwB,UAANA,EACf,KAGA,4BACK,EAAK5I,MAAMkN,KACZ,oCACI,wBAAI6B,MAAM,OAAOnG,GACjB,4BACK,EAAK5I,MAAM2J,QAAQkE,MAAMC,KAAKlF,GAAK3D,KAAI,SAAAZ,GAAK,OACzC,uBAAGxE,UAAU,gCAAgC2C,QAAS,WAClD,EAAK+L,mBAAmB3F,EAAI,EAAK5I,MAAM2J,QAAQkE,MAAMC,KAAKlF,GAAKvE,KAC/DA,OAGZ,4BACI,kBAAC,IAAD,CAAiBxE,UAAU,UAASsG,KAAMwB,IAAQnF,QAAS,WACvD,EAAKuL,kBAAkBnF,QAKnC,oCACI,wBAAImG,MAAM,OAAOnG,GACjB,4BACK,EAAK5I,MAAM2J,QAAQkE,MAAMC,KAAKlF,GAAK3D,KAAI,SAAAZ,GAAK,OACzC,uBAAGxE,UAAU,mBAAmBwE,cAcpE,oCACI,yBAAKxE,UAAU,sBACX,wBAAIA,UAAU,cAAd,IAA4B,0BAAMA,UAAU,+BAAhB,0CAEhC,yBAAKA,UAAU,sBACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAASzC,KAAKoO,mBAAhE,iC,GA9aRjO,cA0bdyC,GAAmB,CACrBnC,gBACAC,mBAEWmC,gBAPO,SAAA/B,GAAK,MAAG,CAC1Ba,KAAKb,EAAMa,QAMwBiB,GAAxBC,CAA4C2K,IClcrDyB,I,kNACFC,oBAAoB,WAChBrL,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,yBAAyBsG,KAAMqI,QAGlE,yBAAK3O,UAAU,OACX,yBAAKA,UAAU,sBACX,gDAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,0EAIZ,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,iBACV2C,QAAS,WACL,EAAK0G,iBACLzE,MALR,iBAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,yBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCyE,e,sBAAiB,sBAAAlG,EAAA,6DACb,EAAKhD,MAAMwB,KAAKoI,UAAU3E,IAA1B,uCAA8B,WAAMC,GAAN,SAAAlC,EAAA,sEACpB/B,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaA,MAAM8B,EAAS3B,QAAQC,OACjG,CACI8C,SAAS,EAAKtG,MAAMgF,UAAUE,EAAS3B,QAAQ+C,SAAS5C,WAAWwB,EAASoB,YAH1D,2CAA9B,kCAAAvG,KAAA,gBADa,SAQPkB,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,YAAYA,MAAM,EAAKpD,MAAM2J,SAASvG,MAAM,WAAWA,MAAM,EAAKpD,MAAMkP,OAAOnL,SARnI,2C,wEAYb,OADAiC,QAAQC,IAAIlG,KAAKC,MAAMwB,MAEnB,yBAAK3B,UAAU,+BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,aAAaE,KAAKC,MAAMwB,KAAK0I,QAE/C,yBAAKrK,UAAU,SACX,kBAAC,IAAD,CAAiBA,UAAU,iBAAiB2C,QACxCzC,KAAKkP,oBACP9I,KAAMC,SAIpB,yBAAKvG,UAAU,aACVE,KAAKC,MAAMwB,KAAKoI,UAAU3E,KAAI,SAAAC,GAAQ,OACnC,yBAAKrF,UAAU,wBACP,yBAAKA,UAAU,eACX,2BAAIqF,EAASoB,SAAb,MAEJ,yBAAKzG,UAAU,qCACX,2BAAIqF,EAAS3B,mB,GAvFrBrD,cAqGb0C,gBALO,SAAA/B,GAAK,MAAG,CAC1Ba,KAAKb,EAAMa,KACXsD,UAAUnE,EAAMmE,UAChB2E,QAAQ9I,EAAM8I,WAEqB,KAAxB/G,CAA8BoM,ICpGvCG,G,2MACFF,oBAAoB,WAChBrL,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,yBAAyBsG,KAAMqI,QAGlE,yBAAK3O,UAAU,OACX,yBAAKA,UAAU,sBACX,gDAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,+DAIZ,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,iBACV2C,QAAS,WACL,EAAK0G,iBACLzE,MALR,iBAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,yBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCyE,e,sBAAiB,sBAAAlG,EAAA,6DACb,EAAKhD,MAAMwB,KAAKoI,UAAU3E,IAA1B,uCAA8B,WAAMC,GAAN,SAAAlC,EAAA,sEAEpB/B,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaA,MAAM8B,EAAS3B,QAAQC,OACjG,CACI8C,SAAS,EAAKtG,MAAMgF,UAAUE,EAAS3B,QAAQ+C,SAASpB,EAASoB,WAJ/C,2CAA9B,kCAAAvG,KAAA,gBADa,SASPkB,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,eAAeA,MAAM,EAAKpD,MAAMoP,WAAWhM,MAAM,WAAWA,MAAM,EAAKpD,MAAMkP,OAAOnL,SATxI,2C,wEAab,OADAiC,QAAQC,IAAIlG,KAAKC,MAAMwB,MAEnB,yBAAK3B,UAAU,+BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,aAAaE,KAAKC,MAAMwB,KAAK0I,QAE/C,yBAAKrK,UAAU,SACX,kBAAC,IAAD,CAAiBA,UAAU,iBAAiB2C,QACxCzC,KAAKkP,oBACP9I,KAAMC,SAIpB,yBAAKvG,UAAU,aACVE,KAAKC,MAAMwB,KAAKoI,UAAU3E,KAAI,SAAAC,GAAQ,OACnC,yBAAKrF,UAAU,wBACP,yBAAKA,UAAU,eACX,2BAAIqF,EAASoB,SAAb,MAEJ,yBAAKzG,UAAU,qCACX,2BAAIqF,EAAS3B,OAAb,IAAqB,0BAAM1D,UAAU,kCAAhB,IAAmDqF,EAASzB,oB,GAxFvFvD,aAsGf0C,gBALO,SAAA/B,GAAK,MAAG,CAC1BmE,UAAUnE,EAAMmE,UAChBtD,KAAKb,EAAMa,KACX0N,UAAUvO,EAAMuO,aAEmB,KAAxBxM,CAA8BuM,IC7E9BE,G,iLA3BD,IAAD,OACL,YAAwBtO,IAApBhB,KAAKC,MAAMwB,KAEP,yBAAK3B,UAAU,aACX,yBAAKA,UAAU,OAEPiF,OAAOC,KAAKhF,KAAKC,MAAMwB,MAAM8N,UAAUrK,KAAI,SAAA2D,GAAG,OAC1C,yBAAK/I,UAAU,iEACa,gBAAvB,EAAKG,MAAMsD,QACR,kBAAC,GAAD,CAAiB9B,KAAM,EAAKxB,MAAMwB,KAAKoH,GAAMsG,MAAOtG,IAEpD,kBAAC,GAAD,CAAepH,KAAM,EAAKxB,MAAMwB,KAAKoH,GAAMsG,MAAOtG,UAW1E,S,GAvBU1I,aCOpBqP,G,2MACF1O,MAAQ,CACJqM,MAAM,G,EAwBVsC,gBAAkB,WACd5L,uBAAa,CACT3D,MAAO,oBACP4D,QAAS,CACL,CACIC,MAAO,WACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sEACC/B,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,eAAeA,MAAM,EAAKpD,MAAMyP,UAAU5B,MAAMtK,QAAQQ,SAAS5C,KAC9H,EAAKnB,MAAMiL,eAFV,2CAAF,kDAAC,IAMZ,CACInH,MAAO,gB,+EAnCPoB,EAAUwK,GACtB,IAAMnK,EAAM,GACZA,EAAIG,KAAK,CACLnC,OAAQ2B,EACRoB,SAAUoJ,IAEd3P,KAAK0B,SAAS,CACV2H,OAAQ7D,M,sCAIRxF,KAAKc,MAAMqM,KACXnN,KAAK0B,SAAS,CACVyL,MAAM,IAIVnN,KAAK0B,SAAS,CACVyL,MAAM,M,+BAsBR,IAAD,OACL,OACI,6BACI,yBAAKrN,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAS,IAAD,OAAM3J,KAAKC,MAAMsD,WAEzB,gCAAK,kBAAC,IAAD,CAAiBzD,UAAU,WAAWsG,KAAMwJ,IAAanN,QAASzC,KAAKC,MAAMiL,iBAI1F,yBAAKpL,UAAU,8BACX,gCAAK,kBAAC,IAAD,CAAiBA,UAAU,WAAWsG,KAAMyJ,IAAQpN,QAAS,SAAAN,GAC9D,EAAKkL,oBAET,gCAAK,kBAAC,IAAD,CAAiBvN,UAAU,WAAWsG,KAAMkB,IAAS7E,QAAS,SAAAN,GAC/D,EAAKsN,wBAIjB,yBAAK3P,UAAU,OACX,yBAAKA,UAAU,iCACX,kBAAC,GAAD,CACIuN,cAAe,SAAAlL,GACX,EAAKkL,iBAETF,KAAMnN,KAAKc,MAAMqM,KACjB5J,QAAS,cACTqG,QAAS5J,KAAKC,MAAMyP,cAGhC,yBAAK5P,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,QAAd,qBAEJ,yBAAKA,UAAU,sCACX,kBAACgQ,GAAD,CAAcvM,QAAQ,cAAc9B,KAAMzB,KAAKC,MAAMyP,UAAUnF,mB,GAnFlEpK,aAgGd0C,gBAHS,SAAA/B,GAAK,MAAG,CAC5Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8B2M,IC/FvCO,I,iNAYFC,WAAa,WACT,EAAK/P,MAAMS,qBAAgBM,I,EAE/BiP,oBAAsB,WAClBpM,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,yDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOkG,MAAM,eAAelE,GAAG,uBAAuBC,YAAY,2BAGhG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKyN,iBACLxL,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCwL,e,sBAAiB,4BAAAjN,EAAA,uDACPO,EAASiC,SAASC,eAAe,wBAAwBzD,QAE3Df,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,eAAeI,OAA1E,eACKD,EAAQ,CACLsK,MAAM,CACFiB,MAAM,EACNvL,OAAOA,MAPV,2C,4EAnEJrB,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BmI,EAAgB1K,SAAS2C,uBAAuB,eACpDnC,QAAQC,IAAIiK,GACZnI,EAAQK,KAAK8H,GAAe,SAAU7H,IACqC,GAAnEA,EAAEE,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAChDH,EAAE8H,WAAWA,WAAWC,MAAMC,QAAU,OAExChI,EAAE8H,WAAWA,WAAWC,MAAMC,QAAU,a,+BAwE1C,IAAD,OACL,IAEI,GADatQ,KAAKC,MAAM0B,KAAKgH,MACnB,CACN,GAAI3I,KAAKC,MAAMoP,UAAW,CACtB,IAAMA,EAAYrP,KAAKC,MAAMsQ,YAAYvQ,KAAKC,MAAMoP,WACpD,OAAIA,EAEI,6BACI,kBAAC,GAAD,CAAgBK,UAAWL,EAAW9L,QAAQ,cAAc2H,YAAa,SAAA/I,GACrE,EAAK6N,iBAOb,6BACI,yBAAKlQ,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,SAAd,+BAU5B,OACI,6BACI,yBAAKA,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,yBAM9B,yBAAKzC,UAAU,OACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAASzC,KAAKiQ,qBAAhE,6BAKR,yBAAKnQ,UAAU,OACVE,KAAKC,MAAMsQ,YACRxL,OAAOgC,OAAO/G,KAAKC,MAAMsQ,aAAarL,KAAI,SAAAmK,GAAS,OAC/C,yBAAKvP,UAAU,mDACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAS,gBACTjB,OAAO,GAAD,OAAK2G,EAAUvB,MAAMtK,UAE3B,4BAAQlD,KAAK,SAASR,UAAU,oCAAoC2C,QAAS,WACzE,EAAKxC,MAAMS,gBAAgB2O,EAAUvB,MAAMtK,UAE1C6L,EAAUvB,MAAMtK,aAMjC,oCACI,yBAAK1D,UAAU,sBACVmG,QAAQC,IAAI,QACb,wBAAIpG,UAAU,cAAd,kCAa5C,SACI,OACI,kBAAC,EAAD,CAAOgJ,SAAS,qB,GA7KF3I,cAuLxByC,GAAqB,CACvBlC,mBAGWmC,gBATS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZ4O,YAAazP,EAAMyP,YACnBlB,UAAWvO,EAAMuO,aAMmBzM,GAAzBC,CAA6CkN,IC7LtDS,G,2MACF1P,MAAQ,CACJqM,MAAM,EACNrE,UAAU,G,EAad2G,gBAAkB,WACd5L,uBAAa,CACT3D,MAAO,oBACP4D,QAAS,CACL,CACIC,MAAO,WACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,6DACLgD,QAAQC,IAAI,EAAKjG,MAAMsD,SADlB,SAECrC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMyP,UAAU5B,MAAMtK,QAAQQ,SAAS5C,KACnI,EAAKnB,MAAMiL,eAHV,2CAAF,kDAAC,IAOZ,CACInH,MAAO,gB,EAsBvB0M,mBAAmB,WACf5M,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,oDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,SAASR,UAAU,eAAewC,GAAG,eAAeC,YAAY,uBAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKiL,aACLhJ,MAGR,kBAAC,IAAD,CAAiB0B,KAAMwB,QAG3B,yBAAK9H,UAAU,mBACX,4BACIA,UAAU,iBACV2C,QAAS,WACL,EAAKkL,cACLjJ,MAGJ,kBAAC,IAAD,CAAiB0B,KAAMwH,gB,+EArF3CzI,EAAUwK,GACtB,IAAMnK,EAAM,GACZA,EAAIG,KAAK,CACLnC,OAAQ2B,EACRoB,SAAUoJ,IAEd3P,KAAK0B,SAAS,CACV2H,OAAQ7D,M,gKA0BRkL,EADA1Q,KAAKC,MAAMyP,UAAU5B,MAAMrB,UACfzM,KAAKC,MAAMyP,UAAU5B,MAAMrB,UAG3B,IAEN9G,KAAKxC,OAAO,+B,SAChBjC,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,YAAYA,MAAMrD,KAAKC,MAAMyP,UAAU5B,MAAMtK,QAAQH,MAAM,SAASI,OACjI,CACIgJ,UAAWiE,I,4IAwDnB1Q,KAAK0B,SAAS,CACVyL,MAAOnN,KAAKc,MAAMqM,S,+BAIhB,IAAD,OAEL,OADAlH,QAAQC,IAAIlG,KAAKC,MAAMoP,WAEnB,6BACI,yBAAKvP,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAU,cAEV,gCAAK,kBAAC,IAAD,CAAiB7J,UAAU,WAAWsG,KAAMwJ,IAAanN,QAAS,SAAAN,GACnE,EAAKlC,MAAMiL,cACX,EAAKmC,sBAKjB,yBAAKvN,UAAU,8BACX,gCAAK,kBAAC,IAAD,CAAiBA,UAAU,WAAWsG,KAAMyJ,IAAQpN,QAAS,SAAAN,GAC9D,EAAKkL,oBAET,gCAAK,kBAAC,IAAD,CAAiBvN,UAAU,WAAWsG,KAAMkB,IAAS7E,QAAS,SAAAN,GAC/D,EAAKsN,wBAIjB,yBAAK3P,UAAU,OACX,yBAAKA,UAAU,iCACX,kBAAC,GAAD,CACIuN,cAAe,SAAAlL,GACX,EAAKkL,iBAETF,KAAMnN,KAAKc,MAAMqM,KACjB5J,QAAS,WACTqG,QAAS5J,KAAKC,MAAMyP,cAIhC,yBAAK5P,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,QAAd,qBAEJ,yBAAKA,UAAU,sCACX,kBAACgQ,GAAD,CAAcrO,KAAMzB,KAAKC,MAAMyP,UAAUnF,mB,GAvJ9CpK,aAmKZ0C,gBAHS,SAAA/B,GAAK,MAAI,CAC7Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8B2N,ICpKvCG,G,qLAEE3Q,KAAKC,MAAMQ,cAAc,Q,mCAEhB0B,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BmI,EAAgB1K,SAAS2C,uBAAuB,eACpDnC,QAAQC,IAAIiK,GACZnI,EAAQK,KAAK8H,GAAe,SAAU7H,IACqC,GAAnEA,EAAEE,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAChDH,EAAE8H,WAAWA,WAAWC,MAAMC,QAAU,OAExChI,EAAE8H,WAAWA,WAAWC,MAAMC,QAAU,a,+BAG1C,IAAD,OACL,IAEI,GADatQ,KAAKC,MAAM0B,KAAKgH,MACnB,CACN,GAAI3I,KAAKC,MAAM2J,QAAS,CACpB,IAAMA,EAAU5J,KAAKC,MAAM2Q,SAAS5Q,KAAKC,MAAM2J,SAC/C,OAAIA,EAEI,6BACI,kBAAC,GAAD,CAAc8F,UAAW9F,EAASrG,QAAQ,WAAW2H,YAAa,SAAA/I,GAC9D,EAAK6N,iBAOb,6BACI,yBAAKlQ,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,SAAd,6BAW5B,OACI,6BACI,yBAAKA,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,uBAM9B,yBAAKzC,UAAU,OACX,kBAAC,IAAD,CAAM8B,GAAG,iBACL,4BAAQtB,KAAK,SAASR,UAAU,mBAAhC,4BAMZ,yBAAKA,UAAU,OACVE,KAAKC,MAAM2Q,SACR7L,OAAOgC,OAAO/G,KAAKC,MAAM2Q,UAAU1L,KAAI,SAAA0E,GAAO,OAC1C,yBAAK9J,UAAU,mDACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAS,aACTjB,OAAO,GAAD,OAAKkB,EAAQkE,MAAMtK,UAEzB,4BAAQlD,KAAK,SAASR,UAAU,oCAAoC2C,QAAS,WACzE,EAAKxC,MAAMQ,cAAcmJ,EAAQkE,MAAMtK,UAEtCoG,EAAQkE,MAAMtK,aAM/B,oCACI,yBAAK1D,UAAU,sBACVmG,QAAQC,IAAI,QACb,wBAAIpG,UAAU,cAAd,+BAa5C,SACI,OACI,kBAAC,EAAD,CAAOgJ,SAAS,kB,GA9GL3I,aAyHrByC,GAAqB,CACvBnC,iBAGWoC,gBATS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZiI,QAAS9I,EAAM8I,QACfgH,SAAU9P,EAAM8P,YAMoBhO,GAAzBC,CAA6C8N,IC5HtDE,G,2MACF/P,MAAQ,CACJqM,MAAM,EACNrE,UAAU,G,EAYdgI,gBAAkB,WACdjN,uBAAa,CACT3D,MAAO,oBACP4D,QAAS,CACL,CACIC,MAAO,WACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,6DACLgD,QAAQC,IAAI,EAAKjG,MAAMsD,SADlB,SAECrC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,EAAKpD,MAAMsD,SAASF,MAAM,EAAKpD,MAAMyP,UAAU5B,MAAMtK,QAAQQ,SAAS5C,KACnI,EAAKnB,MAAMiL,eAHV,2CAAF,kDAAC,IAOZ,CACInH,MAAO,gB,EAsBvB0M,mBAAmB,WACf5M,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,oDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,SAASR,UAAU,eAAewC,GAAG,eAAeC,YAAY,uBAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKiL,aACLhJ,MAGR,kBAAC,IAAD,CAAiB0B,KAAMwB,QAG3B,yBAAK9H,UAAU,mBACX,4BACIA,UAAU,iBACV2C,QAAS,WACL,EAAKkL,cACLjJ,MAGJ,kBAAC,IAAD,CAAiB0B,KAAMwH,gB,+EApF3CzI,EAAUwK,GACtB,IAAMnK,EAAM,GACZA,EAAIG,KAAK,CACLnC,OAAQ2B,EACRoB,SAAUoJ,IAEd3P,KAAK0B,SAAS,CACV2H,OAAQ7D,M,gKAyBRkL,EADA1Q,KAAKC,MAAMyP,UAAU5B,MAAMrB,UACfzM,KAAKC,MAAMyP,UAAU5B,MAAMrB,UAG3B,IAEN9G,KAAKxC,OAAO,+B,SAChBjC,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,YAAYA,MAAMrD,KAAKC,MAAMyP,UAAU5B,MAAMtK,QAAQH,MAAM,SAASI,OACjI,CACIgJ,UAAWiE,I,4IAwDnB1Q,KAAK0B,SAAS,CACVyL,MAAOnN,KAAKc,MAAMqM,S,+BAIhB,IAAD,OAEL,OADAlH,QAAQC,IAAIlG,KAAKC,MAAMoP,WAEnB,6BACI,yBAAKvP,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAU,cAEV,gCAAK,kBAAC,IAAD,CAAiB7J,UAAU,WAAWsG,KAAMwJ,IAAanN,QAAS,SAAAN,GACnE,EAAKlC,MAAMiL,cACX,EAAKmC,sBAKjB,yBAAKvN,UAAU,8BACX,gCAAK,kBAAC,IAAD,CAAiBA,UAAU,WAAWsG,KAAMyJ,IAAQpN,QAAS,SAAAN,GAC9D,EAAKkL,oBAET,gCAAK,kBAAC,IAAD,CAAiBvN,UAAU,WAAWsG,KAAMkB,IAAS7E,QAAS,SAAAN,GAC/D,EAAK2O,wBAIjB,yBAAKhR,UAAU,OACX,yBAAKA,UAAU,iCACX,kBAAC,GAAD,CACIuN,cAAe,SAAAlL,GACX,EAAKkL,iBAETF,KAAMnN,KAAKc,MAAMqM,KACjB5J,QAAS,WACTqG,QAAS5J,KAAKC,MAAMyP,qB,GA7I7BvP,aA0JZ0C,gBAHS,SAAA/B,GAAK,MAAI,CAC7Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8BgO,ICzJvCE,G,2MAeFC,kBAAoB,WAChBnN,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,uDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOkG,MAAM,eAAelE,GAAG,qBAAqBC,YAAY,yBAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKwO,eACLvM,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCuM,a,sBAAe,4BAAAhO,EAAA,uDACLO,EAASiC,SAASC,eAAe,sBAAsBzD,QAEzDf,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,YAAYI,OAAvE,eACKD,EAAQ,CACLsK,MAAM,CACFtK,OAAOA,MANZ,2C,4EAlEXxD,KAAKC,MAAMiR,cAAc,Q,mCAEhB/O,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BmI,EAAgB1K,SAAS2C,uBAAuB,eACpDnC,QAAQC,IAAIiK,GACZnI,EAAQK,KAAK8H,GAAe,SAAU7H,IACqC,GAAnEA,EAAEE,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAChDH,EAAE8H,WAAWA,WAAWC,MAAMC,QAAU,OAExChI,EAAE8H,WAAWA,WAAWC,MAAMC,QAAU,a,+BAoE1C,IAAD,OACL,IAEI,GADatQ,KAAKC,MAAM0B,KAAKgH,MACnB,CACN,GAAI3I,KAAKC,MAAMkR,QAAS,CACpBlL,QAAQC,IAAIlG,KAAKC,MAAMkR,SACvB,IAAMA,EAAUnR,KAAKC,MAAMmR,SAASpR,KAAKC,MAAMkR,SAC/C,OAAIA,EAEI,6BACI,kBAAC,GAAD,CAAczB,UAAWyB,EAAS5N,QAAQ,WAAW2H,YAAa,SAAA/I,GAC9D,EAAK6N,iBAOb,6BACI,yBAAKlQ,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,SAAd,6BAW5B,OACI,6BACI,yBAAKA,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,uBAM9B,yBAAKzC,UAAU,OACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAAS,SAAAN,GACvD,EAAK6O,sBADT,2BAOR,yBAAKlR,UAAU,OACVE,KAAKC,MAAMmR,SACRrM,OAAOgC,OAAO/G,KAAKC,MAAMmR,UAAUlM,KAAI,SAAAiM,GAAO,OAC1C,yBAAKrR,UAAU,mDACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAS,aACTjB,OAAO,GAAD,OAAKyI,EAAQrD,MAAMtK,UAEzB,4BAAQlD,KAAK,SAASR,UAAU,oCAAoC2C,QAAS,WACzE,EAAKxC,MAAMiR,cAAcC,EAAQrD,MAAMtK,UAEtC2N,EAAQrD,MAAMtK,aAM/B,oCACI,yBAAK1D,UAAU,sBACX,wBAAIA,UAAU,cAAd,+BAa5C,SACI,OACI,kBAAC,EAAD,CAAOgJ,SAAS,kB,GA/KL3I,aA0LrByC,GAAqB,CACvBsO,ctB1GyB,SAAA7Q,GACzB,MAAO,CACHC,KAAM,iBACND,asB0GOwC,gBATS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZwP,QAASrQ,EAAMqQ,QACfC,SAAUtQ,EAAMsQ,YAMoBxO,GAAzBC,CAA6CkO,ICrK7CM,G,wLA/BP,IAAMxC,EAAa1L,OAAO,oBAC1B,OAAI0L,GAGO,I,iCAEJyC,EAAYC,GACnB,OAAOD,EAAa5H,SAAS6H,K,kCAErBD,EAAYE,GACpB,OAAOF,EAAa5H,SAAS8H,K,+BAEvB,IAAD,OACL,OACI,yBAAK1R,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B2C,QAAS,SAACN,GAChE,EAAKlC,MAAMiL,YAAY,EAAKjL,MAAM2J,QAAS,EAAK8D,WAAW,EAAKzN,MAAM8O,MAAO,EAAK0C,oBACnF,kBAAC,IAAD,CAAiBrL,KAAMwB,QAE9B,yBAAK9H,UAAU,SACX,4BAAQQ,KAAK,SAASR,UAAU,yBAAyB2C,QAAS,SAAAN,GAC9D,EAAKlC,MAAMiL,YAAY,EAAKjL,MAAM2J,QAAS,EAAK+D,YAAY,EAAK1N,MAAM8O,MAAO,EAAK0C,oBACpF,kBAAC,IAAD,CAAiBrL,KAAMwH,c,GA1BtBzN,aCgCbuR,I,wLA7BP,OAAyB,IAArB1R,KAAKC,MAAM8O,MAEP,KAKA,yBAAKjP,UAAU,2CACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAM8B,GAAI,CACN+H,SAAS,aACTjB,OAAO,GAAD,OAAK1I,KAAKC,MAAM2J,WAEtB,4BAAI,0BAAM9J,UAAU,6BAA6BE,KAAKC,MAAM2J,YAGpE,yBAAK9J,UAAU,UACX,iCAAOE,KAAKC,MAAM8O,QAEtB,yBAAKjP,UAAU,UACX,kBAAC,GAAD,CAAe8J,QAAS5J,KAAKC,MAAM2J,QAASmF,MAAO/O,KAAKC,MAAM8O,MAAO7D,YAAalL,KAAKC,MAAMiL,qB,GAvBrG/K,cCIdwR,G,qLACWxP,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1B4J,EAAcnM,SAAS2C,uBAAuB,mDAClDJ,EAAQK,KAAKuJ,GAAa,SAAUtJ,IACuF,GAAnHA,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAChGH,EAAExI,UAAY,yDAGdwI,EAAExI,UAAY,8D,2EAIR8J,EAASiF,EAAWvL,G,iFACXpC,aAAoBkC,MAAMC,MAAMC,GAAKD,MAAM,YAAYA,MAAMuG,GAASvG,MAAM,S,cAC1FI,OAAO,CACZsL,MAAOF,I,qIAGL,IAAD,OACL,IAEI,GADa7O,KAAKC,MAAM0B,KAAKgH,MACnB,CACN,GAAI3I,KAAKC,MAAM2Q,SAAU,CACrB,IAAMiB,EAAS,GASf,OARA9M,OAAOgC,OAAO/G,KAAKC,MAAM2Q,UAAU1L,KAAI,SAAA0E,GACR,GAAvBA,EAAQkE,MAAMiB,OACd8C,EAAOlM,KAAK,CACRnC,OAAQoG,EAAQkE,MAAMtK,OACtBuL,MAAOnF,EAAQkE,MAAMiB,WAI9B8C,EAAOvL,OAEF,6BACI,yBAAKxG,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,sBAMlC,yBAAKzC,UAAU,OACV+R,EAAO3M,KAAI,SAAA6J,GAAK,OACb,yBAAKjP,UAAU,mDACX,kBAAC,GAAD,CAAO8J,QAASmF,EAAMvL,OAAQuL,MAAOA,EAAMA,MAAO7D,YAAa,SAACtB,EAAQmF,GACpE,EAAK+C,YAAYlI,EAAQmF,EAAM,EAAK9O,MAAM0B,KAAK2B,gBAY3E,6BACI,yBAAKxD,UAAU,eACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,eAAd,kCAU5B,OACI,6BACI,yBAAKA,UAAU,eACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,eAAd,mCAUpC,SACI,OACI,kBAAC,EAAD,CAAOgJ,SAAS,gB,GAtGX3I,aA+GN0C,gBAJS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZiP,SAAU9P,EAAM8P,YAEoB,KAAzB/N,CAA+B8O,IC9GxCI,I,kVAKE/R,KAAKgS,Y,sQAGDhS,KAAKc,MAAMmR,K,uBACXhM,QAAQC,IAAIlG,KAAKc,MAAMmR,M,SACjB/Q,YAAmBkC,MAAMC,MAAM,mBAAmBA,MAAMrD,KAAKc,MAAMmR,KAAK/E,MAAMgF,IAAIlS,KAAKc,MAAMmR,MAAM7Q,MAAK,SAAAe,GAC1G,EAAKT,SAAS,CACVuQ,UAAMjR,EACNmR,gBAAYnR,EACZa,SAAS,IAEb,EAAKmQ,e,qLAIKI,G,4EAClBvO,uBAAa,CACT3D,MAAO,sBACP4D,QAAS,CACL,CACIC,MAAO,eACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sEACC/B,YAAmBkC,MAAMC,MAAM,mBAAmBA,MAAM+O,GAAWC,SAASjR,MAAK,SAAAe,GACnF,EAAKT,SAAS,CACVyQ,gBAAYnR,EACZmM,MAAM,EACNtL,SAAS,IAEb,EAAKmQ,eAPJ,2CAAF,kDAAC,IAYZ,CACIjO,MAAO,e,iIAKb,IAAD,OACLkC,QAAQC,IAAIlG,KAAKC,MAAMkS,YACvB,IAEI,GADanS,KAAKC,MAAM0B,KAAKgH,MAEzB,OACI,6BACI,yBAAK7I,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,gEACX,yBAAK0G,MAAM,oBACP,yBAAKA,MAAM,uBACNxG,KAAKc,MAAMmR,KACR,4BAAQ3R,KAAK,SAASR,UAAU,kBAAkB2C,QAAS,SAAAN,GACvD,EAAKmQ,mBADT,oBAIA,4BAAQhS,KAAK,SAASR,UAAU,4BAAhC,qBAGR,yBAAK0G,MAAM,eACP,2BAAOlG,KAAK,OAAOkG,MAAM,oBAAoBlE,GAAG,mBAAmBJ,SAAU,SAAAC,GACzE,EAAKT,SACD,CACIuQ,KAAM9P,EAAEE,OAAOkQ,MAAM,QAIjC,2BAAO/L,MAAM,oBAAoBgM,IAAI,oBACjCxS,KAAKc,MAAMmR,KACP,mBAEA,qBAKpB,yBAAKnS,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,iBAAiB2C,QAAS,SAAAN,GAClD,EAAKrB,MAAMqM,KACX,EAAKzL,SAAS,CACVyL,MAAM,IAIV,EAAKzL,SAAS,CACVyL,MAAM,MARlB,sBAcR,yBAAKrN,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMkS,YAAYjN,KAAI,SAAA2D,GAAG,OACvC5C,QAAQC,IAAI,EAAKjG,MAAMkS,WAAWtJ,GAAKxB,IAAvCpB,CACK,EAAKnF,MAAMqM,KACR,yBAAKrN,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,yBAAyB2C,QAAS,SAAAN,GAC9D,EAAKsQ,gBAAgB,EAAKxS,MAAMkS,WAAWtJ,GAAKrF,UAChD,EAAKvD,MAAMkS,WAAWtJ,GAAKrF,OAAOkP,MAAM,EAAG,EAAKzS,MAAMkS,WAAWtJ,GAAKrF,OAAOyJ,QAAQ,QAG7F,yBAAKnN,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAAS,SAAAN,GAC7DwQ,OAAOC,KAAK,EAAK3S,MAAMkS,WAAWtJ,GAAKxB,OACvC,EAAKpH,MAAMkS,WAAWtJ,GAAKrF,OAAOkP,MAAM,EAAG,EAAKzS,MAAMkS,WAAWtJ,GAAKrF,OAAOyJ,QAAQ,gBAarI,SACI,OAAO,U,GA5HW9M,cAqIxByC,GAAmB,CACrBxC,iBAEWyC,gBARS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZwQ,WAAYrR,EAAMqR,WAClBlN,UAAUnE,EAAMmE,aAKoBrC,GAAzBC,CAA6CkP,I,SC3ItDjP,G,2MACFhC,MAAM,CACFiC,YAAO/B,G,2MAGkB,iCAAtBhB,KAAKC,MAAM0B,KAAK2B,I,gCACTpC,YAAmBkC,MAAMC,MAAM,YAAYA,MAAMrD,KAAKC,MAAMuD,OAAO,QAAQ4D,iBAAiBhG,MAAK,SAAAiG,GACnG,EAAK3F,SAAS,CACVqB,OAAOsE,O,qIAMnB,OACI,yBAAKvH,UAAU,2BAA2B2C,QAASzC,KAAKC,MAAMiL,aAC1D,yBAAKpL,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,4BAA4BE,KAAKC,MAAMuD,UAG5DxD,KAAKc,MAAMiC,OACR,yBAAKjD,UAAU,iBACX,yBAAKA,UAAU,iBACP,yBACAiC,IAAK/B,KAAKc,MAAMiC,OAChBjD,UAAU,aAAayH,IAAI,OAIvC,KAEJ,yBAAKzH,UAAU,OACX,yBAAKA,UAAU,iCACP,0BAAMA,UAAU,kCAAhB,KAAiDE,KAAKC,MAAMyD,iB,GApC1EvD,aAmDP0C,gBALS,SAAA/B,GACpB,MAAO,CACHa,KAAKb,EAAMa,QAGqB,KAAzBkB,CAA+BC,ICqG/B+P,G,2MAxJX/R,MAAQ,CACJgI,UAAU,EACVgK,YAAY,EACZC,QAAQ,G,EAEZD,WAAa,WACTjP,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,qDAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACX,2BAAOQ,KAAK,SAASgC,GAAG,aAAaxC,UAAU,eAAeyC,YAAY,iBAGlF,yBAAKzC,UAAU,OACX,yBAAKA,UAAU,2BACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAAS,SAAAN,GACvD,IAAM2Q,EAAarN,SAASC,eAAe,cAAczD,MACnD+Q,EAAaC,KAAKC,MAAM,EAAKjT,MAAMkT,MAAS,EAAKlT,MAAMkT,MAAQL,EAAa,KAClF,EAAK7S,MAAMmT,eAAeJ,GAC1BtO,MAJJ,e,EAgBhCqO,OAAS,WACLlP,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,mDAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACX,2BAAOQ,KAAK,SAASR,UAAU,eAAewC,GAAG,WAAWC,YAAY,eAGhF,yBAAKiE,MAAM,OACP,yBAAKA,MAAM,8BACP,4BAAQlG,KAAK,SAASR,UAAU,kBAAkB2C,QAAS,SAAAN,GACvD,IAAMoE,EAAWd,SAASC,eAAe,YAAYzD,MAC/C+Q,EAAaC,KAAKC,MAAM,EAAKjT,MAAMkT,MAAQ5M,GACjDN,QAAQC,IAAIK,GACZ,EAAKtG,MAAMmT,eAAeJ,GAC1BtO,MALJ,e,gFAiBd,IAAD,OACbb,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kCACX,iDAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACX,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B2C,QAAS,SAAAN,GAC/DuC,IACA,EAAKoO,eAFT,eAOJ,yBAAKhT,UAAU,8BACX,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B2C,QAAS,SAAAN,GAC/DuC,IACA,EAAKqO,WAFT,mB,uCAcd,IAAD,OACblP,uBAAa,CACT3D,MAAO,mBACP4D,QAAS,CACL,CACIC,MAAO,eACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sDACL,EAAKvB,SAAS,CACVoH,UAAU,IAFT,2CAAF,kDAAC,IAMZ,CACI/E,MAAO,W,+BAKb,IAAD,OACL,OACI,yBAAKjE,UAAU,0BACVE,KAAKc,MAAMgI,SACR,kBAAC,IAAD,CAAUlH,GAAG,cAEb,KAEJ,yBAAK9B,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAASzC,KAAKC,MAAMgJ,cAAc,kBAAC,IAAD,CAAiB7C,KAAM8C,QAErH,yBAAKpJ,UAAU,mBACX,wBAAI2C,QAAS,SAAAN,GACT,EAAKiR,mBADT,IAEKpT,KAAKC,MAAMkT,QAEpB,yBAAKrT,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAAS,SAAAN,GAC7D,EAAKkR,mBACN,kBAAC,IAAD,CAAiBjN,KAAMC,a,GAnJZlG,aCwBnBmT,I,wLA1BD,IAAD,OACL,OACA,yBAAKxT,UAAU,4CACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKE,KAAKC,MAAM2J,WAGnB7E,OAAOC,KAAKhF,KAAKC,MAAMoJ,QAAQnE,KAAI,SAAA2D,GAAG,OAC3B,yBAAK/I,UAAU,0BACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,yBAAyB,EAAKG,MAAMoJ,OAAOR,GAAKrF,OAA7D,IAAqE,0BAAM1D,UAAU,qBAAhB,KAAuC,EAAKG,MAAMoJ,OAAOR,GAAKnF,OAA9D,UACrE,uBAAG5D,UAAU,aAAa,EAAKG,MAAMoJ,OAAOR,GAAKtC,eAKzE,kBAAC,GAAD,CAAqB6M,eAAgB,SAAAD,GACjC,EAAKlT,MAAMmT,eAAeD,IAC3BA,MAAOnT,KAAKC,MAAMkT,MAAOlK,aAAcjJ,KAAKC,MAAMgJ,qB,GArBzC9I,c,0OCYtBoT,G,2MA0BFzS,MAAQ,CACJ0S,kBAAcxS,EACdmS,MAAO,EACP9J,OAAQ,I,EAyCZoK,kBAAoB,WAChB5P,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,wDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOkG,MAAM,eAAelE,GAAG,qBAAqBC,YAAY,yBAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAK+Q,eACL9O,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCgP,oBAAsB,SAAClQ,EAAOE,GAC1BG,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,4BAAK0D,KAGb,8BACI,yBAAK1D,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,SAASkG,MAAM,eAAelE,GAAG,mBAAmBC,YAAY,eAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,IAIgBkR,EAJVC,EAAenO,SAASC,eAAe,oBAAoBzD,MACzD2R,IACA,EAAKC,gBAAgBrQ,EAAOoQ,EAAalQ,EAAQ,aAC7CA,IAGIiQ,EADA,EAAK7S,MAAMqS,MACG,EAAKrS,MAAMqS,MAGX,EAElBQ,GAAejK,SAAShG,EAASkQ,GACjC,EAAKlS,SAAS,CACVyR,MAAOQ,MAIvBjP,MArBR,YA2BJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhC8O,a,sBAAe,4BAAAvQ,EAAA,uDACLO,EAASiC,SAASC,eAAe,sBAAsBzD,SAEzD,EAAK6R,wBAAwBtQ,GAC7BtC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,YAAYI,OAAvE,eACKD,EAAQ,CACLsK,MAAM,CACFtK,OAAOA,EACPuL,MAAM,OARX,2C,EAcfgF,aAAe,WACXlQ,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,GAAD,CACI8J,QAAS,EAAK9I,MAAM0S,aACpBnK,OAAQ,EAAKvI,MAAMuI,OACnBJ,aAAc,SAAA9G,GACV,EAAK8G,eAAe7H,KAChB,EAAKM,SAAS,CACVoH,UAAU,KAGlBpE,KAEJ0O,eAAgB,SAAAD,GACZ,EAAKC,eAAeD,IAExBA,MAAO,EAAKrS,MAAMqS,e,EAS9CxL,qBAAqB,WACjB9D,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,wDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAAEnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,0BAGpG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,aAGzF,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKoF,kBACLnD,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCmD,gB,sBAAkB,8BAAA5E,EAAA,yDACRO,EAASiC,SAASC,eAAe,uBAAuBzD,MACxDyB,EAAS+B,SAASC,eAAe,uBAAuBzD,OAC3DuB,EAHW,gCAIJtC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaI,OAAxE,eAEGD,EAAQ,CACLA,OAAOA,EACP+C,SAAS,EACT7C,OAAOA,KATT,2C,uFArSMkG,GACpB5J,KAAK0B,SAAS,CACV8R,aAAc5J,M,4JAIdpE,EAAM,GACVT,OAAOC,KAAKhF,KAAKc,MAAMuI,QAAQnE,KAAI,SAAA2D,GAC/BrD,EAAIG,KACA,CACInC,OAAQ,EAAK1C,MAAMuI,OAAOR,GAAKrF,OAC/B+C,SAAU,EAAKzF,MAAMuI,OAAOR,GAAKtC,SACjChD,QAAS,EAAKzC,MAAMuI,OAAOR,GAAKtF,aAI5C0C,QAAQC,IAAIV,GACZtE,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,WAAWsC,KAClE,CACIiE,QAAS5J,KAAKc,MAAM0S,aACpB9P,OAAQ1D,KAAKc,MAAMqS,MACnBtJ,UAAWrE,I,4IASPhC,EAAQ+C,EAAU7C,EAAQH,GACtC,IAAMiC,EAAMxF,KAAKc,MAAMuI,OACvB7D,EAAIG,KAAK,CACLnC,OAAQA,EACR+C,SAAUA,EACV7C,OAAQA,EACRH,QAASA,IAEb,iE,2VAAA,IACOvD,KAAKc,MADZ,CAEIuI,OAAQ7D,O,2CAGKrD,GACjB,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BG,EAAiB1C,SAAS2C,uBAAuB,6FACrDJ,EAAQK,KAAKF,GAAgB,SAAUG,IACgG,GAA/HA,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAC5GH,EAAExI,UAAY,mGAGdwI,EAAExI,UAAY,yG,0CAINqC,GAChB,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BmI,EAAgB1K,SAAS2C,uBAAuB,eACpDJ,EAAQK,KAAK8H,GAAe,SAAU7H,IACqC,GAAnEA,EAAEE,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAChDH,EAAE8H,WAAWC,MAAMC,QAAU,OAE7BhI,EAAE8H,WAAWC,MAAMC,QAAU,a,qCAG1B6C,GACXlN,QAAQC,IAAIiN,GACZnT,KAAK0B,SAAS,CAAEyR,MAAOA,M,+BAiPjB,IAAD,OACL,IAGI,GADOnT,KAAKC,MAAM0B,KAAKgH,MAEnB,OAAK3I,KAAKc,MAAM0S,aA0DR,6BACI,yBAAK1T,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,QAAd,sBAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAK6R,qBAAqB7R,IAEhCI,YAAY,wBAK9B,yBAAKzC,UAAU,OACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAASzC,KAAK+T,cAAhE,oBAIJ,yBAAKjU,UAAU,OACX,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B2C,QAASzC,KAAK2H,sBAAxE,oBAKR,yBAAK7H,UAAU,sCACVE,KAAKC,MAAMgF,UACZ,yBAAKnF,UAAU,mBACX,yBAAKA,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAMgF,WAAWC,KAAI,SAAA1B,GAAM,OACzC,yBAAK1D,UAAU,mGAAmG+I,IAAK,EAAK5I,MAAMgF,UAAUzB,GAAQA,QACpJ,kBAACyQ,GAAD,CACI/I,YAAa,SAAA/I,GACT,EAAKuR,oBAAoB,EAAKzT,MAAMgF,UAAUzB,GAAQA,OAAQ,EAAKvD,MAAMgF,UAAUzB,GAAQE,SAE/FF,OAAQ,EAAKvD,MAAMgF,UAAUzB,GAAQA,OACrCE,OAAQ,EAAKzD,MAAMgF,UAAUzB,GAAQE,cATrD,KAgBA,yBAAK5D,UAAU,sBACX,wBAAIA,UAAU,cAAd,4BAIPE,KAAKc,MAAMgI,SACR,kBAAC,IAAD,CAAUlH,GAAG,YAEb,QAnHhB,yBAAK9B,UAAU,iBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,mBACP,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAAS,WAC7D,EAAKqR,wBAAwB,aADjC,kBAOJ,yBAAKhU,UAAU,qBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAK+R,oBAAoB/R,IAE/BI,YAAY,uBAK9B,yBAAKzC,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAASzC,KAAKyT,mBAAtE,mBAKPzT,KAAKC,MAAM2Q,SACZ,yBAAK9Q,UAAU,OACViF,OAAOgC,OAAO/G,KAAKC,MAAM2Q,UAAU1L,KAAI,SAAA0E,GAAO,OAC3C,yBAAK9J,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,8BAA8B2C,QAAS,WACnEwD,QAAQC,IAAI0D,EAAQkE,MAAMtK,QAC1B,EAAKsQ,wBAAwBlK,EAAQkE,MAAMtK,UAE1CoG,EAAQkE,MAAMtK,aAM/B,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,cAAd,4BA8EhC,MAAOyB,GACH,OACI,kBAAC,EAAD,CAAOuH,SAAS,oB,GA1bN3I,aAocpByC,GAAmB,CACrBnC,iBAEWoC,gBARS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZsD,UAAWnE,EAAMmE,UACjB2L,SAAS9P,EAAM8P,YAKqBhO,GAAzBC,CAA6C0Q,ICldtDY,I,qOACiBhF,G,8EACTlF,EAAO,IAAIC,OACXkK,EAAWjR,OAAO,qC,gCAEdjC,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,WAAWA,MAAM8L,GAAO1L,QAAnF,mBAEG,kBAAoBwG,EAAKG,UAAY,KAAOH,EAAKI,WAAa,GAAK,IAAMJ,EAAKK,eAFjF,cAGG,YAAc8J,GAHjB,I,sIASJ,IAAD,OACL,OACI,yBAAKtU,UAAU,gCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAKE,KAAKC,MAAMoU,OAAO,oBAG/B,yBAAKvU,UAAU,OACX,yBAAKA,UAAU,mBACX,gDAKhB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAKE,KAAKC,MAAMoU,OAAX,WAGb,yBAAKvU,UAAU,OACX,yBAAKA,UAAU,mBACX,gDAKhB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAKE,KAAKC,MAAMoU,OAAX,SAGb,yBAAKvU,UAAU,OACX,yBAAKA,UAAU,mBACX,8CAKhB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAKE,KAAKC,MAAMoU,OAAX,UAGb,yBAAKvU,UAAU,OACX,yBAAKA,UAAU,mBACX,+CAKhB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAKE,KAAKC,MAAMoU,OAAO,uBAG/B,yBAAKvU,UAAU,OACX,yBAAKA,UAAU,mBACX,8CAKhB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,iCAAOE,KAAKC,MAAMoU,OAAX,SAGf,yBAAKvU,UAAU,OACX,yBAAKA,UAAU,mBACX,8CAKhB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACVE,KAAKC,MAAMoU,OAAO,mBACf,4BAAKrU,KAAKC,MAAMoU,OAAO,oBAEvB,wBAAIvU,UAAU,SAAS2C,QACnB,SAAAN,GACI,EAAKmS,aAAa,EAAKrU,MAAMkP,SAFrC,OAQZ,yBAAKrP,UAAU,OACX,yBAAKA,UAAU,mBACX,+CAKhB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACVE,KAAKC,MAAMoU,OAAO,aACf,4BAAKrU,KAAKC,MAAMoU,OAAO,cAEvB,mCAIZ,yBAAKvU,UAAU,OACX,yBAAKA,UAAU,mBACX,wD,GAzIfK,cAsJN0C,gBAHO,SAAA/B,GAAK,MAAG,CAC1Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8BsR,IC/IvCI,G,2MACFzT,MAAQ,CACJ0T,OAAQ,SACR1L,UAAU,G,4EAED3G,EAAGqS,GACZ,IAAIxM,EAAUC,MAAMC,UAAUF,QAC1ByM,EAAehP,SAAS2C,uBAAuB,gCACnDJ,EAAQK,KAAKoM,GAAc,SAAUnM,GACjC,IAAM+L,EAAS/L,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SACrCmM,OAAU1T,EACd,OAAQwT,GACJ,IAAK,SACDE,EAAU,EACV,MACJ,IAAK,SACDA,EAAU,EACV,MACJ,IAAK,QACDA,EAAU,EACV,MACJ,IAAK,QACDA,EAAU,EACV,MACJ,IAAK,YACDA,EAAU,GAKmH,GAAjIL,EAAOK,GAASnM,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAC9GH,EAAExI,UAAY,sCAGdwI,EAAExI,UAAY,4C,wCAIRqC,GACd,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1B2M,EAAclP,SAAS2C,uBAAuB,cAClDJ,EAAQK,KAAKsM,GAAa,SAAUrM,GAChCA,EAAExI,UAAY,kCAElBqC,EAAEE,OAAOvC,UAAY,mC,+BAEf,IAAD,OACL,IAEI,GADaE,KAAKC,MAAM0B,KAAKgH,MAEzB,OACI,6BAEQ3I,KAAKc,MAAMgI,SACP,kBAAC,IAAD,CAAUlH,GAAG,iBAEb,6BACI,yBAAK9B,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAC9C,SAAAN,GACI,EAAKT,SAAS,CACVoH,UAAU,MAHtB,mBAQJ,yBAAKhJ,UAAU,iCACX,wBAAIA,UAAU,QAAd,YAEJ,yBAAKA,UAAU,kCACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,yCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAKyG,aAAazG,EAAG,EAAKrB,MAAM0T,SAEtCjS,YAAY,oBAGtB,yBAAKzC,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,iCAAiC2C,QAC7D,SAAAN,GACI,EAAKT,SACD,CACI8S,OAAQ,WAGhB,EAAKI,kBAAkBzS,KAP/B,WAWJ,yBAAKrC,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,+BAA+B2C,QAC3D,SAAAN,GACI,EAAKT,SACD,CACI8S,OAAQ,WAGhB,EAAKI,kBAAkBzS,KAP/B,WAWJ,yBAAKrC,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,+BAA+B2C,QAC3D,SAAAN,GACI,EAAKT,SACD,CACI8S,OAAQ,UAGhB,EAAKI,kBAAkBzS,KAP/B,UAWJ,yBAAKrC,UAAU,oBACX,4BAAQQ,KAAK,SAASR,UAAU,+BAA+B2C,QAC3D,SAAAN,GACI,EAAKT,SACD,CACI8S,OAAQ,UAGhB,EAAKI,kBAAkBzS,KAP/B,UAWJ,yBAAKrC,UAAU,oBACX,4BAAQQ,KAAK,SAASR,UAAU,+BAA+B2C,QAC3D,SAAAN,GACI,EAAKT,SACD,CACI8S,OAAQ,cAGhB,EAAKI,kBAAkBzS,KAP/B,oBAiB3BnC,KAAKC,MAAM4U,QACZ,yBAAK/U,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAM4U,SAAS3P,KAAI,SAAA2D,GAAG,OACpC,yBAAK/I,UAAU,gCACX,kBAAC,GAAD,CAAQqP,MAAOtG,EAAKwL,OAAQ,EAAKpU,MAAM4U,QAAQhM,UAK3D,yBAAK/I,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,eAAd,yBAY5C,SACI,OACI,kBAAC,EAAD,CAAOgJ,SAAS,iB,GAjLN3I,aA0LX0C,gBAJS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZkT,QAAS/T,EAAM+T,WAEqB,KAAzBhS,CAA+B0R,I,wkBC1LxCO,G,2MACFhU,MAAQ,CACJ0C,OAAQ,KACRuR,mBAAoB,KACpBC,oBAAqB,KACrBC,OAAQ,KACRC,aAAc,MACd/D,QAAS,KACTgE,KAAM,KACNC,IAAK,KACLC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,UAAW,M,mMAIP5L,E,eACC5J,KAAKc,MAAM0C,OAAS,CACjBsK,MAAO,CACHC,KAAK,CACD0H,UAAW,CACP3P,EAAG9F,KAAKc,MAAMiU,mBACdhP,EAAG/F,KAAKc,MAAMkU,qBAElBU,SAAU,CACN5P,EAAG9F,KAAKc,MAAMuU,UACdtP,EAAG/F,KAAKc,MAAMwU,UACdK,EAAG3V,KAAKc,MAAMyU,UACdK,EAAG5V,KAAKc,MAAM0U,WAElBP,OAAO,CACHnP,EAAE9F,KAAKc,MAAMmU,OAAS,OAASjV,KAAKc,MAAMoU,cAE9CC,KAAM,CACFrP,EAAE9F,KAAKc,MAAMqU,MAEjBC,IAAK,CACDtP,EAAE9F,KAAKc,MAAMsU,MAGrB5R,OAAQxD,KAAKc,MAAM0C,OACnBuL,MAAO,K,SAIb7N,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,YAAYI,OAAOmG,G,sIAE7E,IAAD,OACN/F,uBAAa,CACT3D,MAAO,mBACP4D,QAAS,CACL,CACIC,MAAO,UACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sDACL,EAAK4S,aAAazU,KACd,EAAKM,SAAS,CACVoH,UAAU,KAHb,2CAAF,kDAAC,IAQZ,CACI/E,MAAO,iB,+BAKb,IAAD,OACL,OACI,yBAAKjE,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,0BAAMgW,SAAU,SAAA3T,GACZA,EAAEO,iBACF,EAAKqT,YAEL,kBAAC,IAAD,CACIC,KAAMhW,KAAKc,MAAMsU,IACjBa,QAAQ,uCAEZ,yBAAKnW,UAAU,YACX,yBAAKA,UAAU,qBACX,yCACA,2BAAO2G,WAAS,EAACnG,KAAK,OAAO2B,MAAOjC,KAAKc,MAAM0C,OAAQtB,SAAU,SAAAC,GAC7D,EAAKT,SAAL,MAEW,EAAKZ,MAFhB,CAGQ0C,OAAQrB,EAAEE,OAAOJ,UAG1BnC,UAAU,eAAewC,GAAG,aAGvC,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,oBACX,2BAAO0S,IAAI,gBAAX,uBACA,2BAAOlS,KAAK,OAAOR,UAAU,eAAewC,GAAG,eAAeL,MAAOjC,KAAKc,MAAMiU,mBAAoB7S,SAAU,SAAAC,GAC1G,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIiU,mBAAoB5S,EAAEE,OAAOJ,aAIzC,yBAAKnC,UAAU,oBACX,2BAAO0S,IAAI,iBAAX,wBACA,2BAAOlS,KAAK,OAAOR,UAAU,eAAewC,GAAG,gBAAgBL,MAAOjC,KAAKc,MAAMkU,oBAAqB9S,SAAU,SAAAC,GAC5G,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIkU,oBAAqB7S,EAAEE,OAAOJ,cAK9C,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,uBACX,yCACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAMmU,OAAQ/S,SAAU,SAAAC,GAC3F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEImU,OAAQ9S,EAAEE,OAAOJ,aAK7B,yBAAKnC,UAAU,uBACX,2BAAO0S,IAAI,YAAX,iBACA,2BAAOlS,KAAK,OAAOR,UAAU,eAAewC,GAAG,WAAWL,MAAOjC,KAAKc,MAAMoU,aAAchT,SAAU,SAAAC,GAChG,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIoU,aAAc/S,EAAEE,OAAOJ,cAKvC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,uBACX,6CACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAMuU,UAAWnT,SAAU,SAAAC,GAC9F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIuU,UAAWlT,EAAEE,OAAOJ,aAIhC,yBAAKnC,UAAU,uBACX,6CACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAMwU,UAAWpT,SAAU,SAAAC,GAC9F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIwU,UAAWnT,EAAEE,OAAOJ,aAIhC,yBAAKnC,UAAU,uBACX,6CACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAMyU,UAAWrT,SAAU,SAAAC,GAC9F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIyU,UAAWpT,EAAEE,OAAOJ,aAIhC,yBAAKnC,UAAU,uBACX,6CACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAM0U,UAAWtT,SAAU,SAAAC,GAC9F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEI0U,UAAWrT,EAAEE,OAAOJ,cAKpC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,uBACX,uCACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAMqU,KAAMjT,SAAU,SAAAC,GACzF,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIqU,KAAMhT,EAAEE,OAAOJ,aAK3B,yBAAKnC,UAAU,uBACX,2BAAO0S,IAAI,YAAX,OACA,2BAAOlS,KAAK,OAAOR,UAAU,eAAewC,GAAG,WAAWL,MAAOjC,KAAKc,MAAMsU,IAAKlT,SAAU,SAAAC,GACvF,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIsU,IAAKjT,EAAEE,OAAOJ,cAK9B,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,mBAAhC,sBAIXE,KAAKc,MAAMgI,SACR,kBAAC,IAAD,CAAUlH,GAAG,cAEb,Y,GA3MGzB,aAuNhB0C,gBAHS,SAAA/B,GAAK,MAAI,CAC7Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8BiS,IC5NvCoB,G,iLAEE,IAEI,GADalW,KAAKC,MAAM0B,KAAKgH,MAEzB,OACI,6BACI,kBAAC,GAAD,OAKhB,SACI,OACI,kBAAC,EAAD,CAAOG,SAAS,sB,GAdL3I,aAsBZ0C,gBAHO,SAAA/B,GAAK,MAAG,CAC1Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8BqT,I,mOCbvCC,G,2MAMFC,4B,uCAA4B,WAAMjR,GAAN,SAAAlC,EAAA,sDACxB8B,OAAOgC,OAAO,EAAK9G,MAAM+G,qBAAqB9B,IAA9C,iBAAAH,OAAA,IAAAA,CAAA,UAAkD,WAAMkC,GAAN,SAAAhE,EAAA,sDAC9CgE,EAAO/B,IAAP,uCAAW,WAAOmR,EAAenP,GAAtB,eAAAjE,EAAA,yDACJkC,EAAS3B,SAAS6S,EADd,oBAEApP,EAAOC,EAAM,GAFb,uBAGOJ,EAAgB,EAAK7G,MAAMgF,UAAUgC,EAAOC,EAAM,IAAIX,UAAU5C,WAAWwB,EAASoB,UAH3F,SAIOrF,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaA,MAAM4D,EAAOC,EAAM,IAAIzD,OAAO,CACxG8C,SAAUO,IALf,2CAAX,yDAD8C,2CAAlD,uDADwB,2C,wDAc5BwP,oB,uCAAoB,WAAMnR,GAAN,eAAAlC,EAAA,6DACV6D,EAAc,EAAK7G,MAAMgF,UAAUE,EAAS3B,QAAQ+C,UAAU5C,WAAWwB,EAASoB,UACxFN,QAAQC,IAAI,EAAKjG,MAAMgF,UAAUE,EAAS3B,QAAQ+C,SAASpB,EAAS3B,QAFpD,SAGVtC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaA,MAAM8B,EAAS3B,QAAQC,OAAO,CACxG8C,SAAUO,IAJE,2C,wDAOpByP,mB,uCAAmB,WAAMlN,GAAN,eAAApG,EAAA,6DACTgH,EAAO,IAAIC,KADF,SAEThJ,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,eAAeA,MAAM,EAAKvC,MAAM0S,cAAcnQ,MAAM,WAAWsC,KAC5H,CACIwE,MAAM,GAAD,OAAKF,EAAKG,UAAV,YAAuBH,EAAKI,WAAa,EAAzC,YAA8CJ,EAAKK,eACxDT,UAAWR,IALJ,2C,wDA4BnBvI,MAAQ,CACJ0S,kBAAcxS,EACd2O,YAAO3O,EACPmS,MAAO,EACP9J,OAAQ,I,EA0CZoK,kBAAoB,WAChB5P,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,yDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOkG,MAAM,eAAelE,GAAG,qBAAqBC,YAAY,yBAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAK+Q,eACL9O,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCgP,oBAAsB,SAAClQ,EAAOU,GAC1BL,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,4BAAK0D,KAGb,8BACI,yBAAK1D,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAACnG,KAAK,SAASkG,MAAM,eAAelE,GAAG,mBAAmBC,YAAY,eAG9F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOQ,KAAK,SAASkG,MAAM,eAAelE,GAAG,iBAAiBC,YAAY,aAGlF,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,IAKgBkR,EALVC,EAAenO,SAASC,eAAe,oBAAoBzD,MAC3DyB,EAAS+B,SAASC,eAAe,kBAAkBzD,MACjD2R,IACA,EAAKC,gBAAgBrQ,EAAOoQ,EAAalQ,EAAQ,YAAYQ,GACzDR,IAGIiQ,EADA,EAAK7S,MAAMqS,MACG,EAAKrS,MAAMqS,MAGX,EAElBQ,GAAejK,SAAShG,EAASkQ,GACjC,EAAKlS,SAAS,CACVyR,MAAOQ,MAIvBjP,MAtBR,YA4BJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhC8O,a,sBAAe,4BAAAvQ,EAAA,uDACLO,EAASiC,SAASC,eAAe,sBAAsBzD,SAEzD,EAAK6R,wBAAwBtQ,GAC7BtC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,eAAeI,OAA1E,eACKD,EAAQ,CACLsK,MAAM,CACFtK,OAAOA,EACPuL,MAAM,OARX,2C,EAcfgF,aAAe,WACXlQ,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,GAAD,CACI8J,QAAS,EAAK9I,MAAM0S,aACpBnK,OAAQ,EAAKvI,MAAMuI,OACnBJ,aAAY,uCAAE,WAAM9G,GAAN,SAAAc,EAAA,sEACJ,EAAKgG,eAAe7H,KACtB,EAAKM,SAAS,CACVoH,UAAU,KAHR,OAMVpE,IANU,2CAAF,sDAQZ0O,eAAgB,SAAAD,GACZ,EAAKC,eAAeD,IAExBA,MAAO,EAAKrS,MAAMqS,e,EAS9CxL,qBAAqB,WACjB9D,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,qBAAqBsG,KAAMwB,QAG9D,yBAAK9H,UAAU,OACX,yBAAKA,UAAU,sBACX,wDAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAO2G,WAAS,EAAEnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,0BAGpG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,sBAAsBC,YAAY,aAGzF,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKoF,kBACLnD,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhCmD,gB,sBAAkB,8BAAA5E,EAAA,yDACRO,EAASiC,SAASC,eAAe,uBAAuBzD,MACxDyB,EAAS+B,SAASC,eAAe,uBAAuBzD,OAC3DuB,EAHW,gCAIJtC,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,aAAaI,OAAxE,eAEGD,EAAQ,CACLA,OAAOA,EACP+C,SAAS,EACT7C,OAAOA,KATT,2C,uFA1UMkG,GACpB5J,KAAK0B,SAAS,CACV8R,aAAc5J,M,mKAkCdpE,EAAM,GACVT,OAAOC,KAAKhF,KAAKc,MAAMuI,QAAQnE,IAA/B,iBAAAH,OAAA,IAAAA,CAAA,UAAmC,WAAM8D,GAAN,SAAA5F,EAAA,sDAC/BuC,EAAIG,KACA,CAAIjC,OAAO,EAAK5C,MAAMuI,OAAOR,GAAKnF,OAC9BF,OAAQ,EAAK1C,MAAMuI,OAAOR,GAAKrF,OAC/B+C,SAAU,EAAKzF,MAAMuI,OAAOR,GAAKtC,SACjChD,QAAS,EAAKzC,MAAMuI,OAAOR,GAAKtF,UALT,2CAAnC,uD,SASMvD,KAAKuW,mBAAmB/Q,G,OAC9BA,EAAIN,IAAJ,+BAAAjC,EAAA,MAAQ,WAAMkC,GAAN,SAAAlC,EAAA,sEACE,EAAKmT,4BAA4BjR,GADnC,2CAAR,uDAGAK,EAAIN,IAAJ,+BAAAjC,EAAA,MAAQ,WAAMkC,GAAN,SAAAlC,EAAA,sEACE,EAAKqT,oBAAoBnR,GAD3B,2CAAR,uD,4IAUY3B,EAAQ+C,EAAU7C,EAAQH,EAAQW,GAC9C,IAAMsB,EAAMxF,KAAKc,MAAMuI,OACvB7D,EAAIG,KAAK,CACLnC,OAAQA,EACR+C,SAAUA,EACV7C,OAAQA,EACRH,QAASA,EACTW,UAAUA,IAEd,iE,2VAAA,IACOlE,KAAKc,MADZ,CAEIuI,OAAQ7D,O,2CAGKrD,GACjB,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BG,EAAiB1C,SAAS2C,uBAAuB,6FACrDJ,EAAQK,KAAKF,GAAgB,SAAUG,IACgG,GAA/HA,EAAEC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAC5GH,EAAExI,UAAY,mGAGdwI,EAAExI,UAAY,yG,0CAINqC,GAChB,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BmI,EAAgB1K,SAAS2C,uBAAuB,eACpDJ,EAAQK,KAAK8H,GAAe,SAAU7H,IACqC,GAAnEA,EAAEE,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eAChDH,EAAE8H,WAAWC,MAAMC,QAAU,OAE7BhI,EAAE8H,WAAWC,MAAMC,QAAU,a,qCAG1B6C,GACXlN,QAAQC,IAAIiN,GACZnT,KAAK0B,SAAS,CAAEyR,MAAOA,M,+BAuPjB,IAAD,OACL,IAEI,GADWnT,KAAKC,MAAM0B,KAAKgH,MAEvB,OAAK3I,KAAKc,MAAM0S,aAkDR,6BACI,yBAAK1T,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,QAAd,sBAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAK6R,qBAAqB7R,IAEhCI,YAAY,wBAK9B,yBAAKzC,UAAU,OACX,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB2C,QAASzC,KAAK+T,cAAhE,qBAIJ,yBAAKjU,UAAU,mBACX,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B2C,QAASzC,KAAK2H,sBAAxE,oBAKR,yBAAK7H,UAAU,sCACdE,KAAKC,MAAMgF,UACR,yBAAKnF,UAAU,mBACP,yBAAKA,UAAU,OACdiF,OAAOC,KAAKhF,KAAKC,MAAMgF,WAAWC,KAAI,SAAA1B,GAAM,OACzC,yBAAK1D,UAAU,mGAAmG+I,IAAK,EAAK5I,MAAMgF,UAAUzB,GAAQA,QACpJ,kBAACyQ,GAAD,CACI/I,YAAa,SAAA/I,GACT,EAAKuR,oBAAoB,EAAKzT,MAAMgF,UAAUzB,GAAQA,OAAO,EAAKvD,MAAMgF,UAAUzB,GAAQU,YAE9FV,OAAQ,EAAKvD,MAAMgF,UAAUzB,GAAQA,OACrCE,OAAQ,EAAKzD,MAAMgF,UAAUzB,GAAQE,eAMrD,yBAAK5D,UAAU,sBACX,wBAAIA,UAAU,cAAd,4BAIPE,KAAKc,MAAMgI,SACR,kBAAC,IAAD,CAAUlH,GAAG,cAEb,QA1GhB,yBAAK9B,UAAU,kBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAK+R,oBAAoB/R,IAE/BI,YAAY,yBAK9B,yBAAKzC,UAAU,OACX,4BAAQQ,KAAK,SAASR,UAAU,wBAAwB2C,QAASzC,KAAKyT,mBAAtE,qBAKPzT,KAAKC,MAAMsQ,YACZ,yBAAKzQ,UAAU,OACViF,OAAOgC,OAAO/G,KAAKC,MAAMsQ,aAAarL,KAAI,SAAA0E,GAAO,OAC9C,yBAAK9J,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,8BAA8B2C,QAAS,WACnEwD,QAAQC,IAAI0D,EAAQkE,MAAMtK,QAC1B,EAAKsQ,wBAAwBlK,EAAQkE,MAAMtK,UAE1CoG,EAAQkE,MAAMtK,aAM/B,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,cAAd,+BA6EhC,MAAOyB,GACH,OACI,kBAAC,EAAD,CAAOuH,SAAS,qB,GArdN3I,aAgepByC,GAAmB,CACrBlC,mBAEWmC,gBATS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,KACZsD,UAAWnE,EAAMmE,UACjBsL,YAAYzP,EAAMyP,YAClBvJ,oBAAoBlG,EAAMkG,uBAKUpE,GAAzBC,CAA6CsT,I,ikBC1etDK,G,2MACF1V,MAAQ,CACJ2V,QAAS,KACT7M,QAAS,KACT8M,MAAO,KACPC,OAAQ,KACRxM,MAAO,KACPyM,MAAO,M,uMAID3M,EAAO,IAAIC,K,GAEb2M,MAAO7W,KAAKc,MAAM4V,MAClBI,QAAS9W,KAAKc,MAAM8I,S,cACnB,mBAAqB5J,KAAKc,MAAMqJ,O,cAChC,gBAAkBF,EAAKG,UAAY,KAAOH,EAAKI,WAAa,GAAK,IAAMJ,EAAKK,e,sBACtEtK,KAAKc,MAAM8V,O,uBACV5W,KAAKc,MAAM6V,QANnBtC,E,WAQEnT,aAAoBkC,MAAMC,MAAMrD,KAAKC,MAAM0B,KAAK2B,KAAKD,MAAM,WAAWsC,KAAK0O,G,sIAE1E,IAAD,OACNxQ,uBAAa,CACT3D,MAAO,kBACP4D,QAAS,CACL,CACIC,MAAO,UACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sDACL,EAAK4S,aAAazU,KACd,EAAKM,SAAS,CACVoH,UAAU,KAHb,2CAAF,kDAAC,IAQZ,CACI/E,MAAO,iB,+BAKb,IAAD,OACL,OACI,yBAAKjE,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,0BAAMgW,SAAU,SAAA3T,GACZA,EAAEO,iBACF,EAAKqT,YAEL,yBAAKjW,UAAU,YACX,yBAAKA,UAAU,wBACX,0CACA,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAM8I,QAAS1H,SAAU,SAAAC,GACtG,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEI8I,QAASzH,EAAEE,OAAOJ,aAK9B,yBAAKnC,UAAU,wBACX,2BAAO0S,IAAI,YAAX,SACA,2BAAOlS,KAAK,OAAOR,UAAU,eAAewC,GAAG,WAAWL,MAAOjC,KAAKc,MAAM4V,MAAOxU,SAAU,SAAAC,GACzF,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEI4V,MAAOvU,EAAEE,OAAOJ,cAKhC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,wBACX,mDACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAM6V,OAAQzU,SAAU,SAAAC,GAC3F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEI6V,OAAQxU,EAAEE,OAAOJ,cAKjC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,wBACX,mDACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAMqJ,MAAOjI,SAAU,SAAAC,GAC1F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEIqJ,MAAOhI,EAAEE,OAAOJ,cAKhC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,wBACX,wCACA,2BAAOQ,KAAK,OAAOR,UAAU,eAAewC,GAAG,YAAYL,MAAOjC,KAAKc,MAAM8V,MAAO1U,SAAU,SAAAC,GAC1F,EAAKT,SAAL,MACO,EAAKZ,MADZ,CAEI8V,MAAOzU,EAAEE,OAAOJ,cAKhC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,iCACX,4BAAQQ,KAAK,SAASR,UAAU,mBAAhC,qBAKXE,KAAKc,MAAMgI,SACR,kBAAC,IAAD,CAAUlH,GAAG,aAEb,Y,GAnHEzB,aA+Hf0C,gBAHO,SAAA/B,GAAK,MAAG,CAC1Ba,KAAKb,EAAMa,QAEwB,KAAxBkB,CAA8B2T,ICjIvCO,G,iLAEE,IAEI,GADa/W,KAAKC,MAAM0B,KAAKgH,MAEzB,OACI,6BACI,kBAAC,GAAD,OAKhB,SACI,OACI,kBAAC,EAAD,CAAOG,SAAS,qB,GAdN3I,aAsBX0C,gBAHS,SAAA/B,GAAK,MAAK,CAC9Ba,KAAMb,EAAMa,QAEwB,KAAzBkB,CAA+BkU,ICV/BC,G,iLAZP,OACI,oCACI,uBAAGxQ,MAAM,aAAaxG,KAAKC,MAAMkF,UAChCnF,KAAKC,MAAMgH,OAAOX,OAAO,IAAItG,KAAKC,MAAMiH,MACzC,KAEA,uBAAGV,MAAM,aAAY,kBAAC,IAAD,CAAiB1G,UAAU,sBAAsBsG,KAAM6Q,Y,GAT/D9W,aCMvB+W,G,2MAEFC,yBAAyB,WACrBtT,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,qEACA,4BAAK,EAAKG,MAAMuD,UAGxB,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,OACX,qFAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,yBACV2C,QAAS,WACL,EAAK2U,mBAJb,mCAWR,yBAAKtX,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAK4U,wBACL3S,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhC0S,e,sBAAiB,sBAAAnU,EAAA,sDACbY,uBAAa,CACT3D,MAAO,qCAAqC,EAAKD,MAAMuD,OAAO,IAC9DM,QAAS,CACL,CACIC,MAAO,eACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sEACC/B,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,uBAAuBA,MAAM,EAAKpD,MAAMuD,QAAQQ,SAD5G,2CAAF,kDAAC,IAKZ,CACID,MAAO,eAZN,2C,wEAiBR,IAAD,OACJ,OACI,yBAAKjE,UAAU,wFACX,yBAAK0G,MAAM,2BACP,yBAAKA,MAAM,YAAY/D,QAASzC,KAAKmX,0BACjC,wBAAI3Q,MAAM,cAAcxG,KAAKC,MAAMuD,QAClCxD,KAAKC,MAAMgH,OAAO/B,KAAI,SAACC,EAAS+B,GAAV,OACnB,kBAAC,GAAD,CACI/B,SAAUA,EACV8B,OAAQ,EAAKhH,MAAMgH,OACnBC,MAAOA,c,GA3FN/G,aAyGlB0C,gBALS,SAAA/B,GACpB,MAAO,CACHa,KAAKb,EAAMa,QAGqB,KAAzBkB,CAA+BqU,ICzGxCI,G,2MAEFH,yBAAyB,WACrBtT,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,qEACA,4BAAK,EAAKG,MAAMuD,UAGxB,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,OACX,qFAGR,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,yBACV2C,QAAS,WACL,EAAK2U,mBAJb,mCAWR,yBAAKtX,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAK4U,wBACL3S,MALR,YAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhC0S,e,sBAAiB,sBAAAnU,EAAA,sDACbY,uBAAa,CACT3D,MAAO,qCAAqC,EAAKD,MAAMuD,OAAO,IAC9DM,QAAS,CACL,CACIC,MAAO,eACPtB,QAAQ,WAAD,4BAAE,sBAAAQ,EAAA,sEACC/B,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,uBAAuBA,MAAM,EAAKpD,MAAMuD,QAAQQ,SAD5G,2CAAF,kDAAC,IAKZ,CACID,MAAO,eAZN,2C,wEAkBb,OACI,yBAAKjE,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,eAAd,kCAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,cAAb,0J,GA5FWK,aA2GxB0C,gBALS,SAAA/B,GACpB,MAAO,CACHa,KAAKb,EAAMa,QAGqB,KAAzBkB,CAA+ByU,ICvGxCC,G,2MAcFC,iBAAiB,WACb3T,uBAAa,CACTY,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACb,OACI,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,4DAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+BACX,4GAGR,8BACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,qBACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAewC,GAAG,oBAAoBC,YAAY,wCAGjG,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,kBACf,4BAAQA,UAAU,0BAA0BwC,GAAG,wBAC3C,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GACnC,OAAO,gCAAUA,OAG7B,4BAAQrF,UAAU,0BAA0BwC,GAAG,wBAC3C,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GACnC,OAAO,gCAAUA,OAG7B,4BAAQrF,UAAU,0BAA0BwC,GAAG,wBAC3C,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GACnC,OAAO,gCAAUA,OAG7B,4BAAQrF,UAAU,0BAA0BwC,GAAG,wBAC3C,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GACnC,OAAO,gCAAUA,OAG7B,4BAAQrF,UAAU,0BAA0BwC,GAAG,wBAC3C,qCACKyC,OAAOC,KAAK,EAAK/E,MAAMgF,WAAWC,KAAI,SAAAC,GACnC,OAAO,gCAAUA,SAK7B,yBAAKrF,UAAU,YACX,yBAAKA,UAAU,8BACX,4BACIQ,KAAK,SACLR,UAAU,kBACV2C,QAAS,WACL,EAAKgV,qBACL/S,MALR,mBAWJ,yBAAK5E,UAAU,mBACX,4BACIA,UAAU,uBACV2C,QAAS,WACLiC,MAHR,qB,EAiBhC+S,mB,sBAAoB,8BAAAxU,EAAA,6DACZuC,EAAI,GACFhC,EAASiC,SAASC,eAAe,qBAAqBzD,MACtC,CAClBwD,SAASC,eAAe,wBAAwBzD,MAChDwD,SAASC,eAAe,wBAAwBzD,MAChDwD,SAASC,eAAe,wBAAwBzD,MAChDwD,SAASC,eAAe,wBAAwBzD,MAChDwD,SAASC,eAAe,wBAAwBzD,OAErCiD,IAAf,+BAAAjC,EAAA,MAAmB,WAAMyU,GAAN,SAAAzU,EAAA,sDACD,MAAXyU,GACClS,EAAIG,KAAK+R,GAFE,2CAAnB,uDAVgB,SAeVxW,aAAoBkC,MAAMC,MAAM,EAAKpD,MAAM0B,KAAK2B,KAAKD,MAAM,uBAAuBI,OAAlF,eACDD,EAAQgC,IAhBG,2C,4EApGPrD,GACT,IAAI6F,EAAUC,MAAMC,UAAUF,QAC1BG,EAAiB1C,SAAS2C,uBAAuB,QACrDJ,EAAQK,KAAKF,GAAgB,SAAUG,GACnCrC,QAAQC,OACuF,GAA3FoC,EAAEC,SAAS,GAAGA,SAAS,GAAGC,UAAUC,cAAcC,OAAOvG,EAAEE,OAAOJ,MAAMwG,eACxEH,EAAExI,UAAY,cAGdwI,EAAExI,UAAY,mB,+BA8GhB,IAAD,OACLmG,QAAQC,IAAIlG,KAAKC,MAAM0B,KAAK2B,KAC5B,IAEI,GADatD,KAAKC,MAAM0B,KAAKgH,MAEzB,OAAI3I,KAAKC,MAAM+G,oBAGP,6BACI,yBAAKlH,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,kBACX,8BACI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iCACX,2BAAO2G,WAAS,EAACnG,KAAK,OAAOR,UAAU,eAAeoC,SAClD,SAAAC,GACI,EAAKyG,aAAazG,IAExBI,YAAY,wBAK9B,yBAAKzC,UAAU,OACX,4BAAQQ,KAAK,SAASR,UAAU,6BAA6B2C,QAASzC,KAAKwX,kBAA3E,iCAKR,yBAAK1X,UAAU,OACViF,OAAOC,KAAKhF,KAAKC,MAAM+G,qBAAqB9B,KAAI,SAAAyS,GAAY,OACzD,kBAAC,GAAD,CACInU,OAAQmU,EACR1Q,OAAQ,EAAKhH,MAAM+G,oBAAoB2Q,YAY/D,kBAAC,GAAD,MAKhB,SACI,OACI,kBAAC,EAAD,CAAO7O,SAAS,iB,GA9KE3I,aAyLnB0C,gBANS,SAAA/B,GAAK,MAAK,CAC1ByJ,QAASzJ,EAAMyJ,QACf5I,KAAMb,EAAMa,KACZsD,UAAUnE,EAAMmE,UAChB+B,oBAAoBlG,EAAMkG,uBAEM,KAAzBnE,CAA+B0U,ICvLxCK,I,kNACF9W,MAAQ,CACJ+W,UAAS,EACTrU,OAAO,CACHc,WAAMtD,EACN8W,aAAQ9W,GAEZD,KAAK,CACDuD,WAAMtD,EACN8W,SAAQ,GAEZ7W,SAAS,CACLqD,WAAMtD,EACN8W,aAAQ9W,I,qMAIThB,KAAKc,MAAM0C,OAAOc,OAAStE,KAAKc,MAAMC,KAAKuD,OAAStE,KAAKc,MAAMG,SAASqD,O,uBACvEtE,KAAKC,MAAMU,WAAU,G,SACfO,SAAgB6W,+BAA+B/X,KAAKc,MAAMC,KAAKuD,MAAOtE,KAAKc,MAAMG,SAASqD,OAAOlD,KAAjG,uCAAsG,WAAMgD,GAAN,SAAAnB,EAAA,sDACxGmB,EAAOzC,KAAKqW,cAAc,CACtBpM,YAAY,EAAK9K,MAAM0C,OAAOc,QAElCF,EAAOzC,KAAKsW,wBAAwB3W,OAAM,SAAAC,GACtC0E,QAAQC,IAAI3E,MAEhBL,SAAgBgX,UAPwF,2CAAtG,uDASL5W,OAAM,SAAAC,GACH0E,QAAQC,IAAI3E,GACZ,EAAKG,SAAS,CACVX,KAAK,CACD+W,SAAQ,Q,6BAMpBtW,MAAM,uB,uIAGHC,GACPzB,KAAK0B,SACD,CACIX,KAAK,CACDuD,MAAM7C,EACNqW,SAAQ,O,iCAKbrW,GACPzB,KAAK0B,SACD,CACIT,SAAS,CACLqD,MAAM7C,EACNqW,SAAQ,O,mCAKXrW,GACTzB,KAAK0B,SACD,CACI8B,OAAO,CACHc,MAAM7C,EACNqW,SAAQ,KAIhBrW,GACAzB,KAAK0B,SAAS,CACV8B,OAAO,CACHsU,SAAQ,O,+BAKd,IAAD,OACL,OACI,6BACK9X,KAAKC,MAAM0B,KACR,kBAAC,IAAD,CAAUC,GAAI,MAEd,yBAAK9B,UAAU,yBACVE,KAAKc,MAAMe,QACR,yBAAK/B,UAAU,OACVE,KAAKc,MAAMe,QAAU,kBAAC,EAAD,MAAqB,MAG/C,kBAAC,WAAD,KACI,yBAAK/B,UAAU,OACX,yBAAKA,UAAU,+BACX,yBAAKgC,OAAO,QAAQC,IAAKC,QAGjC,yBAAKlC,UAAU,OACX,yBAAKA,UAAU,6DACX,0BAAMA,UAAU,mBAAmBqY,YAAU,GACzC,yBAAKrY,UAAU,YACX,yBAAKA,UAAU,qBACX,kDACA,2BACIsY,UAAQ,EACR3R,WAAS,EACTnG,KAAK,OACLR,UAAWE,KAAKc,MAAM0C,OAAOsU,QAAU,wBAA0B,0BACjExV,GAAG,cACHJ,SAAU,SAAAC,GACN,EAAKkW,aAAalW,EAAEE,OAAOJ,QAE/BM,YAAY,oBAEhB,yBAAKzC,UAAU,kBAAf,eAGA,yBAAKA,UAAU,oBAAf,kCAKR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,qBACX,wCACA,2BACIsY,UAAQ,EACRnW,MAAOjC,KAAKc,MAAMC,KAAKuD,MACvBhE,KAAK,QACL4B,SAAU,SAAAC,GACN,EAAKC,WAAWD,EAAEE,OAAOJ,QAE7BnC,UAAWE,KAAKc,MAAMC,KAAK+W,QAAU,eAAiB,0BACtDxV,GAAG,aACHC,YAAY,UAEhB,yBAAKzC,UAAU,oBAAf,8CAKR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,qBACX,2CACA,2BACIsY,UAAQ,EACRnW,MAAOjC,KAAKc,MAAMG,SAASqD,MAC3BhE,KAAK,WACL4B,SAAU,SAAAC,GACN,EAAKK,WAAWL,EAAEE,OAAOJ,QAE7BnC,UAAWE,KAAKc,MAAMG,SAAS6W,QAAU,wBAA0B,0BACnExV,GAAG,gBACHC,YAAY,eAIxB,yBAAKzC,UAAU,OACX,yBAAKA,UAAU,sBACX,2GAGR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iCACX,kBAAC,IAAD,CAAM8B,GAAG,cACL,4BACItB,KAAK,SACLmC,QAAS,SAAAN,GACLA,EAAEO,iBACF,EAAK4V,aAETxY,UAAU,mBANd,mC,GApKjCK,cAiMjByC,GAAqB,CACvBrC,aACAC,iBACAG,YACAC,sBAEWiC,gBAZS,SAAA/B,GACpB,MAAO,CACHa,KAAMb,EAAMa,KACZE,QAASf,EAAMe,WASiBe,GAAzBC,CAA6C+U,IC7LtDW,G,2MAEFC,O,sBAAS,sBAAAvV,EAAA,sEACC/B,SAAgBgX,UADjB,OAELvF,OAAO8F,SAASC,SAFX,2C,kHAIOpW,G,mFACZtC,KAAKC,MAAMU,WAAU,G,SACMO,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,a,qBACxDsV,GAAG,SAAS,SAAAC,GACrB,EAAK3Y,MAAM4Y,aAAaD,EAASE,U,SAEZ5X,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,W,qBACxDsV,GAAG,SAAS,SAAAC,GACnB,EAAK3Y,MAAM8Y,WAAWH,EAASE,U,UAET5X,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,Y,sBACxDsV,GAAG,SAAS,SAAAC,GACpB,EAAK3Y,MAAM+Y,YAAYJ,EAASE,U,UAEP5X,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,e,sBACxDsV,GAAG,SAAS,SAAAC,GACvB,EAAK3Y,MAAMgZ,eAAeL,EAASE,U,UAEf5X,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,U,sBACxDsV,GAAG,SAAS,SAAAC,GAClB,EAAK3Y,MAAMiZ,UAAUN,EAASE,U,UAEG5X,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,uB,sBACxDsV,GAAG,SAAS,SAAAC,GAC/B,EAAK3Y,MAAMkZ,uBAAuBP,EAASE,U,UAEtB5X,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,W,sBACxDsV,GAAG,SAAS,SAAAC,GACnB,EAAK3Y,MAAMmZ,WAAWR,EAASE,U,UAET5X,aAAoBkC,MAAMC,MAAMf,GAAIe,MAAM,Y,eACxDsV,GAAG,SAAS,SAAAC,GACpB,EAAK3Y,MAAMoZ,YAAYT,EAASE,OAChC,EAAK7Y,MAAMU,WAAU,M,uQAIrBiM,EAAQ,G,SACc1L,YAAmBkC,MAAMC,MAAM,YAAYiW,U,OAA/DC,E,OACNxU,OAAOgC,OAAOwS,EAAYC,OAAOtU,IAAjC,iBAAAH,OAAA,IAAAA,CAAA,UAAqC,WAAMhC,GAAN,SAAAE,EAAA,sEAC3BF,EAAOqE,iBAAiBhG,MAAK,SAAAiG,GAC/BuF,EAAMjH,KAAK,CACPnC,OAAOT,EAAOmK,KAAKwF,MAAM,EAAE3P,EAAOmK,KAAKD,QAAQ,MAC/C5F,IAAIA,OAJqB,2CAArC,uDAQArH,KAAKC,MAAMwZ,YAAYF,EAAYC,O,gQAGnCtY,SAAgBwY,mBAAhB,uCAAmC,WAAM/X,GAAN,SAAAsB,EAAA,0DAC3BtB,EAD2B,gCAErB,EAAKqQ,UAAUrQ,EAAK2B,KAFC,uBAGrB,EAAKqW,gBAHgB,OAI3B,EAAK1Z,MAAMM,WAAWoB,GAJK,OAM/B,EAAK1B,MAAMW,oBAAmB,GANC,2CAAnC,uD,qQAUMZ,KAAK4Z,e,qIAGX,OACI,oCAEQ5Z,KAAKC,MAAM4Z,iBACP,oCACI,kBAAC,EAAD,CAAgB3Z,MAAM,4BAG1B,yBAAKJ,UAAU,OACTE,KAAKC,MAAM0B,KAOT,oCACK3B,KAAKC,MAAM4B,QACR,kBAAC,EAAD,CAAgB3B,MAAM,+BAErBF,KAAKC,MAAM0B,KAAKmY,cACjB,oCACI,kBAAC,GAAD,CAAQnY,KAAM3B,KAAKC,MAAM0B,KAAMuJ,YAAalL,KAAKwY,SAChDvS,QAAQC,IAAIlG,KAAKC,MAAM0B,MACvB3B,KAAKC,MAAMsI,UAGfvI,KAAKwY,UAjBbxY,KAAKC,MAAM4X,SACZ,kBAAC,GAAD,MAEA,kBAAC,EAAD,Y,GAlFX1X,aAmHfyC,GAAqB,CACvBiW,a3C7IwB,SAAAxY,GACxB,MAAO,CACHC,KAAM,WACNyZ,QAAQ,YACR1Z,Y2C0IJ0Y,W3ChIsB,SAAA1Y,GACtB,MAAO,CACHC,KAAM,WACNyZ,QAAQ,UACR1Z,Y2C6HJ2Y,Y3CpHuB,SAAA3Y,GACvB,MAAO,CACHC,KAAM,WACNyZ,QAAQ,WACR1Z,Y2CiHJ4Y,e3C9G0B,SAAA5Y,GAC1B,MAAO,CACHC,KAAM,WACNyZ,QAAQ,cACR1Z,Y2C2GJgZ,Y3CxGuB,SAAAhZ,GACvB,MAAO,CACHC,KAAM,WACNyZ,QAAQ,WACR1Z,Y2CqGJ8Y,uB3C3IkC,SAAA9Y,GAClC,MAAO,CACHC,KAAM,WACNyZ,QAAQ,wBACR1Z,Y2CwIJoZ,Y3C9HuB,SAAApZ,GACvB,MAAO,CACHC,KAAM,eACND,Y2C4HJ6Y,U3CpGqB,SAAA7Y,GACrB,MAAO,CACHC,KAAM,WACNyZ,QAAQ,SACR1Z,Y2CiGJ+Y,W3C9FsB,SAAA/Y,GACtB,MAAO,CACHC,KAAM,WACNyZ,QAAQ,UACR1Z,Y2C2FJD,gBACAG,aACAI,YACAC,sBAEWiC,gBAvBS,SAAA/B,GAAK,MAAK,CAC9Be,QAASf,EAAMe,QACfF,KAAMb,EAAMa,KACZkW,SAAS/W,EAAM+W,SACfgC,iBAAiB/Y,EAAM+Y,iBACvB1H,WAAYrR,EAAMqR,WAClBlN,UAAUnE,EAAMmE,aAiBoBrC,GAAzBC,CAA6C0V,ICxF7CyB,OAzCf,WAcI,OAJK9Y,OAAcoF,QACfpF,gBAViB,CACjBgL,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAOT,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyN,OAAK,EAACC,KAAK,IAAIC,UAAWtZ,IACjC,kBAAC,IAAD,CAAOoZ,OAAK,EAACC,KAAK,YAAYC,UAAWvC,KACzC,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,aAAaC,UAAW1S,IAC1C,kBAAC,IAAD,CAAOwS,OAAK,EAACC,KAAK,WAAWC,UAAWpQ,IACxC,kBAAC,IAAD,CAAOkQ,OAAK,EAACC,KAAK,eAAeC,UAAW3P,IAC5C,kBAAC,IAAD,CAAOyP,OAAK,EAACC,KAAK,kBAAkBC,UAAWxP,IAC/C,kBAAC,IAAD,CAAOsP,OAAK,EAACC,KAAK,cAAcC,UAAWrP,IAC3C,kBAAC,IAAD,CAAOmP,OAAK,EAACC,KAAK,YAAYC,UAAWxJ,KACzC,kBAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,eAAeC,UAAWpK,KAC5C,kBAAC,IAAD,CAAOkK,OAAK,EAACC,KAAK,YAAYC,UAAWpJ,KACzC,kBAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,UAAUC,UAAWxI,KACvC,kBAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,uBAAuBC,UAAW5C,KACpD,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,mBAAmBC,UAAWpI,KAChD,kBAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,cAAcC,UAAW5G,KAC3C,kBAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,eAAeC,UAAWhE,KAC5C,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,gBAAgBC,UAAWjE,KAC7C,kBAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,WAAWC,UAAW5F,KACxC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,eAAeC,UAAWpD,SCjDpCqD,QACW,cAA7BzH,OAAO8F,SAAS4B,UAEe,UAA7B1H,OAAO8F,SAAS4B,UAEhB1H,OAAO8F,SAAS4B,SAASC,MACvB,2D,0kBClBN,IAmHeC,GAnHC,SAACzZ,EAAO0Z,GACpB,OAAQA,EAAOla,MACX,IAAK,WACD,OAAQka,EAAOT,SACX,IAAK,YACD,OAAO,MACAjZ,EADP,CAEImE,UAAWuV,EAAOna,UAG1B,IAAK,wBACD,OAAO,MACAS,EADP,CAEIkG,oBAAqBwT,EAAOna,UAGpC,IAAK,UACD,OAAO,MACAS,EADP,CAEIyJ,QAASiQ,EAAOna,UAGxB,IAAK,WACD,OAAO,MACAS,EADP,CAEI8P,SAAU4J,EAAOna,UAGzB,IAAK,cACD,OAAO,MACAS,EADP,CAEIyP,YAAaiK,EAAOna,UAG5B,IAAK,WACD,OAAO,MACAS,EADP,CAEIsQ,SAAUoJ,EAAOna,UAGzB,IAAK,SACD,OAAO,MACAS,EADP,CAEI+Q,OAAQ2I,EAAOna,UAGvB,IAAK,UACD,OAAO,MACAS,EADP,CAEI+T,QAAS2F,EAAOna,UAM5B,MACJ,IAAK,iBAML,IAAK,eACD,OAAO,MACAS,EADP,CAEI2Z,SAAUD,EAAOna,UAGzB,IAAK,sBACD,OAAO,MACAS,EADP,CAEI+Y,iBAAkBW,EAAOna,UAGjC,IAAK,aACD,OAAO,MACAS,EADP,CAEIe,QAAS2Y,EAAOna,UAGxB,IAAK,cACD,OAAO,MACAS,EADP,CAEIa,KAAM6Y,EAAOna,UAGrB,IAAK,kBACD,OAAO,MACAS,EADP,CAEI+W,SAAU2C,EAAOna,UAGzB,IAAK,iBACD,OAAO,MACAS,EADP,CAEI8I,QAAS4Q,EAAOna,UAGxB,IAAK,mBACD,OAAO,MACAS,EADP,CAEIuO,UAAWmL,EAAOna,UAG1B,IAAK,iBACD,OAAO,MACAS,EADP,CAEIqQ,QAASqJ,EAAOna,UAGxB,QACI,OAAOS,IC1Fb4Z,GAAQC,aAAYJ,GAVP,CACf1C,UAAS,EACThW,SAAS,EACTN,MAAO,KACPsY,kBAAkB,EAClBpY,KAAK,CACDwD,UAAU,MAMlB2V,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,GAAD,OAEJjV,SAASC,eAAe,SFsGtB,kBAAmBoV,WACrBA,UAAUC,cAAcC,MAAM5Z,MAAK,SAAA6Z,GACjCA,EAAaC,iB,6DGnInBvb,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.31215f14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/projectManagement.6d29eb92.jpg\";","import React, { Component } from \"react\"\r\nimport \"./styles/SpinnerLoading.css\"\r\n\r\nclass SpinnerLoading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <div className=\"spinner-border text-light\" role=\"status\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h3 className=\"text-white text-center mt-4\">{this.props.title}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SpinnerLoading","export const getProductos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'productos',\r\n        payload\r\n    }\r\n}\r\nexport const getCadenasDeProduccion = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'cadenas de produccion',\r\n        payload\r\n    }\r\n}\r\nexport const getPedidos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'pedidos',\r\n        payload\r\n    }\r\n}\r\nexport const getImagenes = payload => {\r\n    return {\r\n        type: \"GET_IMAGENES\",\r\n        payload\r\n    }\r\n}\r\nexport const getClientes = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'clientes',\r\n        payload\r\n    }\r\n}\r\nexport const getProveedores = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'proveedores',\r\n        payload\r\n    }\r\n}\r\nexport const getExpresos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'expresos',\r\n        payload\r\n    }\r\n}\r\nexport const getDeudas = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'deudas',\r\n        payload\r\n    }\r\n}\r\nexport const getCheques = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'cheques',\r\n        payload\r\n    }\r\n}\r\nexport const getDocumentos = payload => {\r\n    return {\r\n        type: \"GET_DOCUMENTOS\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeUser = payload => {\r\n    return {\r\n        type: \"CHANGE_USER\",\r\n        payload\r\n    }\r\n}\r\nexport const changeRegistro = payload => {\r\n    return {\r\n        type: \"CHANGE_REGISTRO\",\r\n        payload\r\n    }\r\n}\r\nexport const changeCliente = payload => {\r\n    return {\r\n        type: \"CHANGE_CLIENTE\",\r\n        payload\r\n    }\r\n}\r\nexport const changeProveedor = payload => {\r\n    return {\r\n        type: \"CHANGE_PROVEEDOR\",\r\n        payload\r\n    }\r\n}\r\nexport const changeExpreso = payload => {\r\n    return {\r\n        type: \"CHANGE_EXPRESO\",\r\n        payload\r\n    }\r\n}\r\nexport const isLoading = payload => {\r\n    return {\r\n        type: \"IS_LOADING\",\r\n        payload\r\n    }\r\n}\r\nexport const recuperandoUsuario = payload => {\r\n    return {\r\n        type: \"RECUPERANDO_USUARIO\",\r\n        payload\r\n    }\r\n}","import React, { Component, Fragment } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport withFirebaseAuth from \"react-with-firebase-auth\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase/app\"\r\nimport Logo from \"../images/logo.png\"\r\nimport \"./styles/Login.css\"\r\nimport {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        mail: undefined,\r\n        password: undefined\r\n    }\r\n    async logIn() {\r\n        this.props.isLoading(true)\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.mail, this.state.password).then(success => {\r\n            this.props.isLoading(false)\r\n        })\r\n            .catch(error => {\r\n                alert(\"El usuario o la contraseña son incorrectas\")\r\n                this.props.isLoading(false)\r\n            })\r\n\r\n    }\r\n    updateMail(data) {\r\n        this.setState(\r\n            {\r\n                mail: data\r\n            }\r\n        )\r\n    }\r\n    updatePass(data) {\r\n        this.setState(\r\n            {\r\n                password: data\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.user ?\r\n                    <Redirect to={\"/productos\"} />\r\n                    :\r\n                    <div className=\"container-fluid login\">\r\n                        {this.state.loading ?\r\n                            <div className=\"row\">\r\n                                {this.state.loading ? <SpinnerLoading /> : null}\r\n                            </div>\r\n                            :\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 text-center\">\r\n                                        <img height=\"125px\" src={Logo} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n                                        <form>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Email</label>\r\n                                                    <input value={this.state.mail} type=\"email\" onChange={e => {\r\n                                                        this.updateMail(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Password</label>\r\n                                                    <input value={this.state.password} type=\"password\" onChange={e => {\r\n                                                        this.updatePass(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Productos\">\r\n                                                        <button type=\"submit\" onClick={e => {\r\n                                                            e.preventDefault()\r\n                                                            this.logIn()\r\n                                                        }} className=\"btn btn-success\">Ingresar Ahora!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Registro\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={()=>{\r\n                                                            this.props.changeRegistro(true)\r\n                                                        }}>Crear Una Cuenta!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        loading: state.loading,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes,faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Product extends Component {\r\n    state={\r\n        imagen:undefined\r\n    }\r\n    async alertSumarCantidad(nombre, cantidad) {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Aumentar cantidad de {nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row align-items-center\">\r\n                                <div className=\"col-12 form-group text-left\">\r\n                                    <div class=\"checkbox\">\r\n                                        <label className='text-dark'><input type=\"checkbox\" className='mr-2'id='checkboxRespetarCadena'/>Respetar Cadena de Produccion?</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                        <input \r\n                                            autoFocus\r\n                                            type=\"number\" \r\n                                            className=\"form-control\"\r\n                                            id='inputAgregarCantidad'\r\n                                            placeholder=\"Ingresar cantidad\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        className='btn btn-success'\r\n                                        onClick={async () => {\r\n                                            await this.sumarArticulo(\r\n                                                nombre,\r\n                                                cantidad,\r\n                                                this.props.seccion\r\n                                            ).then(()=>{\r\n                                                onClose();\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        Agregar Cantidad\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    async sumarArticulo(nombre, cantidadActual, seccion) {\r\n        const respetarCadena = document.getElementById('checkboxRespetarCadena').checked\r\n        const nuevaCantidad = parseFloat(document.getElementById('inputAgregarCantidad').value)\r\n        if(respetarCadena){\r\n            Object.values(this.props.cadenasDeProduccion).map(async cadena=>{\r\n                cadena.map(async (articulo,index)=>{\r\n                    if(nombre===articulo){\r\n                        if(cadena[index-1]){\r\n                            const cantidadVieja=this.props.productos[cadena[index-1]].cantidad\r\n                            await firebase.database().ref().child(this.props.user.uid).child('productos').child(cadena[index-1]).update(\r\n                            {\r\n                                cantidad: cantidadVieja - nuevaCantidad\r\n                            })\r\n                        }\r\n                    }   \r\n                })\r\n            })\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child(seccion).child(nombre).update({\r\n            cantidad: (parseFloat(cantidadActual) + nuevaCantidad)\r\n        })\r\n    }\r\n    cambiarPrecio = async () =>{\r\n        const nuevoPrecio = prompt(\"Ingresar el nuevo precio del producto\")\r\n        if(nuevoPrecio){\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).update({\r\n                precio: parseFloat(nuevoPrecio)\r\n            })\r\n        }\r\n    }\r\n    eliminarProducto = async () =>{\r\n        confirmAlert({\r\n            title: 'Eliminar Producto?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).remove()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    eliminarEnlace = async (nombre,disminuye,enlace) =>{\r\n        confirmAlert({\r\n            title: 'Eliminar Enlace Con '+nombre+'?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        const result = disminuye.filter(valor => valor!==enlace);\r\n                        const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(nombre)\r\n                        await datosRef.update({\r\n                                disminuye:result\r\n                        }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    async componentDidMount(){\r\n        if(this.props.user.uid==='RSKNrihne8TnWCEvFah4oVx1Bdm1'){\r\n            await firebase.storage().ref().child('imagenes').child(this.props.nombre+'.png').getDownloadURL().then(url=>{\r\n                this.setState({\r\n                    imagen:url\r\n                })\r\n            })\r\n        }\r\n    }\r\n    alertConvertirEnProductoSimple=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            let compuestoPor=[]\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Hacer de {this.props.nombre} un producto simple?</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <p>Esta accion es irreversible y si continua se perderan las relaciones entre los productos</p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            this.convertirEnProductoSimple()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Convertir en Producto Simple\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    convertirEnProductoSimple= async ()=>{\r\n        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).update({\r\n            esElaborado:false,\r\n            compuestoPor:null\r\n        })\r\n    }\r\n    alertConvertirEnProductoCompuesto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            let compuestoPor=[]\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Hacer De {this.props.nombre} un Producto Compuesto?</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <p>El producto compuesto es ideal para combos, promociones o tambien para aquellos conformados por dos o mas productos pero se venden juntos.</p>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <p>Es decir que al vender uno de estos se modificara la cantidad de existencias de los productos que forman parte.</p>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <p>Para comenzar seleccione dos articulo que formen parte del producto compuesto</p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col form-group\">\r\n                            <select className=\"form-control\" id='inputProductoCompuesto1' >\r\n                                <option>-</option>\r\n                                    {Object.keys(this.props.productos).map(articulo=>{\r\n                                        if(!this.props.productos[this.props.nombre].compuestoPor){\r\n                                            compuestoPor=[]\r\n                                        }\r\n                                        if(!compuestoPor.includes(articulo)){\r\n                                           return <option >{articulo}</option>\r\n                                        }\r\n                                    })}\r\n                            </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col form-group\">\r\n                            <select className=\"form-control\" id='inputProductoCompuesto2' >\r\n                                <option>-</option>\r\n                                    {Object.keys(this.props.productos).map(articulo=>{\r\n                                        if(!this.props.productos[this.props.nombre].compuestoPor){\r\n                                            compuestoPor=[]\r\n                                        }\r\n                                        if(!compuestoPor.includes(articulo)){\r\n                                           return <option >{articulo}</option>\r\n                                        }\r\n                                    })}\r\n                            </select>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.convertirEnProductoCompuesto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Aceptar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    alertAgregarCompuestoPor=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            let compuestoPor=this.props.productos[this.props.nombre].compuestoPor\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Seleccionar un producto para incluirlo en {this.props.nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col form-group\">\r\n                            <select className=\"form-control\" id='inputAgregarCompuestoPor' >\r\n                                <option>-</option>\r\n                                    {Object.keys(this.props.productos).map(articulo=>{\r\n                                        if(!this.props.productos[this.props.nombre].compuestoPor){\r\n                                            compuestoPor=[]\r\n                                        }\r\n                                        if(!compuestoPor.includes(articulo)){\r\n                                           return <option >{articulo}</option>\r\n                                        }\r\n                                    })}\r\n                            </select>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarCompuestoPor()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarCompuestoPor= async ()=>{\r\n        let arr=this.props.productos[this.props.nombre].compuestoPor\r\n        const compuestoPor = document.getElementById('inputAgregarCompuestoPor').value\r\n        if(compuestoPor){\r\n            arr.push(compuestoPor)\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).update({\r\n                compuestoPor:arr\r\n            })\r\n        }\r\n    }\r\n    convertirEnProductoCompuesto= async ()=>{\r\n        const producto1 = document.getElementById('inputProductoCompuesto1').value\r\n        const producto2 = document.getElementById('inputProductoCompuesto2').value\r\n        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).update({\r\n            esElaborado:true,\r\n            compuestoPor:{\r\n                0:producto1,\r\n                1:producto2\r\n            }\r\n        })\r\n    }\r\n    alertConfiguracionProducto=(nombre)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    {console.log(this.props.productos[this.props.nombre])}\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Configuracion Del Producto</h1>\r\n                                <h3>{nombre}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col form-group\">\r\n                                {this.props.productos[this.props.nombre].esElaborado?\r\n                                (this.props.productos[this.props.nombre].compuestoPor?\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h3>Compuesto Por</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.props.productos[this.props.nombre].compuestoPor?\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col text-center\">\r\n                                                    {this.props.productos[this.props.nombre].compuestoPor.map(articulo=>(\r\n                                                            <h5>\r\n                                                                <span className='badge badge-pill badge-info'>{articulo} \r\n                                                                    <FontAwesomeIcon onClick={()=>{this.eliminarCompuestoPor(articulo)}}className=\" ml-1 timesIcon\" icon={faTimes}  />\r\n                                                                </span> \r\n                                                            </h5>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                        :\r\n                                        null\r\n                                        }\r\n                                        <div className=\"row mt-4 align-items-center\">\r\n                                            <div className=\"col text-center\">\r\n                                                <button type='button' className='btn btn-outline-success' onClick={this.alertAgregarCompuestoPor}>Agregar Producto a la Composicion</button>                                \r\n                                            </div>\r\n                                            <div className=\"col text-center\">\r\n                                                <button type='button' className='btn btn-outline-danger' onClick={this.alertConvertirEnProductoSimple}>Convertir En Producto Simple</button>                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                )\r\n                                :\r\n                                <div className=\"col-12 text-center\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={this.alertConvertirEnProductoCompuesto} >Convertir En Producto Compuesto</button>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col text-right\">\r\n                                    <button\r\n                                        className='btn btn-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cerrar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarCompuestoPor = async (compuestoPor) =>{\r\n        confirmAlert({\r\n            title: 'Eliminar '+this.props.nombre+' de la composicion del producto?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        const result = this.props.productos[this.props.nombre].compuestoPor.filter(valor => valor!==compuestoPor);\r\n                        console.log(result)\r\n                        if(result.length){\r\n                            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre)\r\n                            await datosRef.update({\r\n                                    compuestoPor:result\r\n                            }\r\n                            )\r\n                        }\r\n                        else{\r\n                            this.convertirEnProductoSimple()\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container product bg-dark\">\r\n                <div className=\"row\">\r\n                    <div className=\"col bodyProduct\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 mt-2 text-center\">\r\n                                    <h5 className=\"colorWhite nombreProducto \" onClick={e=>{\r\n                                        this.alertConfiguracionProducto(this.props.nombre)\r\n                                    }}>{this.props.nombre}</h5>\r\n                                    <FontAwesomeIcon className=\"deleteIcon\" icon={faTrash} onClick={this.eliminarProducto} />\r\n                                </div>\r\n                            </div>\r\n                            {this.state.imagen?\r\n                                <div className=\"row mt-2 mb-2\">\r\n                                    <div className=\"container img\">\r\n                                            <img \r\n                                            src={this.state.imagen} \r\n                                            className=\"productImg\" alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                            :\r\n                                null\r\n                            }\r\n                            <div className=\"row\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Cantidad</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">{this.props.cantidad}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Precio</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">$ {this.props.precio}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={async () => {\r\n                            await this.alertSumarCantidad(\r\n                                this.props.nombre,\r\n                                this.props.cantidad,\r\n                            )\r\n                        }}>\r\n                            Agregar Cantidad!\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={this.cambiarPrecio}>\r\n                            Modificar Precio!\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.user,\r\n        productos:state.productos,\r\n        cadenasDeProduccion:state.cadenasDeProduccion\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Product)","import React, { Component } from \"react\"\r\nimport {Link} from 'react-router-dom'\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFrownOpen,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport \"./Styles/ProductList.css\"\r\nimport { tsObjectKeyword } from \"@babel/types\";\r\n\r\nclass ProductList extends Component {\r\n    state={nuevaCategoria:false}\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-none align-items-center\"\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n\r\n    alertAgregarProducto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input  autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarProducto = async () =>{\r\n        const nombre = document.getElementById('nombreNuevoProducto').value\r\n        const precio = document.getElementById('precioNuevoProducto').value\r\n        if(nombre){\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\r\n                {\r\n                    [nombre]:{\r\n                        nombre:nombre,\r\n                        cantidad:0,\r\n                        precio:precio\r\n                    }\r\n                }\r\n            )\r\n        }        \r\n    }\r\n    alertGuia = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faFrownOpen}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>No hay productos</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p> Ingrese una categoria para su nuevo producto ej: Pelotas, Remeras, Accesorios, etc\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                    <p>Ingrese el nombre y precio de un producto para poder comenzar a utilizar el Control De Stock\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                {!this.props.productos?\r\n                                <>\r\n                                    {this.alertGuia()}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                            <h1 className='text-white'>Aun no hay ningun producto!</h1>\r\n                                        </div>\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertAgregarProducto}>\r\n                                            Agregar nuevo Producto!\r\n                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"row align-middle\">\r\n                                        <div className=\"col text-center\">\r\n                                            <Link to=\"/CadenasDeProduccion\">\r\n                                                <button type=\"button\" className=\"btn btn-light\">\r\n                                                    Cadenas De Produccion\r\n                                                </button>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-center\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col text-center\">\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.alertAgregarProducto}>\r\n                                                Agregar nuevo Producto!\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.productos).map(nombre=>(\r\n                                            <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={this.props.productos[nombre].nombre}>\r\n                                                <Product disminuye={this.props.productos[nombre].disminuye} nombre={this.props.productos[nombre].nombre} precio={this.props.productos[nombre].precio}  cantidad={this.props.productos[nombre].cantidad} seccion=\"productos\" />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        productos: state.productos,\r\n        user: state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(ProductList)","import React, { Component, Fragment } from \"react\"\r\n\r\nclass PedidoItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 text-left\">\r\n                        <h5>{this.props.nombre}</h5>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <h5>{this.props.cantidad}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoItem","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraPedido extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.enviarPedido}><FontAwesomeIcon icon={faCheck} /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <span className=\"badge badge-light\">\r\n                        <h4>$ {this.props.precio}</h4>\r\n                    </span>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.eliminarPedido}><FontAwesomeIcon icon={faTimes}  /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraPedido","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PedidoItem from \"./PedidoItem\"\r\nimport BotoneraPedido from \"./BotoneraPedido\"\r\nimport \"./styles/Pedido.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nimport {changeCliente} from '../actions/index'\r\nclass Pedido extends Component {\r\n    state = {\r\n        pedido: [],\r\n\r\n    }\r\n    async restarProducto(producto,cantidad, nuevaCantidad,compuestoPor) {\r\n        console.log(producto, nuevaCantidad)\r\n        if(compuestoPor){\r\n            compuestoPor.map(async componente=>{\r\n                const cantidadComponente = this.props.productos[componente].cantidad-=nuevaCantidad\r\n                await firebase.database().ref().child(this.props.user.uid).child('productos').child(componente).update(\r\n                    {\r\n                        cantidad: cantidadComponente\r\n                    }\r\n                )            \r\n            })\r\n        }\r\n        else{\r\n            const productoRef = await firebase.database().ref().child(this.props.user.uid).child('productos').child(producto)\r\n            productoRef.update(\r\n                {\r\n                    cantidad: cantidad-nuevaCantidad\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n    async descontarPedido(pedido) {\r\n        Object.values(pedido).map(async articulo => {\r\n            this.restarProducto(articulo.nombre, this.props.productos[articulo.nombre].cantidad , parseInt(articulo.cantidad),this.props.productos[articulo.nombre].compuestoPor)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"pedido bg-dark p-4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4 onClick={\r\n                                    ()=>{\r\n                                        if(!this.props.cliente==='anonimo'){\r\n                                            this.props.changeCliente(this.props.cliente)\r\n                                        }\r\n                                    }\r\n                                }><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {Object.keys(this.props.pedido.articulos).map(articulo => (\r\n                                <>\r\n                                <PedidoItem nombre={this.props.pedido.articulos[articulo].nombre} cantidad={this.props.pedido.articulos[articulo].cantidad} />\r\n                                </>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <BotoneraPedido\r\n                        precio={this.props.pedido.precio}\r\n                        enviarPedido={async e => {\r\n                            confirmAlert({\r\n                                title: 'Enviar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Enviar',\r\n                                        onClick: async () => {\r\n                                            await this.descontarPedido(this.props.pedido.articulos)\r\n                                            this.props.enviarPedido(this.props.id, this.props.pedido)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n\r\n                        }}\r\n                        eliminarPedido={e => {\r\n                            confirmAlert({\r\n                                title: 'Eliminar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Eliminar',\r\n                                        onClick: async () => {\r\n                                            this.props.eliminarPedido(this.props.id)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    productos:state.productos\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Pedido)","import React, { Component } from \"react\"\r\nimport Pedido from \"../components/Pedido\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport \"./Styles/PedidosList.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport projectManagement from \"../images/projectManagement.jpg\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass PedidosList extends Component {\r\n\r\n    async enviarPedido(key, pedido,uid) {\r\n        if(pedido.cliente!=='anonimo'){\r\n            const productosRef = await firebase.database().ref().child(uid).child('clientes').child(pedido.cliente)\r\n            if (productosRef.child(\"pedidos\")) {\r\n                let id = 0;\r\n                const date = new Date()\r\n                productosRef.child(\"pedidos\").push({\r\n                    fecha: `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`,\r\n                    articulos: pedido.articulos\r\n                })\r\n            }\r\n        }\r\n        this.eliminarPedido(key)\r\n    }\r\n    async eliminarPedido(key) {\r\n        await firebase.database().ref().child(this.props.user.uid).child('pedidos').child(key).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.user.uid)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.pedidos) {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.pedidos).map(key => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\">\r\n                                                <Pedido id={key} pedido={this.props.pedidos[key]} cliente={this.props.pedidos[key].cliente} enviarPedido={(key,pedido)=>{\r\n                                                    this.enviarPedido(key,pedido,this.props.user.uid,this.props.pedidos[key])\r\n                                                }} eliminarPedido={(key)=>{\r\n                                                    this.eliminarPedido(key)\r\n                                                }} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 form-group text-center\">\r\n                                            <h3 className=\"shadowTitle\">Aun No Hay Ningun Pedido!</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"pedidos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n        pedidos: state.pedidos,\r\n        user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(PedidosList)\r\n","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport \"./Styles/ProductList.css\"\r\n\r\nclass MecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {console.log(this.props.products)}\r\n                                    {Object.values(this.props.products).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"mecanizados\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(MecanizadosList)","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass NoMecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.noMecanizados).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"no-mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"productos2\"],\r\n        mecanizados: state.data[\"mecanizados2\"],\r\n        noMecanizados: state.data[\"no-mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(NoMecanizadosList)","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass SurtidoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var array = document.getele\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.surtidores).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"productos\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"surtidores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        surtidores: state.data[\"Surtidores2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(SurtidoresList)","import React, { Component } from \"react\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport { Link } from \"react-router-dom\"\r\nimport logo from \"../images/logo.png\"\r\nimport \"./styles/Navbar.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass NavBar extends Component {\r\n    confirmLogOut() {\r\n        confirmAlert({\r\n            title: 'Cerrar Sesión?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cerrar',\r\n                    onClick: async () => {\r\n                        this.props.handleClick()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.user ?\r\n                    <Navbar collapseOnSelect bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Brand>\r\n                            <div className='ml-4'>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <h6 className='text-white'>{this.props.user.displayName}</h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                            this.confirmLogOut()\r\n                                        }}>Log Out</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto ml-auto\">\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Productos\">Productos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Pedidos\">Pedidos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Clientes\">Clientes</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Proveedores\">Proveedores</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Expresos\">Expresos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Deudas\">Deudas</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Cheques\">Cheques</Link>\r\n                                </Nav.Link>\r\n                                {this.props.user.uid==='rm3bclzcSahomVlQBxR9XOxHy9E3'?\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/ListasDePrecios\">Listas De Precios</Link>\r\n                                </Nav.Link>\r\n                                :\r\n                                null\r\n                                }\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                        <Nav.Link>\r\n                        </Nav.Link>\r\n                            <Link className=\"nav-link p-2 btn btn-success\" to=\"/NuevaVenta\" id=\"buttonNuevoPedido\">Nueva Venta</Link>\r\n                        <Nav.Link>\r\n                            <Link className=\"nav-link p-2 btn btn-outline-success\" to=\"/NuevoRecibo\" id=\"buttonNuevoRecibo\">Nuevo Recibo</Link>\r\n                        </Nav.Link>\r\n                    </Navbar>\r\n                    :\r\n                    null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NavBar)","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/ficha.css\"\r\nimport * as firebase from \"firebase\"\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass Item extends Component {\r\n    constructor(props) {\r\n        const firebaseConfig = {\r\n            apiKey: \"AIzaSyDPmTjxjMxN2abofP8ZczgFGeYQYSvbXHE\",\r\n            authDomain: \"stock-119e8.firebaseapp.com\",\r\n            databaseURL: \"https://stock-119e8.firebaseio.com\",\r\n            projectId: \"stock-119e8\",\r\n            storageBucket: \"stock-119e8.appspot.com\",\r\n            messagingSenderId: \"1007277754269\",\r\n            appId: \"1:1007277754269:web:d1db0def0da907b2\"\r\n        }\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        }\r\n        super(props)\r\n    }\r\n    state = {\r\n        infoExtra: undefined\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    \r\n    async editarInfo(propiedad) {\r\n        const nuevaInfo = prompt(\"Ingresar Nueva Informacion\")\r\n        if (nuevaInfo) {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: nuevaInfo\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").child(propiedad).remove()\r\n        }\r\n    }\r\n    async agregarInfoArray(propiedad, array) {\r\n        let newArr = array\r\n        let newInfo = prompt(\"Introducir nueva informacion\")\r\n        if (newInfo) {\r\n            newArr.push(newInfo)\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: newArr\r\n                }\r\n            )\r\n        }\r\n    }\r\n    async eliminarInfoArray(propiedad, array, infoDelete) {\r\n        confirmAlert({\r\n            title: 'Eliminar Informacion?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si,eliminar',\r\n                    onClick: async () => {\r\n                        let newArr = array\r\n                        newArr.splice(newArr.indexOf(infoDelete), 1)\r\n                        await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                            {\r\n                                [propiedad]: newArr\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        if (this.props.name === \"nombre\") {\r\n            return (null)\r\n        }\r\n        else {\r\n            if (this.props.name === \"telefono\" || this.props.name === \"direccion\" || this.props.name === \"infoExtra\") {\r\n                {\r\n                    return (\r\n                        (this.props.name === \"infoExtra\" ?\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3 className=\"nombreItem\" onClick={e => {\r\n                                                this.agregarInfoArray(this.props.name, this.props.data).then(\r\n                                                    this.props.editarCliente()\r\n                                                )\r\n                                            }}> <small>{this.props.name}</small> </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente()\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3><small>{this.props.name}</small></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n            else {\r\n                return (\r\n                    this.props.edit ?\r\n                        <div className=\"container color-white ficha p-2\">\r\n                            {this.props.name === \"deuda\" ?\r\n                                <h3><small>{this.props.name}</small></h3>\r\n                                :\r\n                                <h3 className=\"nombreItem\" onClick={e => {\r\n                                    this.editarInfo(this.props.name).then(\r\n                                        this.props.editarCliente()\r\n                                    )\r\n                                }}> <small>{this.props.name}</small> </h3>\r\n                            }\r\n                            <h3>{this.props.data}</h3>\r\n                        </div>\r\n                        :\r\n                        <div className=\"container color-white ficha  p-2\">\r\n                            <h3 className=\"\"><small>{this.props.name}</small></h3>\r\n                            {this.props.name === \"deuda\" ?\r\n                                (this.props.data === 0 ?\r\n                                    <h3 className=\"itemDeuda \" >{this.props.data}</h3>\r\n                                    :\r\n                                    <h3 className=\"\">$ {this.props.data}</h3>)\r\n                                :\r\n                                <h3 className=\"\">{this.props.data}</h3>\r\n                            }\r\n                        </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Item)","import React, { Component, Fragment } from \"react\"\r\nimport Item from \"./Item\"\r\nimport \"./styles/ficha.css\"\r\nimport * as firebase from 'firebase'\r\nimport {connect} from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faPlus, faMinus,faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { changeCliente,changeProveedor } from \"../actions/index\"\r\n\r\nclass Ficha extends Component {\r\n    alertModificarDeuda=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Modificar Deuda</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" className=\"form-control\" id='inputNuevaDeuda' placeholder=\"Inresar Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.sumarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.restarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarValor=async (key)=>{\r\n        const nuevaInfo = document.getElementById('inputNuevaInfo').value\r\n        let newArr = this.props.cliente.datos.info[key]\r\n        if(nuevaInfo){\r\n            newArr.push(nuevaInfo)\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n            await datosRef.update({\r\n                [key]:newArr\r\n            }\r\n            )\r\n            this.props.editarCliente()\r\n        }\r\n    }\r\n    alertAgregarValor=(key)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar {key}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevaInfo' placeholder=\"Ingresar Informacion...\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarValor(key)\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarCampo=async ()=>{\r\n        const nuevoCampo = document.getElementById('inputNuevoCampo').value\r\n        const nuevoValor = document.getElementById('inputNuevoValor').value\r\n        if(nuevoCampo){\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n            await datosRef.update({\r\n                [nuevoCampo]:{\r\n                    0:nuevoValor\r\n                }\r\n            }\r\n            )\r\n            this.props.editarCliente()\r\n        }\r\n    }\r\n    alertAgregarCampo=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nueva Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Campo</span>\r\n                                        </div>\r\n                                        <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevoCampo' placeholder=\"ej: Ciudad\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Valor</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" id='inputNuevoValor' placeholder=\"ej: Buenos Aires\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarCampo()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarValor=async (key,valores,valorEliminado)=>{\r\n        const result = valores.filter(valor => valor!==valorEliminado);\r\n        const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n        await datosRef.update({\r\n                [key]:result\r\n        }\r\n        )\r\n        this.props.editarCliente()\r\n        \r\n    }\r\n    alertEliminarValor=(key,valores,valor)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Eliminar Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-left\">\r\n                                <p>Desea eliminar {valor} ?</p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.eliminarValor(key,valores,valor)\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    Si, Eliminar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    alertEditarNombre=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Editar Nombre de {this.props.cliente.datos.nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevoNombre' placeholder=\"Ingresar Nuevo Nombre\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.editarNombre()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    Si, Editar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    editarNombre= async ()=>{\r\n        const nuevoNombre = document.getElementById('inputNuevoNombre').value\r\n        if(nuevoNombre){\r\n            let data = this.props.cliente\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(data.datos.nombre).remove()\r\n            data.datos.nombre=nuevoNombre\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion)\r\n            await datosRef.update({\r\n                [data.datos.nombre]:data\r\n            }\r\n            )\r\n            if(this.props.seccion==='clientes'){\r\n                this.props.changeCliente(data.datos.nombre)\r\n            }\r\n            else{\r\n                this.props.changeProveedor(data.datos.nombre)\r\n            }\r\n        }\r\n    }\r\n    async sumarDeuda() {\r\n        const nuevaDeuda = parseFloat(document.getElementById('inputNuevaDeuda').value)\r\n        if(nuevaDeuda){\r\n            const deudaRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\")\r\n            await deudaRef.update({\r\n                deuda: parseFloat(this.props.cliente.datos.deuda)+nuevaDeuda\r\n            }\r\n            )\r\n        }\r\n    }\r\n    async restarDeuda() {\r\n        const nuevaDeuda = parseFloat(document.getElementById('inputNuevaDeuda').value)\r\n        if(nuevaDeuda){\r\n            const deudaRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\")\r\n            await deudaRef.update({\r\n                deuda: parseFloat(this.props.cliente.datos.deuda)-nuevaDeuda\r\n            }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col form-group name\">\r\n                        {this.props.edit?\r\n                            <h1 onClick={this.alertEditarNombre} className='edit'>{this.props.cliente.datos.nombre}\r\n                                {this.props.seccion==='expresos'?\r\n                                    null\r\n                                    :\r\n                                    <span className={this.props.cliente.datos.deuda>0?'badge badge-pill badge-danger ml-4 deuda':'badge badge-pill badge-success ml-4 deuda'} >${this.props.cliente.datos.deuda}</span>\r\n                                }\r\n                            </h1>\r\n                        :\r\n                            <h1>{this.props.cliente.datos.nombre}\r\n                                {this.props.seccion==='expresos'?\r\n                                    null\r\n                                    :\r\n                                    <span className={this.props.cliente.datos.deuda>0?'badge badge-pill badge-danger ml-4 deuda':'badge badge-pill badge-success ml-4 deuda'} onClick={this.alertModificarDeuda} >${this.props.cliente.datos.deuda}</span>\r\n                                }\r\n                            </h1>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {this.props.edit?\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 form-group text-center\">\r\n                        <button type='button' className=\"btn btn-success\" onClick={this.alertAgregarCampo}>\r\n                            Agregar nuevo campo\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n                }\r\n                <div className=\"row\">\r\n                    {this.props.cliente.datos.info?\r\n                    (\r\n                        <table className=\"table table-hover table-dark\">\r\n                            <tbody>\r\n                                {\r\n                                    Object.keys(this.props.cliente.datos.info).map(key => (\r\n                                    (key === \"nombre\"||key==='deuda' ?\r\n                                        null\r\n                                        :\r\n                                        (\r\n                                        <tr>\r\n                                            {this.props.edit?\r\n                                            <>\r\n                                                <th scope=\"row\">{key}</th>\r\n                                                <td>\r\n                                                    {this.props.cliente.datos.info[key].map(valor=>( \r\n                                                        <p className='mt-2 mb-2 eliminarValor valor' onClick={()=>{\r\n                                                            this.alertEliminarValor(key,this.props.cliente.datos.info[key],valor)\r\n                                                        }}>{valor}</p>\r\n                                                    ))}\r\n                                                </td>\r\n                                                <th>\r\n                                                    <FontAwesomeIcon className='newInfo'icon={faPlus} onClick={()=>{\r\n                                                        this.alertAgregarValor(key)\r\n                                                    }}  />\r\n                                                </th>\r\n                                            </>\r\n                                            :\r\n                                            <>\r\n                                                <th scope=\"row\">{key}</th>\r\n                                                <td>\r\n                                                    {this.props.cliente.datos.info[key].map(valor=>( \r\n                                                        <p className='mt-2 mb-2 valor'>{valor}</p>\r\n                                                    ))}\r\n                                                </td>\r\n                                            </>\r\n                                            }\r\n                                        </tr>\r\n                                        )\r\n                                    )\r\n                                ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                    :\r\n                    <>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1 className='text-white'> <span className='badge badge-pill bdage-info'> Aun no hay Informacion para mostrar</span></h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <button type='button' className='btn btn-success' onClick={this.alertAgregarCampo}> Agregar Informacion!</button>\r\n                        </div>\r\n                    </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nconst mapDispatchToProps={\r\n    changeCliente,\r\n    changeProveedor\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Ficha)\r\n\r\n","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\nclass PedidoCliente extends Component {\r\n    alertEliminarPedido=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Eliminar Pedido</h1>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 text-center\">\r\n                                    <p>La mercaderia sera ingresada nuevamente!</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.eliminarPedido()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Si, Eliminar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarPedido = async () =>{\r\n        this.props.data.articulos.map(async articulo=>{\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').child(articulo.nombre).update(\r\n                {\r\n                    cantidad:this.props.productos[articulo.nombre].cantidad+parseFloat(articulo.cantidad)\r\n                }\r\n            )\r\n        })\r\n        await firebase.database().ref().child(this.props.user.uid).child('clientes').child(this.props.cliente).child('pedidos').child(this.props.llave).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container p2 pedido bg-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row d-flex align-items-center\">\r\n                        <div className=\"col-10\">\r\n                            <h3 className='mt-1 mb-1'>{this.props.data.fecha}</h3>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <FontAwesomeIcon className='eliminarPedido' onClick={\r\n                                this.alertEliminarPedido\r\n                            } icon={faTimes}  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {this.props.data.articulos.map(articulo => (\r\n                        <div className=\"row separator d-flex\">\r\n                                <div className=\" pt-2 pb-2 \">\r\n                                    <p>{articulo.cantidad} </p>\r\n                                </div>\r\n                                <div className=\" pt-2 pb-2 text-right flex-grow-1\">\r\n                                    <p>{articulo.nombre}</p>\r\n                                </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    productos:state.productos,\r\n    cliente:state.cliente\r\n})\r\nexport default connect(mapStateToProps,null)(PedidoCliente)","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\n\r\nclass PedidoProovedor extends Component {\r\n    alertEliminarPedido=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Eliminar Pedido</h1>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 text-center\">\r\n                                    <p>La mercaderia sera descontada</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.eliminarPedido()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Si, Eliminar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarPedido = async () =>{\r\n        this.props.data.articulos.map(async articulo=>{\r\n\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').child(articulo.nombre).update(\r\n                {\r\n                    cantidad:this.props.productos[articulo.nombre].cantidad-articulo.cantidad\r\n                }\r\n            )\r\n        })\r\n        await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proveedor).child('pedidos').child(this.props.llave).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container p2 pedido bg-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row d-flex align-items-center\">\r\n                        <div className=\"col-10\">\r\n                            <h3 className='mt-1 mb-1'>{this.props.data.fecha}</h3>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <FontAwesomeIcon className='eliminarPedido' onClick={\r\n                                this.alertEliminarPedido\r\n                            } icon={faTimes}  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {this.props.data.articulos.map(articulo => (\r\n                        <div className=\"row separator d-flex\">\r\n                                <div className=\" pt-2 pb-2 \">\r\n                                    <p>{articulo.cantidad} </p>\r\n                                </div>\r\n                                <div className=\" pt-2 pb-2 text-right flex-grow-1\">\r\n                                    <p>{articulo.nombre} <span className='badge badg  e-pill badge-light'>${articulo.precio}</span></p>\r\n                                </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    productos:state.productos,\r\n    user:state.user,\r\n    proveedor:state.proveedor\r\n})\r\nexport default connect(mapStateToProps,null)(PedidoProovedor)","import React, { Component } from \"react\"\r\nimport PedidoCliente from \"./PedidoCliente\"\r\nimport PedidoProovedor from \"./PedidoProovedor\"\r\n\r\n\r\nclass Fichapedido extends Component {\r\n    render() {\r\n        if (this.props.data !== undefined) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            Object.keys(this.props.data).reverse().map(key=>(\r\n                                <div className=\"col-12 col-md-6 col-lg-4 form-group d-flex align-items-center\">\r\n                                    {this.props.seccion === \"proveedores\" ?\r\n                                        <PedidoProovedor data={this.props.data[key]} llave={key}/>\r\n                                        :\r\n                                        <PedidoCliente data={this.props.data[key]} llave={key}  />\r\n                                    }\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Fichapedido","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport NavBar from \"./NavBar\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faEdit, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaProovedor extends Component {\r\n    state = {\r\n        edit: false\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n    editarCliente() {\r\n        if (this.state.edit) {\r\n            this.setState({\r\n                edit: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: `/${this.props.seccion}`\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={this.props.handleClick} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha \r\n                                    editarCliente={e => {\r\n                                        this.editarCliente()\r\n                                    }} \r\n                                    edit={this.state.edit} \r\n                                    seccion={'proveedores'} \r\n                                    cliente={this.props.proovedor} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className=\"name\">Lista de Pedidos</h2>\r\n                            </div>\r\n                            <div className=\"col-12 text-center form-group pt-2\">\r\n                                <FichaPedidos seccion='proveedores' data={this.props.proovedor.pedidos} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FichaProovedor)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaProovedor from \"../components/FichaProovedor\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeProveedor } from \"../actions/index\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ProovedoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    returnBack = () => {\r\n        this.props.changeProveedor(undefined)\r\n    }\r\n    alertNuevoProveedor = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Proveedor</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoProveedor' placeholder=\"Nombre del Proveedor\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoProveedor()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    nuevoProveedor = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoProveedor\").value\r\n        if(nombre){\r\n            firebase.database().ref().child(this.props.user.uid).child('proveedores').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        deuda:0,\r\n                        nombre:nombre,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.proveedor) {\r\n                    const proveedor = this.props.proveedores[this.props.proveedor]\r\n                    if (proveedor) {\r\n                        return (\r\n                            <div>\r\n                                <FichaProovedor proovedor={proveedor} seccion=\"Proveedores\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Proveedor</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Proveedor\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.alertNuevoProveedor}>\r\n                                                Agregar Nuevo Proveedor\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.proveedores?\r\n                                            Object.values(this.props.proveedores).map(proveedor => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/Proveedores/`,\r\n                                                        search: `${proveedor.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeProveedor(proveedor.datos.nombre)\r\n                                                        }}>\r\n                                                            {proveedor.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Proveedores!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Proveedores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    proveedores: state.proveedores,\r\n    proveedor: state.proveedor\r\n})\r\nconst mapDispatchToProps = {\r\n    changeProveedor,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProovedoresList)","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faPlus,faMinus, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaCliente extends Component {\r\n    state = {\r\n        edit: false,\r\n        redirect: false\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        console.log(this.props.seccion)\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    async agregarInfoExtra() {\r\n        let arrayInfo\r\n        if (this.props.proovedor.datos.infoExtra) {\r\n            arrayInfo = this.props.proovedor.datos.infoExtra\r\n        }\r\n        else {\r\n            arrayInfo = []\r\n        }\r\n        arrayInfo.push(prompt(\"Ingresar Informacion Extra\"))\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"clientes\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\r\n            {\r\n                infoExtra: arrayInfo\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    alertEditarCliente=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Editar Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" className=\"form-control\" id='inputNuevoCa' placeholder=\"Inresar Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.sumarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.restarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    editarCliente() {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        })\r\n\r\n    }\r\n    render() {\r\n        console.log(this.props.proveedor)\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: \"/clientes\"\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={e => {\r\n                                        this.props.handleClick()\r\n                                        this.editarCliente()\r\n                                    }} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha\r\n                                    editarCliente={e => {\r\n                                        this.editarCliente()\r\n                                    }}\r\n                                    edit={this.state.edit}\r\n                                    seccion={'clientes'}\r\n                                    cliente={this.props.proovedor}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className=\"name\">Lista de Pedidos</h2>\r\n                            </div>\r\n                            <div className=\"col-12 text-center form-group pt-2\">\r\n                                <FichaPedidos data={this.props.proovedor.pedidos} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user,\r\n})\r\nexport default connect(mapStateToProps,null)(FichaCliente)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaCliente from \"../components/FichaCliente\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { changeCliente } from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass ClientesList extends Component {\r\n    returnBack() {\r\n        this.props.changeCliente(null)\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.cliente) {\r\n                    const cliente = this.props.clientes[this.props.cliente]\r\n                    if (cliente) {\r\n                        return (\r\n                            <div>\r\n                                <FichaCliente proovedor={cliente} seccion=\"clientes\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Cliente</h1>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Cliente\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <Link to=\"/NuevoCliente\">\r\n                                                <button type=\"button\" className=\"btn btn-success\">\r\n                                                    Agregar Nuevo Cliente\r\n                                                </button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.clientes?\r\n                                            Object.values(this.props.clientes).map(cliente => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/clientes/`,\r\n                                                        search: `${cliente.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeCliente(cliente.datos.nombre)\r\n                                                        }}>\r\n                                                            {cliente.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Clientes!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Clientes\" />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cliente: state.cliente,\r\n    clientes: state.clientes\r\n})\r\nconst mapDispatchToProps = {\r\n    changeCliente,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientesList)","import React, { Component } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport Ficha from \"./Ficha\"\nimport FichaPedidos from \"./FichaPedidos\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faTrash, faPlus,faMinus, faEdit } from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from \"firebase\"\nimport \"./styles/ficha.css\"\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport {connect} from 'react-redux'\nclass FichaExpreso extends Component {\n    state = {\n        edit: false,\n        redirect: false\n    }\n    agregarArticulo(articulo, accion) {\n        const arr = []\n        arr.push({\n            nombre: articulo,\n            cantidad: accion\n        })\n        this.setState({\n            pedido: arr\n        })\n    }\n    eliminarExpreso = () => {\n        confirmAlert({\n            title: 'Eliminar Expreso?',\n            buttons: [\n                {\n                    label: 'Eliminar',\n                    onClick: async () => {\n                        console.log(this.props.seccion)\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.proovedor.datos.nombre).remove().then(\n                            this.props.handleClick()\n                        )\n                    }\n                },\n                {\n                    label: 'Cancelar'\n                }\n            ]\n        });\n    };\n    async agregarInfoExtra() {\n        let arrayInfo\n        if (this.props.proovedor.datos.infoExtra) {\n            arrayInfo = this.props.proovedor.datos.infoExtra\n        }\n        else {\n            arrayInfo = []\n        }\n        arrayInfo.push(prompt(\"Ingresar Informacion Extra\"))\n        await firebase.database().ref().child(this.props.user.uid).child(\"expresos\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\n            {\n                infoExtra: arrayInfo\n            }\n        )\n\n\n    }\n    alertEditarCliente=()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Editar Informacion</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"number\" className=\"form-control\" id='inputNuevoCa' placeholder=\"Inresar Cantidad\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.sumarDeuda()\n                                            onClose();\n                                        }}\n                                    >\n                                    <FontAwesomeIcon icon={faPlus}  />\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-danger'\n                                        onClick={() => {\n                                            this.restarDeuda()\n                                            onClose();\n                                        }}\n                                    >\n                                        <FontAwesomeIcon icon={faMinus}  />\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n        });\n    }\n    editarCliente() {\n        this.setState({\n            edit: !this.state.edit\n        })\n\n    }\n    render() {\n        console.log(this.props.proveedor)\n        return (\n            <div>\n                <div className=\"productList\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row nav\">\n                            <div className=\"col-5 offset-1 text-left\">\n                                <Link to={{\n                                    pathname: \"/Expresos\"\n                                }}>\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={e => {\n                                        this.props.handleClick()\n                                        this.editarCliente()\n                                    }} />\n                                    </h1>\n                                </Link>\n                            </div>\n                            <div className=\"col-3 offset-3 danger-zone\">\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\n                                    this.editarCliente()\n                                }} /></h1>\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\n                                    this.eliminarExpreso()\n                                }} /></h1>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center form-group\">\n                                <Ficha\n                                    editarCliente={e => {\n                                        this.editarCliente()\n                                    }}\n                                    edit={this.state.edit}\n                                    seccion={'expresos'}\n                                    cliente={this.props.proovedor}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>({\n    user:state.user,\n})\nexport default connect(mapStateToProps,null)(FichaExpreso)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaExpreso from \"../components/FichaExpreso\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { changeExpreso } from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons'\r\nclass ExpresosList extends Component {\r\n    returnBack() {\r\n        this.props.changeExpreso(null)\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    alertNuevoExpreso = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Expreso</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoExpreso' placeholder=\"Nombre del Expreso\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoExpreso()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n}\r\n    nuevoExpreso = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoExpreso\").value\r\n        if(nombre){\r\n            firebase.database().ref().child(this.props.user.uid).child('expresos').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        nombre:nombre,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.expreso) {\r\n                    console.log(this.props.expreso)\r\n                    const expreso = this.props.expresos[this.props.expreso]\r\n                    if (expreso) {\r\n                        return (\r\n                            <div>\r\n                                <FichaExpreso proovedor={expreso} seccion=\"expresos\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Expreso</h1>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Cliente\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={e=>{\r\n                                                this.alertNuevoExpreso()\r\n                                            }}>\r\n                                                Agregar Nuevo Expreso\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.expresos?\r\n                                            Object.values(this.props.expresos).map(expreso => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/Expresos/`,\r\n                                                        search: `${expreso.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeExpreso(expreso.datos.nombre)\r\n                                                        }}>\r\n                                                            {expreso.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h1 className='text-white'>Aun No Hay Expersos!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Clientes\" />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    expreso: state.expreso,\r\n    expresos: state.expresos\r\n})\r\nconst mapDispatchToProps = {\r\n    changeExpreso,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpresosList)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraDeuda extends Component {\r\n    pedirCantidad() {\r\n        const nuevaDeuda = prompt(\"Ingresar Canidad\")\r\n        if (nuevaDeuda)\r\n            return nuevaDeuda\r\n        else\r\n            return 0\r\n    }\r\n    sumarDeuda(deudaVieja, adicion) {\r\n        return deudaVieja + parseInt(adicion)\r\n    }\r\n    restarDeuda(deudaVieja, quita) {\r\n        return deudaVieja - parseInt(quita)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={(e) => {\r\n                            this.props.handleClick(this.props.cliente, this.sumarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faPlus} /></button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                            this.props.handleClick(this.props.cliente, this.restarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faMinus} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraDeuda","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport BotoneraDeuda from \"./BotoneraDeuda\"\r\nimport \"./styles/Deuda.css\"\r\n\r\nclass Deuda extends Component {\r\n    render() {\r\n        if (this.props.deuda === 0) {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container-fluid pt-2 pb-2 deuda bg-dark\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-1\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <h3>$ {this.props.deuda}</h3>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <BotoneraDeuda cliente={this.props.cliente} deuda={this.props.deuda} handleClick={this.props.handleClick} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Deuda","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport \"./Styles/PedidosList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Deudas extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayDeudas = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center\")\r\n        forEach.call(arrayDeudas, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex\";\r\n            }\r\n        });\r\n    }\r\n    async updateDeuda(cliente, nuevaDeuda,uid) {\r\n        const datosRef = await firebase.database().ref().child(uid).child('clientes').child(cliente).child(\"datos\")\r\n        datosRef.update({\r\n            deuda: nuevaDeuda\r\n        })\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.clientes) {\r\n                    const deudas = []\r\n                    Object.values(this.props.clientes).map(cliente => {\r\n                        if (cliente.datos.deuda != 0) {\r\n                            deudas.push({\r\n                                nombre: cliente.datos.nombre,\r\n                                deuda: cliente.datos.deuda\r\n                            })\r\n                        }\r\n                    })\r\n                    if(deudas.length){\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6 offset-3\">\r\n                                                <form>\r\n                                                    <div className=\"formRow\">\r\n                                                        <div className=\"form-group col-12 text-center\">\r\n                                                            <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                                e => {\r\n                                                                    this.handleChange(e)\r\n                                                                }\r\n                                                            } placeholder=\"Buscar Deuda\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {deudas.map(deuda => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 form-group text-center\">\r\n                                                    <Deuda cliente={deuda.nombre} deuda={deuda.deuda} handleClick={(cliente,deuda)=>{\r\n                                                        this.updateDeuda(cliente,deuda,this.props.user.uid)\r\n                                                    }} />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container p-absolute-center\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h3 className=\"shadowTitle\">No Hay Deudas Pendientes!</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container p-absolute-center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h3 className=\"shadowTitle\">No Hay Deudas Pendientes!</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Deudas\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    clientes: state.clientes\r\n})\r\nexport default connect(mapStateToProps, null)(Deudas)\r\n","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport \"./Styles/ChequesList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport {getDocumentos} from '../actions/index'\r\n\r\nclass ListasDePrecios extends Component {\r\n    fetchData(){\r\n        \r\n    }\r\n    async componentDidMount(){\r\n        this.fetchData()\r\n    }\r\n    async subirDocumento() {\r\n        if (this.state.file) {\r\n            console.log(this.state.file)\r\n            await firebase.storage().ref().child(\"ListasDePrecios\").child(this.state.file.name).put(this.state.file).then(e => {\r\n                this.setState({\r\n                    file: undefined,\r\n                    documentos: undefined,\r\n                    loading: true\r\n                })\r\n                this.fetchData()\r\n            })\r\n        }\r\n    }\r\n    async borrarDocumento(documento) {\r\n        confirmAlert({\r\n            title: 'Eliminar Documento?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.storage().ref().child(\"ListasDePrecios\").child(documento).delete().then(e => {\r\n                            this.setState({\r\n                                documentos: undefined,\r\n                                edit: false,\r\n                                loading: true\r\n                            })\r\n                            this.fetchData()\r\n                        }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.documentos)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12  col-md-8 offset-md-2 col-lg-6 offset-lg-3 form-group\">\r\n                                        <div class=\"input-group mb-3\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                {this.state.file ?\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={e => {\r\n                                                        this.subirDocumento()\r\n                                                    }}>Subir Documento!</button>\r\n                                                    :\r\n                                                    <button type=\"button\" className=\"btn btn-success disabled\">Subir Documento!</button>\r\n                                                }\r\n                                            </div>\r\n                                            <div class=\"custom-file\">\r\n                                                <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" onChange={e => {\r\n                                                    this.setState(\r\n                                                        {\r\n                                                            file: e.target.files[0]\r\n                                                        }\r\n                                                    )\r\n                                                }} />\r\n                                                <label class=\"custom-file-label\" for=\"inputGroupFile01\">{\r\n                                                    this.state.file ?\r\n                                                        \"Archivo Elegido!\"\r\n                                                        :\r\n                                                        \"Elegir Archivo\"\r\n                                                }</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 form-group text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={e => {\r\n                                            if (this.state.edit) {\r\n                                                this.setState({\r\n                                                    edit: false\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                this.setState({\r\n                                                    edit: true\r\n                                                })\r\n                                            }\r\n                                        }}>Eliminar Archivo</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.keys(this.props.documentos).map(key => (\r\n                                        console.log(this.props.documentos[key].url)\r\n                                            (this.state.edit ?\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                                        this.borrarDocumento(this.props.documentos[key].nombre)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={e => {\r\n                                                        window.open(this.props.documentos[key].url)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                            )\r\n                                    ))}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return null\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    documentos: state.documentos,\r\n    productos:state.productos\r\n})\r\nconst mapDispatchToProps={\r\n    getDocumentos\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListasDePrecios)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\n\r\nclass Product extends Component {\r\n    state={\r\n        imagen:undefined\r\n    }\r\n    async componentDidMount(){\r\n        if(this.props.user.uid==='RSKNrihne8TnWCEvFah4oVx1Bdm1'){\r\n            await firebase.storage().ref().child('imagenes').child(this.props.nombre+'.png').getDownloadURL().then(url=>{\r\n                this.setState({\r\n                    imagen:url\r\n                })\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"product-election bg-dark\" onClick={this.props.handleClick}>\r\n                <div className=\"product-Info\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h6 className=\"colorWhite textBold mt-2\">{this.props.nombre}</h6>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.imagen?\r\n                            <div className=\"row mt-2 mb-2\">\r\n                                <div className=\"container img\">\r\n                                        <img \r\n                                        src={this.state.imagen}\r\n                                        className=\"productImg\" alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        :\r\n                            null\r\n                        }\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 form-group text-center\">\r\n                                    <span className=\"badge badge-íll badge-light\">$ {this.props.precio}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Product)","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraNuevoPedido extends Component {\r\n    state = {\r\n        redirect: false,\r\n        porcentaje: false,\r\n        restar: false,\r\n    }\r\n    porcentaje = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Porcentaje</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" id=\"porcentaje\" className=\"form-control\" placeholder=\"Porcentaje\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group-text-cen\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const porcentaje = document.getElementById(\"porcentaje\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - (this.props.total * porcentaje / 100))\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    restar = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Cantidad</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" className=\"form-control\" id=\"cantidad\" placeholder=\"cantidad\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const cantidad = document.getElementById(\"cantidad\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - cantidad)\r\n                                        console.log(cantidad)\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    modificarTotal() {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12  text-center form-group\">\r\n                                    <h1>Modificar Total</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.porcentaje()\r\n                                    }}>\r\n                                        Porcentaje\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.restar()\r\n                                    }}>\r\n                                        Restar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    cancelarPedido() {\r\n        confirmAlert({\r\n            title: 'Cancelar Pedido?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cancelar',\r\n                    onClick: async () => {\r\n                        this.setState({\r\n                            redirect: true\r\n                        })\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row align-items-center\">\r\n                {this.state.redirect ?\r\n                    <Redirect to=\"productos\" />\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.enviarPedido}><FontAwesomeIcon icon={faCheck}  /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h3 onClick={e => {\r\n                        this.modificarTotal()\r\n                    }}>${this.props.total}</h3>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={e => {\r\n                        this.cancelarPedido()\r\n                    }}><FontAwesomeIcon icon={faTimes} /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraNuevoPedido","import React, { Component, Fragment } from \"react\"\r\nimport BotoneraNuevoPedido from \"../components/BotoneraNuevoPedido\"\r\nimport './styles/ResumenPedido.css'\r\nclass ResumenPedido extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"col bg-dark text-center nuevoPedido p-2 \">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{this.props.cliente}</h4>\r\n                    </div>\r\n                </div>\r\n                    {Object.keys(this.props.pedido).map(key => (\r\n                                <div className=\"row align-items-center\">\r\n                                    <div className=\"col d-flex\">\r\n                                        <p className='flex-grow-1 text-left'>{this.props.pedido[key].nombre} <span className=\"badge badge-light\">$ {this.props.pedido[key].precio} c/u </span></p>\r\n                                        <p className='mr-2 ml-2'>{this.props.pedido[key].cantidad}</p>\r\n                                    </div>\r\n                                </div>\r\n                    )\r\n                    )}\r\n                <BotoneraNuevoPedido modificarTotal={total => {\r\n                    this.props.modificarTotal(total)\r\n                }} total={this.props.total} enviarPedido={this.props.enviarPedido} />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default ResumenPedido","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport ProductElection from \"../components/ProductElection\"\r\nimport * as firebase from \"firebase\"\r\nimport ResumenPedido from \"../components/ResumenPedido\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport \"./Styles/NuevoPedido.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestionCircle,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { connect } from \"react-redux\"\r\nimport {changeCliente} from \"../actions/index\"\r\nclass NuevoPedido extends Component {\r\n    seleccionarDestinatario(cliente) {\r\n        this.setState({\r\n            nuevoCliente: cliente\r\n        })\r\n    }\r\n    async enviarPedido() {\r\n        let arr = []\r\n        Object.keys(this.state.pedido).map(key => {\r\n            arr.push(\r\n                {   \r\n                    nombre: this.state.pedido[key].nombre,\r\n                    cantidad: this.state.pedido[key].cantidad,\r\n                    seccion: this.state.pedido[key].seccion,\r\n                }\r\n            )\r\n        })\r\n        console.log(arr)\r\n        firebase.database().ref().child(this.props.user.uid).child(\"pedidos\").push(\r\n            {\r\n                cliente: this.state.nuevoCliente,\r\n                precio: this.state.total,\r\n                articulos: arr\r\n            }\r\n        )\r\n    }\r\n    state = {\r\n        nuevoCliente: undefined,\r\n        total: 0,\r\n        pedido: [],\r\n    }\r\n    agregarArticulo(nombre, cantidad, precio, seccion) {\r\n        const arr = this.state.pedido\r\n        arr.push({\r\n            nombre: nombre,\r\n            cantidad: cantidad,\r\n            precio: precio,\r\n            seccion: seccion\r\n        })\r\n        super.setState({\r\n            ...this.state,\r\n            pedido: arr\r\n        })\r\n    }\r\n    handleChangeProducto(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-none\"\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-flex \"\r\n            }\r\n        });\r\n    }\r\n    handleChangeCliente(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    modificarTotal(total) {\r\n        console.log(total)\r\n        this.setState({ total: total })\r\n    }\r\n    alertNuevoCliente = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoCliente' placeholder=\"Nombre del Cliente\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoCliente()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    alertElegirProducto = (nombre,precio) =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" class=\"form-control\" id='cantidadProducto' placeholder=\"Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            const cantidadPlus = document.getElementById('cantidadProducto').value\r\n                                                if (cantidadPlus) {\r\n                                                    this.agregarArticulo(nombre,cantidadPlus,precio, \"productos\")\r\n                                                    if (precio) {\r\n                                                        let sumaPrecios\r\n                                                        if (this.state.total) {\r\n                                                            sumaPrecios = this.state.total\r\n                                                        }\r\n                                                        else {\r\n                                                            sumaPrecios = 0\r\n                                                        }\r\n                                                        sumaPrecios += parseInt(precio * cantidadPlus)\r\n                                                        this.setState({\r\n                                                            total: sumaPrecios\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    nuevoCliente = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoCliente\").value\r\n        if(nombre){\r\n            this.seleccionarDestinatario(nombre)\r\n            firebase.database().ref().child(this.props.user.uid).child('clientes').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        nombre:nombre,\r\n                        deuda:0\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    alertResumen = ()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <ResumenPedido\r\n                                cliente={this.state.nuevoCliente}\r\n                                pedido={this.state.pedido}\r\n                                enviarPedido={e => {\r\n                                    this.enviarPedido().then(\r\n                                        this.setState({\r\n                                            redirect: true\r\n                                        })\r\n                                    )\r\n                                    onClose()\r\n                                }}\r\n                                modificarTotal={total => {\r\n                                    this.modificarTotal(total)\r\n                                }}\r\n                                total={this.state.total}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertAgregarProducto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus  type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarProducto = async () =>{\r\n        const nombre = document.getElementById('nombreNuevoProducto').value\r\n        const precio = document.getElementById('precioNuevoProducto').value\r\n        if(nombre){\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\r\n                {\r\n                    [nombre]:{\r\n                        nombre:nombre,\r\n                        cantidad:0,\r\n                        precio:precio\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            let user = undefined\r\n            user = this.props.user.email\r\n            if (user) {\r\n                if (!this.state.nuevoCliente) {\r\n                    return (\r\n                        <div className=\"nuevo-cliente\">\r\n                            <div className=\"container-fluid mt-4\">\r\n                                <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                        <button type='button' className='btn btn-outline-light' onClick={()=>{\r\n                                            this.seleccionarDestinatario('anonimo')\r\n                                        }\r\n                                        }>\r\n                                            Venta Anonima\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-6 text-center\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChangeCliente(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Cliente\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"col text-center\">\r\n                                        <button type='button' className='btn btn-outline-light' onClick={this.alertNuevoCliente}>\r\n                                            Nuevo Cliente\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.clientes?\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.clientes).map(cliente => ( \r\n                                        <div className=\"col-12 text-center form-group\">\r\n                                            <button type=\"button\" className=\"btn btn-primary btn-cliente\" onClick={() => {\r\n                                                console.log(cliente.datos.nombre)\r\n                                                this.seleccionarDestinatario(cliente.datos.nombre)\r\n                                            }}>\r\n                                                {cliente.datos.nombre}\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                :\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 text-center\">\r\n                                        <h1 className='text-white'>Aun no hay Clientes!</h1>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className=\"name\">Elegir Productos</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChangeProducto(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type='button' className='btn btn-success' onClick={this.alertResumen}>\r\n                                                Finalizar Venta\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type='button' className='btn btn-outline-success' onClick={this.alertAgregarProducto}>\r\n                                                Nuevo Producto\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row productList align-items-center\">\r\n                                        {this.props.productos?\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"row\">\r\n                                                {Object.keys(this.props.productos).map(nombre=>( \r\n                                                    <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center justify-content-center\" key={this.props.productos[nombre].nombre}>\r\n                                                    <ProductElection \r\n                                                        handleClick={e => {\r\n                                                            this.alertElegirProducto(this.props.productos[nombre].nombre, this.props.productos[nombre].precio)\r\n                                                        }}\r\n                                                        nombre={this.props.productos[nombre].nombre} \r\n                                                        precio={this.props.productos[nombre].precio} />\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                            }\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className='text-white'> Aun No Hay Productos!</h1>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                    {this.state.redirect ?\r\n                                        <Redirect to=\"pedidos\" />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"NuevaVenta\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    productos: state.productos,\r\n    clientes:state.clientes\r\n})\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoPedido)","import React, { Component } from \"react\"\r\nimport \"./styles/Cheque.css\"\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\nclass Cheque extends Component {\r\n    async enviarCheque(llave) {\r\n        const date = new Date()\r\n        const enviadoA = prompt(\"Ingresar Nombre Del Destinatario\")\r\n        if (enviadoA) {\r\n            await firebase.database().ref().child(this.props.user.uid).child('cheques').child(llave).update(\r\n                {\r\n                    [\"Fecha De Salida\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n                    [\"Enviado A\"]: enviadoA\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container cheque p-3 bg-dark\">\r\n                <div className=\"row d-flex align-items-center\">\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Dia\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Entrada)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Cliente\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Cliente)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Banco\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Banco)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Numero\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Numero)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Cheque\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Fecha)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>$ {this.props.cheque[\"Monto\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Monto)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Fecha De Salida\"] ?\r\n                                        <h6>{this.props.cheque[\"Fecha De Salida\"]}</h6>\r\n                                        :\r\n                                        <h6 className=\"salida\" onClick={\r\n                                            e => {\r\n                                                this.enviarCheque(this.props.llave)\r\n                                            }\r\n                                        }>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Salida)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Enviado A\"] ?\r\n                                        <h6>{this.props.cheque[\"Enviado A\"]}</h6>\r\n                                        :\r\n                                        <h6>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Enviado A)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Cheque)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport Cheque from \"../components/Cheque\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./Styles/ChequesList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\n\r\nclass ChequesList extends Component {\r\n    state = {\r\n        filtro: \"Numero\",\r\n        redirect: false,\r\n    }\r\n    handleChange(e, filtro) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayCheques = document.getElementsByClassName(\"col-12 form-group chequeList\")\r\n        forEach.call(arrayCheques, function (f) {\r\n            const cheque = f.children[0].children[0].children\r\n            let $filtro = undefined\r\n            switch (filtro) {\r\n                case \"Numero\":\r\n                    $filtro = 3;\r\n                    break;\r\n                case \"Nombre\":\r\n                    $filtro = 1;\r\n                    break;\r\n                case \"Monto\":\r\n                    $filtro = 5;\r\n                    break;\r\n                case \"Banco\":\r\n                    $filtro = 2;\r\n                    break;\r\n                case \"Enviado A\":\r\n                    $filtro = 7;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (cheque[$filtro].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 form-group chequeList d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 form-group chequeList d-block\";\r\n            }\r\n        });\r\n    }\r\n    actualizarBotones(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayButton = document.getElementsByClassName(\"filtro btn\")\r\n        forEach.call(arrayButton, function (f) {\r\n            f.className = \"filtro btn btn-outline-light\"\r\n        })\r\n        e.target.className = \"filtro btn btn-outline-success\"\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if(user){\r\n                return (\r\n                    <div>\r\n                        {\r\n                            this.state.redirect ?\r\n                                <Redirect to=\"/NuevoCheque\" />\r\n                                :\r\n                                <div>\r\n                                    <div className=\"productList\">\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-right\">\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={\r\n                                                        e => {\r\n                                                            this.setState({\r\n                                                                redirect: true\r\n                                                            })\r\n                                                        }\r\n                                                    }>Agregar Cheque</button>\r\n                                                </div>\r\n                                                <div className=\"col-12 text-center form-group\">\r\n                                                    <h2 className=\"name\">Cheques</h2>\r\n                                                </div>\r\n                                                <div className=\"col-12  text-center form-group\">\r\n                                                    <form>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"form-group col-6 offset-3 text-center\">\r\n                                                                <input autoFocus type=\"text\" className=\"form-control\" onChange={\r\n                                                                    e => {\r\n                                                                        this.handleChange(e, this.state.filtro)\r\n                                                                    }\r\n                                                                } placeholder=\"Buscar Cheque\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"container\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-success\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Numero\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Numero</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Nombre\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Nombre</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Banco\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Banco</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Monto\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Monto</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Enviado A\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Enviado A</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                            {this.props.cheques?\r\n                                            <div className=\"row\">\r\n                                                {Object.keys(this.props.cheques).map(key => (\r\n                                                    <div className=\"col-12 form-group chequeList\">\r\n                                                        <Cheque llave={key} cheque={this.props.cheques[key]} />\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3 className=\"shadowTitle\">No Hay Cheques!</h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Cheques\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cheques: state.cheques\r\n})\r\nexport default connect(mapStateToProps, null)(ChequesList)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Prompt } from \"react-router\"\r\nimport * as firebase from \"firebase\"\r\nimport \"../components/styles/FormNuevoCliente.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nclass FormNuevoCliente extends Component {\r\n    state = {\r\n        nombre: null,\r\n        direccionPrincipal: null,\r\n        direccionSecundaria: null,\r\n        ciudad: null,\r\n        codigoPostal: \" - \",\r\n        expreso: null,\r\n        CUIT: null,\r\n        DNI: null,\r\n        telefono1: null,\r\n        telefono2: null,\r\n        telefono3: null,\r\n        telefono4: null,\r\n    }\r\n\r\n    async submitForm() {\r\n        let cliente = {\r\n            [this.state.nombre]: {\r\n                datos: {\r\n                    info:{\r\n                        direccion: {\r\n                            0: this.state.direccionPrincipal,\r\n                            1: this.state.direccionSecundaria,\r\n                        },\r\n                        telefono: {\r\n                            0: this.state.telefono1,\r\n                            1: this.state.telefono2,\r\n                            2: this.state.telefono3,\r\n                            3: this.state.telefono4,\r\n                        },\r\n                        ciudad:{\r\n                            0:this.state.ciudad + \" CP:\" + this.state.codigoPostal,\r\n                        },\r\n                        CUIT: {\r\n                            0:this.state.CUIT\r\n                        },\r\n                        DNI: {\r\n                            0:this.state.DNI\r\n                        }\r\n                    },\r\n                    nombre: this.state.nombre,\r\n                    deuda: 0,\r\n                }\r\n            }\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child('clientes').update(cliente)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 offset-2\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <Prompt\r\n                                when={this.state.DNI}\r\n                                message=\"Estas Seguro que deseas retirarte?\"\r\n                            />\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\">\r\n                                    <label>Nombre</label>\r\n                                    <input autoFocus type=\"text\" value={this.state.nombre} onChange={e => {\r\n                                        this.setState(\r\n                                            {\r\n                                                ...this.state,\r\n                                                nombre: e.target.value\r\n                                            }\r\n                                        )\r\n                                    }} className=\"form-control\" id=\"nombre\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress\">Direccion Principal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={this.state.direccionPrincipal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionPrincipal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress2\">Direccion Secundaria</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" value={this.state.direccionSecundaria} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionSecundaria: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>Ciudad</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.ciudad} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            ciudad: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label for=\"inputZip\">Codigo Postal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.codigoPostal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            codigoPostal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 1</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono1} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono1: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 2</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono2} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono2: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 3</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono3} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono3: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 4</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono4} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono4: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>CUIT</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.CUIT} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            CUIT: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label for=\"inputZip\">DNI</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.DNI} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            DNI: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cliente</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/clientes\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FormNuevoCliente)","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCliente from \"../components/FormNuevoCliente\"\r\nimport {connect} from 'react-redux'\r\nclass NuevoCliente extends Component {\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <FormNuevoCliente />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"NuevoCliente\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NuevoCliente)","import React, { Component, Fragment } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport Login from \"../components/Login\"\nimport SpinnerLoading from \"../components/SpinnerLoading\"\nimport ProductElection from \"../components/ProductElection\"\nimport * as firebase from \"firebase\"\nimport ResumenPedido from \"../components/ResumenPedido\"\nimport \"./Styles/ProovedoresList.css\"\nimport \"./Styles/NuevoPedido.css\"\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle,faPlus} from '@fortawesome/free-solid-svg-icons'\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { connect } from \"react-redux\"\nimport {changeProveedor} from \"../actions/index\"\nclass NuevoRecibo extends Component {\n    seleccionarDestinatario(cliente) {\n        this.setState({\n            nuevoCliente: cliente\n        })\n    }\n    comprobarCadenaDeProduccion=async articulo=>{\n        Object.values(this.props.cadenasDeProduccion).map(async cadena=>{\n            cadena.map(async (articuloCadena,index)=>{\n                if(articulo.nombre===articuloCadena){\n                    if(cadena[index-1]){\n                        const nuevaCantidad = this.props.productos[cadena[index-1]].cantidad-=parseFloat(articulo.cantidad)\n                        await firebase.database().ref().child(this.props.user.uid).child('productos').child(cadena[index-1]).update({\n                            cantidad: nuevaCantidad\n                        })\n                    }\n                }\n            })\n        })\n    }\n    descontarMercaderia=async articulo=>{\n        const nuevaCantidad=this.props.productos[articulo.nombre].cantidad+=parseFloat(articulo.cantidad)\n        console.log(this.props.productos[articulo.nombre].cantidad,articulo.nombre)\n        await firebase.database().ref().child(this.props.user.uid).child('productos').child(articulo.nombre).update({\n            cantidad: nuevaCantidad\n        })\n    }\n    enviarPedidoAFicha=async pedido=>{\n        const date = new Date()\n        await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.state.nuevoCliente).child(\"pedidos\").push(\n            {\n                fecha: `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`,\n                articulos: pedido\n            }\n        )\n    }\n    async enviarPedido() {\n        let arr = []\n        Object.keys(this.state.pedido).map(async key => {\n            arr.push(\n                {   precio:this.state.pedido[key].precio,\n                    nombre: this.state.pedido[key].nombre,\n                    cantidad: this.state.pedido[key].cantidad,\n                    seccion: this.state.pedido[key].seccion,\n                }\n            )\n        })\n        await this.enviarPedidoAFicha(arr)\n        arr.map(async articulo=>{\n            await this.comprobarCadenaDeProduccion(articulo)\n        })\n        arr.map(async articulo=>{\n            await this.descontarMercaderia(articulo)\n        })\n    }\n    state = {\n        nuevoCliente: undefined,\n        accion:undefined,\n        total: 0,\n        pedido: [],\n    }\n    agregarArticulo(nombre, cantidad, precio, seccion,disminuye) {\n        const arr = this.state.pedido\n        arr.push({\n            nombre: nombre,\n            cantidad: cantidad,\n            precio: precio,\n            seccion: seccion,\n            disminuye:disminuye,\n        })\n        super.setState({\n            ...this.state,\n            pedido: arr\n        })\n    }\n    handleChangeProducto(e) {\n        var forEach = Array.prototype.forEach;\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center\")\n        forEach.call(arrayProductos, function (f) {\n            if (f.children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-none\"\n            }\n            else {\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-flex \"\n            }\n        });\n    }\n    handleChangeCliente(e) {\n        var forEach = Array.prototype.forEach;\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\n        forEach.call(arrayClientes, function (f) {\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\n                f.parentNode.style.display = \"none\";\n            else\n                f.parentNode.style.display = \"block\";\n        });\n    }\n    modificarTotal(total) {\n        console.log(total)\n        this.setState({ total: total })\n    }\n    alertNuevoCliente = () =>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Agregar Nuevo Proveedor</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoCliente' placeholder=\"Nombre del Cliente\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.nuevoCliente()\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n          });\n    }\n    alertElegirProducto = (nombre,disminuye) =>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>{nombre}</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"number\" class=\"form-control\" id='cantidadProducto' placeholder=\"Cantidad\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input type=\"number\" class=\"form-control\" id='precioProducto' placeholder=\"Precio\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            const cantidadPlus = document.getElementById('cantidadProducto').value\n                                            const precio = document.getElementById('precioProducto').value\n                                                if (cantidadPlus) {\n                                                    this.agregarArticulo(nombre,cantidadPlus,precio, \"productos\",disminuye)\n                                                    if (precio) {\n                                                        let sumaPrecios\n                                                        if (this.state.total) {\n                                                            sumaPrecios = this.state.total\n                                                        }\n                                                        else {\n                                                            sumaPrecios = 0\n                                                        }\n                                                        sumaPrecios += parseInt(precio * cantidadPlus)\n                                                        this.setState({\n                                                            total: sumaPrecios\n                                                        })\n                                                    }\n                                                }\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            );\n            }\n        });\n    }\n    nuevoCliente = async () =>{\n        const nombre = document.getElementById(\"nombreNuevoCliente\").value\n        if(nombre){\n            this.seleccionarDestinatario(nombre)\n            firebase.database().ref().child(this.props.user.uid).child('proveedores').update({\n                [nombre]:{\n                    datos:{\n                        nombre:nombre,\n                        deuda:0\n                    }\n                }\n            })\n        }\n    }\n    alertResumen = ()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <ResumenPedido\n                                cliente={this.state.nuevoCliente}\n                                pedido={this.state.pedido}\n                                enviarPedido={async e => {\n                                    await this.enviarPedido().then(\n                                        this.setState({\n                                            redirect: true\n                                        })\n                                    )\n                                    onClose()\n                                }}\n                                modificarTotal={total => {\n                                    this.modificarTotal(total)\n                                }}\n                                total={this.state.total}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n            }\n        });\n    }\n    alertAgregarProducto=()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Agregar Nuevo Producto</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus  type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.agregarProducto()\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n        });\n    }\n    agregarProducto = async () =>{\n        const nombre = document.getElementById('nombreNuevoProducto').value\n        const precio = document.getElementById('precioNuevoProducto').value\n        if(nombre){\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\n                {\n                    [nombre]:{\n                        nombre:nombre,\n                        cantidad:0,\n                        precio:precio\n                    }\n                }\n            )\n        }\n    }\n    render() {\n        try {\n            let user = this.props.user.email\n            if (user) {\n                if (!this.state.nuevoCliente) {\n                    return (\n                        <div className=\"nuevo-cliente \">\n                            <div className=\"container-fluid mt-4\">\n                                <div className=\"row\">\n                                    <div className=\"col-6 offset-3\">\n                                        <form>\n                                            <div className=\"formRow\">\n                                                <div className=\"form-group col-12 text-center\">\n                                                    <input autoFocus type=\"text\" className=\"form-control\" onChange={\n                                                        e => {\n                                                            this.handleChangeCliente(e)\n                                                        }\n                                                    } placeholder=\"Buscar Proveedor\" />\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div className=\"col\">\n                                        <button type='button' className='btn btn-outline-light' onClick={this.alertNuevoCliente}>\n                                            Nuevo Proveedor\n                                        </button>\n                                    </div>\n                                </div>\n                                {this.props.proveedores?\n                                <div className=\"row\">\n                                    {Object.values(this.props.proveedores).map(cliente => (\n                                        <div className=\"col-12 text-center form-group\">\n                                            <button type=\"button\" className=\"btn btn-primary btn-cliente\" onClick={() => {\n                                                console.log(cliente.datos.nombre)\n                                                this.seleccionarDestinatario(cliente.datos.nombre)\n                                            }}>\n                                                {cliente.datos.nombre}\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                                :\n                                <div className=\"row\">\n                                    <div className=\"col-12 text-center\">\n                                        <h1 className='text-white'>Aun no hay Proveedores!</h1>\n                                    </div>\n                                </div>\n                                }\n                            </div>\n                        </div>\n                    )\n                }\n                else {\n                    return (\n                        <div>\n                            <div className=\"productList\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 text-center\">\n                                            <h1 className=\"name\">Elegir Productos</h1>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-6 offset-3\">\n                                            <form>\n                                                <div className=\"formRow\">\n                                                    <div className=\"form-group col-12 text-center\">\n                                                        <input autoFocus type=\"text\" className=\"form-control\" onChange={\n                                                            e => {\n                                                                this.handleChangeProducto(e)\n                                                            }\n                                                        } placeholder=\"Buscar Producto\" />\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div className=\"col\">\n                                            <button type='button' className='btn btn-success' onClick={this.alertResumen}>\n                                                Finalizar Recibo\n                                            </button>\n                                        </div>\n                                        <div className=\"col text-center\">\n                                            <button type='button' className='btn btn-outline-success' onClick={this.alertAgregarProducto}>\n                                                Nuevo Producto\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"row productList align-items-center\">\n                                    {this.props.productos?\n                                        <div className=\"container-fluid\">\n                                                <div className=\"row\">\n                                                {Object.keys(this.props.productos).map(nombre=>( \n                                                    <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center justify-content-center\" key={this.props.productos[nombre].nombre}>\n                                                    <ProductElection \n                                                        handleClick={e => {\n                                                            this.alertElegirProducto(this.props.productos[nombre].nombre,this.props.productos[nombre].disminuye)\n                                                        }}\n                                                        nombre={this.props.productos[nombre].nombre} \n                                                        precio={this.props.productos[nombre].precio} />\n                                                    </div>\n                                                ))}\n                                                </div>\n                                        </div>\n                                        :\n                                        <div className=\"col-12 text-center\">\n                                            <h1 className='text-white'> Aun No Hay Productos!</h1>\n                                        </div>\n                                        }\n                                    </div>\n                                    {this.state.redirect ?\n                                        <Redirect to=\"productos\" />\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            }\n        }\n        catch (error) {\n            return (\n                <Login redirect=\"NuevoRecibo\" />\n            )\n        }\n    }\n}\nconst mapStateToProps = state => ({\n    user: state.user,\n    productos: state.productos,\n    proveedores:state.proveedores,\n    cadenasDeProduccion:state.cadenasDeProduccion\n})\nconst mapDispatchToProps={\n    changeProveedor\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoRecibo)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass FormNuevoCheque extends Component {\r\n    state = {\r\n        entrada: null,\r\n        cliente: null,\r\n        banco: null,\r\n        numero: null,\r\n        fecha: null,\r\n        monto: null\r\n    }\r\n\r\n    async submitForm() {\r\n        const date = new Date()\r\n        let cheque = {\r\n            Banco: this.state.banco,\r\n            Cliente: this.state.cliente,\r\n            [\"Fecha Del Cheque\"]: this.state.fecha,\r\n            [\"Fecha Del Dia\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n            Monto: this.state.monto,\r\n            Numero: this.state.numero,\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"cheques\").push(cheque)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cheque?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 offset-3\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Cliente</label>\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.cliente} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            cliente: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label for=\"inputZip\">Banco</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.banco} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            banco: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Numero De Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.numero} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            numero: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Fecha Del Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.fecha} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            fecha: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Monto</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.monto} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            monto: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cheque</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/Cheques\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FormNuevoCheque)","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCheque from \"../components/FormNuevoCheque\"\r\nimport { connect } from \"react-redux\"\r\nclass NuevoCheque extends Component {\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <FormNuevoCheque />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"NuevoCheque\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(NuevoCheque)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faArrowDown} from '@fortawesome/free-solid-svg-icons'\nclass ProductoCadena extends Component{\n\n    render(){\n        return(\n            <>\n                <p class=\"card-text\">{this.props.articulo}</p>\n                {this.props.cadena.length-1===this.props.index?\n                null\n                :\n                <p class=\"card-text\"><FontAwesomeIcon className=\" ml-1 arrowDownIcon\" icon={faArrowDown}  /></p>\n                }\n            </>\n        )\n    }\n}\nexport default ProductoCadena","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faArrowRight} from '@fortawesome/free-solid-svg-icons'\nimport \"./styles/Product.css\"\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport * as firebase from \"firebase\"\nimport { connect } from \"react-redux\"\n\nimport ProductoCadena from './ProductoCadena'\nclass CadenaDeProduccion extends Component{\n\n    alertConfiguracionCadena=()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Configuracion De Cadena De Produccion</h1>\n                                <h3>{this.props.nombre}</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <p>En esta seccion podra editar la cadena de Produccion</p>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-outline-danger'\n                                        onClick={() => {\n                                            this.eliminarCadena()\n                                        }}\n                                    >\n                                        Eliminar cadena de produccion\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.configuracionProducto()\n                                            onClose();\n                                        }}\n                                    >\n                                        Aceptar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n        });\n    }\n    eliminarCadena = async () =>{\n        confirmAlert({\n            title: 'Eliminar Cadena de Producccion De '+this.props.nombre+'?',\n            buttons: [\n                {\n                    label: 'Si, Eliminar',\n                    onClick: async () => {\n                        await firebase.database().ref().child(this.props.user.uid).child('cadenasDeProduccion').child(this.props.nombre).remove()\n                        \n                    }\n                },\n                {\n                    label: 'Cancelar'\n                }\n            ]\n        });\n    }\n    render(){\n        return(\n            <div className=\"col-12 col-md-6 col-lg-4 d-flex align-items-center justify-content-center form-group\">\n                <div class=\"card text-center cadena\">\n                    <div class=\"card-body\" onClick={this.alertConfiguracionCadena}>\n                        <h5 class=\"card-title\">{this.props.nombre}</h5>\n                        {this.props.cadena.map((articulo,index)=>(\n                            <ProductoCadena\n                                articulo={articulo}\n                                cadena={this.props.cadena}\n                                index={index}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        user:state.user,\n    }\n}\nexport default connect(mapStateToProps, null)(CadenaDeProduccion)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faArrowRight} from '@fortawesome/free-solid-svg-icons'\nimport \"./styles/Product.css\"\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport * as firebase from \"firebase\"\nimport { connect } from \"react-redux\"\n\nimport ProductoCadena from './ProductoCadena'\nclass IntroCadenasDeProduccion extends Component{\n\n    alertConfiguracionCadena=()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Configuracion De Cadena De Produccion</h1>\n                                <h3>{this.props.nombre}</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <p>En esta seccion podra editar la cadena de Produccion</p>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-outline-danger'\n                                        onClick={() => {\n                                            this.eliminarCadena()\n                                        }}\n                                    >\n                                        Eliminar cadena de produccion\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.configuracionProducto()\n                                            onClose();\n                                        }}\n                                    >\n                                        Aceptar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n        });\n    }\n    eliminarCadena = async () =>{\n        confirmAlert({\n            title: 'Eliminar Cadena de Producccion De '+this.props.nombre+'?',\n            buttons: [\n                {\n                    label: 'Si, Eliminar',\n                    onClick: async () => {\n                        await firebase.database().ref().child(this.props.user.uid).child('cadenasDeProduccion').child(this.props.nombre).remove()\n                        \n                    }\n                },\n                {\n                    label: 'Cancelar'\n                }\n            ]\n        });\n    }\n    render(){\n        return(\n            <div className=\"productList\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 form-group text-center\">\n                            <h3 className=\"shadowTitle\">No Hay Cadenas De Produccion</h3>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <p className='text-white'>Con las Cadenas de produccion puedes enlazar productos para formar un esquema que represente, desde el primer al ultimo proceso de produccion.\n\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        user:state.user,\n    }\n}\nexport default connect(mapStateToProps, null)(IntroCadenasDeProduccion)","import React, { Component } from \"react\"\nimport Pedido from \"../components/Pedido\"\nimport Login from \"../components/Login\"\nimport CadenaDeProduccion from \"../components/CadenaDeProduccion\"\nimport IntroCadenasDeProduccion from \"../components/IntroCadenasDeProduccion\"\nimport * as firebase from \"firebase\"\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport projectManagement from \"../images/projectManagement.jpg\"\nimport { connect } from \"react-redux\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight} from '@fortawesome/free-solid-svg-icons'\n\nclass CadenasDeProduccion extends Component {\n    handleChange(e) {\n        var forEach = Array.prototype.forEach;\n        var arrayProductos = document.getElementsByClassName(\"card\")\n        forEach.call(arrayProductos, function (f) {\n            console.log()\n            if (f.children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\n                f.className = \"card d-none\"\n            }\n            else {\n                f.className = \"card d-flex\"\n            }\n        });\n    }\n    alertNuevaCadena=()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Nueva Cadena De Produccion</h1>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-left form-group\">\n                                <p>Ingrese en orden los productos que formen parte de una cadena de produccion</p>\n                            </div>\n                        </div>\n                        <form>\n                        <div className=\"form-row\">\n                            <div className=\"col-12 form-group\">\n                                <input autoFocus type=\"text\" className=\"form-control\" id='inputNombreCadena' placeholder=\"Nombre de la Cadena de Produccion\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"col form-group\">\n                            <select className=\"form-control form-group\" id='inputElementoCadena1' >\n                                <option>-</option>\n                                    {Object.keys(this.props.productos).map(articulo=>{\n                                        return <option >{articulo}</option>\n                                    })}\n                            </select>\n                            <select className=\"form-control form-group\" id='inputElementoCadena2' >\n                                <option>-</option>\n                                    {Object.keys(this.props.productos).map(articulo=>{\n                                        return <option >{articulo}</option>\n                                    })}\n                            </select>\n                            <select className=\"form-control form-group\" id='inputElementoCadena3' >\n                                <option>-</option>\n                                    {Object.keys(this.props.productos).map(articulo=>{\n                                        return <option >{articulo}</option>\n                                    })}\n                            </select>\n                            <select className=\"form-control form-group\" id='inputElementoCadena4' >\n                                <option>-</option>\n                                    {Object.keys(this.props.productos).map(articulo=>{\n                                        return <option >{articulo}</option>\n                                    })}\n                            </select>\n                            <select className=\"form-control form-group\" id='inputElementoCadena5' >\n                                <option>-</option>\n                                    {Object.keys(this.props.productos).map(articulo=>{\n                                        return <option >{articulo}</option>\n                                    })}\n                            </select>\n                            </div>\n                        </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.agregarNuevaCadena()\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar Cadena\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n        });\n    }\n    agregarNuevaCadena= async ()=>{\n        let arr=[]\n        const nombre = document.getElementById('inputNombreCadena').value\n        const arrayElementos =[\n            document.getElementById('inputElementoCadena1').value,\n            document.getElementById('inputElementoCadena2').value,\n            document.getElementById('inputElementoCadena3').value,\n            document.getElementById('inputElementoCadena4').value,\n            document.getElementById('inputElementoCadena5').value\n        ]\n        arrayElementos.map(async elemento=>{\n            if(elemento!=='-'){\n                arr.push(elemento)\n            }\n        })\n        await firebase.database().ref().child(this.props.user.uid).child('cadenasDeProduccion').update({\n            [nombre]:arr\n        })\n    }\n    render() {\n        console.log(this.props.user.uid)\n        try {\n            const user = this.props.user.email\n            if (user) {\n                if (this.props.cadenasDeProduccion) {\n                    \n                    return (\n                        <div>\n                            <div className=\"productList\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row align-middle\">\n                                        <div className=\"col-6 offset-3\">\n                                            <form>\n                                                <div className=\"formRow\">\n                                                    <div className=\"form-group col-12 text-center\">\n                                                        <input autoFocus type=\"text\" className=\"form-control\" onChange={\n                                                            e => {\n                                                                this.handleChange(e)\n                                                            }\n                                                        } placeholder=\"Buscar Producto\" />\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div className=\"col\">\n                                            <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertNuevaCadena}>\n                                                Nueva Cadena De Produccion!\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        {Object.keys(this.props.cadenasDeProduccion).map(nombreCadena=>(\n                                            <CadenaDeProduccion\n                                                nombre={nombreCadena}\n                                                cadena={this.props.cadenasDeProduccion[nombreCadena]}\n                                            />\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    )\n                }\n                else {\n                    return (\n                        <IntroCadenasDeProduccion/>\n                    )\n                }\n            }\n        }\n        catch{\n            return (\n                <Login redirect=\"pedidos\" />\n            )\n        }\n    }\n}\nconst mapStateToProps = state => ({\n        pedidos: state.pedidos,\n        user: state.user,\n        productos:state.productos,\n        cadenasDeProduccion:state.cadenasDeProduccion\n})\nexport default connect(mapStateToProps, null)(CadenasDeProduccion)\n","import React, { Component, Fragment } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport withFirebaseAuth from \"react-with-firebase-auth\"\nimport SpinnerLoading from \"../components/SpinnerLoading\"\nimport * as firebase from \"firebase/app\"\nimport Logo from \"../images/logo.png\"\nimport \"./styles/Login.css\"\nimport {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n} from \"../actions/index\"\nimport { connect } from \"react-redux\"\n\nclass Registro extends Component {\n    state = {\n        registro:false,\n        nombre:{\n            valor:undefined,\n            isValid:undefined\n        },\n        mail:{\n            valor:undefined,\n            isValid:true\n        },\n        password:{\n            valor:undefined,\n            isValid:undefined\n        }\n    }\n    async registrar() {\n        if(this.state.nombre.valor && this.state.mail.valor && this.state.password.valor){\n            this.props.isLoading(true)\n            await firebase.auth().createUserWithEmailAndPassword(this.state.mail.valor, this.state.password.valor).then(async result => {\n                result.user.updateProfile({\n                    displayName:this.state.nombre.valor\n                })\n                result.user.sendEmailVerification().catch(error=>{\n                    console.log(error)\n                })\n                firebase.auth().signOut()\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({\n                    mail:{\n                        isValid:false\n                    }\n                })\n            })\n        }\n        else{\n            alert('competar formulario')\n        }\n    }\n    updateMail(data) {\n        this.setState(\n            {\n                mail:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updatePass(data) {\n        this.setState(\n            {\n                password:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updateNombre(data) {\n        this.setState(\n            {\n                nombre:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n        if(!data){\n            this.setState({\n                nombre:{\n                    isValid:false\n                }\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.props.user ?\n                    <Redirect to={\"/\"} />\n                    :\n                    <div className=\"container-fluid login\">\n                        {this.state.loading ?\n                            <div className=\"row\">\n                                {this.state.loading ? <SpinnerLoading /> : null}\n                            </div>\n                            :\n                            <Fragment>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 text-center\">\n                                        <img height=\"125px\" src={Logo} />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\n                                        <form className='needs-validation' noValidate>\n                                            <div className=\"form-row\">\n                                                <div className=\"col-12 form-group\">\n                                                    <label>Nombre Completo</label>\n                                                    <input \n                                                        required \n                                                        autoFocus \n                                                        type=\"text\" \n                                                        className={this.state.nombre.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputNombre\"\n                                                        onChange={e => {\n                                                            this.updateNombre(e.target.value)\n                                                        }} \n                                                        placeholder=\"Nombre Completo\" \n                                                    />\n                                                    <div className=\"valid-feedback\">\n                                                        Looks good!\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">\n                                                        Ingresa un Nombre de Usuario\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Email</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.mail.valor} \n                                                        type=\"email\" \n                                                        onChange={e => {\n                                                            this.updateMail(e.target.value)\n                                                        }} \n                                                        className={this.state.mail.isValid ? \"form-control\" : \"form-control is-invalid\"}\n                                                        id=\"inputEmail\" \n                                                        placeholder=\"Email\" \n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        El Correo Electronico ya esta registrado\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Password</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.password.valor} \n                                                        type=\"password\" \n                                                        onChange={e => {\n                                                            this.updatePass(e.target.value)\n                                                        }} \n                                                        className={this.state.password.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputPassword\" \n                                                        placeholder=\"Password\" \n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <h5>Luego de registrarse revise su casilla de correo y verifique el registro.</h5>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12 text-center\">\n                                                    <Link to=\"/Productos\">\n                                                        <button \n                                                            type=\"submit\" \n                                                            onClick={e => {\n                                                                e.preventDefault()\n                                                                this.registrar()\n                                                            }} \n                                                            className=\"btn btn-success\">Registrarse Ahora!\n                                                        </button>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </Fragment>\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        loading: state.loading,\n    }\n}\nconst mapDispatchToProps = {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Registro)","import React, { Component, Fragment } from \"react\"\r\nimport {Redirect} from 'react-router-dom'\r\nimport NavBar from \"./NavBar\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport Registro from \"../components/Registro\"\r\nimport {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getDeudas,\r\n    getCheques,\r\n    getImagenes,\r\n    getDocumentos,\r\n    getExpresos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario,\r\n    getCadenasDeProduccion\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nclass Layout extends Component {\r\n    \r\n    logOut = async () => {\r\n        await firebase.auth().signOut()\r\n        window.location.reload()\r\n    }\r\n    async fetchData(id) {\r\n        this.props.isLoading(true)\r\n        const productosRef = await firebase.database().ref().child(id).child('productos')\r\n        productosRef.on(\"value\", snapshot => {\r\n            this.props.getProductos(snapshot.val())\r\n        })\r\n        const pedidosRef = await firebase.database().ref().child(id).child('pedidos')\r\n        pedidosRef.on(\"value\", snapshot => {\r\n            this.props.getPedidos(snapshot.val())\r\n        })\r\n        const clientesRef = await firebase.database().ref().child(id).child('clientes')\r\n        clientesRef.on(\"value\", snapshot => {\r\n            this.props.getClientes(snapshot.val())\r\n        })\r\n        const proveedoresRef = await firebase.database().ref().child(id).child('proveedores')\r\n        proveedoresRef.on(\"value\", snapshot => {\r\n            this.props.getProveedores(snapshot.val())\r\n        })\r\n        const deudasRef = await firebase.database().ref().child(id).child('deudas')\r\n        deudasRef.on(\"value\", snapshot => {\r\n            this.props.getDeudas(snapshot.val())\r\n        })\r\n        const cadenasDeProduccionRef = await firebase.database().ref().child(id).child('cadenasDeProduccion')\r\n        cadenasDeProduccionRef.on(\"value\", snapshot => {\r\n            this.props.getCadenasDeProduccion(snapshot.val())\r\n        })\r\n        const chequesRef = await firebase.database().ref().child(id).child('cheques')\r\n        chequesRef.on(\"value\", snapshot => {\r\n            this.props.getCheques(snapshot.val())\r\n        })\r\n        const expresosRef = await firebase.database().ref().child(id).child('expresos')\r\n        expresosRef.on(\"value\", snapshot => {\r\n            this.props.getExpresos(snapshot.val())\r\n            this.props.isLoading(false)\r\n        })\r\n    }\r\n    async fetchImagenes (){\r\n        let array = []\r\n        const imagenesRef = await firebase.storage().ref().child('imagenes').listAll()\r\n        Object.values(imagenesRef.items).map(async imagen=>{\r\n            await imagen.getDownloadURL().then(url=>{\r\n                array.push({\r\n                    nombre:imagen.name.slice(0,imagen.name.indexOf('.')),\r\n                    url:url\r\n                })\r\n            })\r\n        })\r\n        this.props.getImagenes(imagenesRef.items)\r\n    }\r\n    async authListener() {\r\n        firebase.auth().onAuthStateChanged(async user=>{\r\n            if (user) {\r\n                await this.fetchData(user.uid)\r\n                await this.fetchImagenes()\r\n                this.props.changeUser(user)\r\n            }\r\n            this.props.recuperandoUsuario(false)\r\n        })\r\n    }\r\n    async componentDidMount() {\r\n        await this.authListener()\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.recuperarUsuario ?\r\n                        <>\r\n                            <SpinnerLoading title=\"Recuperando Usuario...\" />\r\n                        </>\r\n                        :\r\n                        <div className=\"app\">\r\n                            {!this.props.user ?\r\n                                (this.props.registro?\r\n                                <Registro/>\r\n                                :\r\n                                <Login />\r\n                                )\r\n                                :\r\n                                <>\r\n                                    {this.props.loading ?\r\n                                        <SpinnerLoading title=\"Recuperando Informacion...\" />\r\n                                        :\r\n                                        (this.props.user.emailVerified?\r\n                                        <>\r\n                                            <NavBar user={this.props.user} handleClick={this.logOut} />\r\n                                            {console.log(this.props.user)}\r\n                                            {this.props.children}\r\n                                        </>\r\n                                        :\r\n                                        (this.logOut())\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading,\r\n    user: state.user,\r\n    registro:state.registro,\r\n    recuperarUsuario:state.recuperarUsuario,\r\n    documentos: state.documentos,\r\n    productos:state.productos\r\n})\r\nconst mapDispatchToProps = {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getExpresos,\r\n    getCadenasDeProduccion,\r\n    getImagenes,\r\n    getDeudas,\r\n    getCheques,\r\n    getDocumentos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)","import React ,{Component}from 'react';\nimport { Switch, Route, HashRouter } from \"react-router-dom\"\nimport './App.css';\nimport ProductList from \"./Pages/ProductList\"\nimport PedidosList from \"./Pages/PedidosList\"\nimport MecanizadosList from \"./Pages/MecanizadosList\"\nimport NoMecanizadosList from \"./Pages/NoMecanizadosList\"\nimport SurtidoresList from \"./Pages/SurtidoresList\"\nimport ProovedoresList from \"./Pages/ProovedoresList\"\nimport ClientesList from \"./Pages/ClientesList\"\nimport ExpresosList from \"./Pages/ExpresosList\"\nimport Deudas from \"./Pages/Deudas\"\nimport ListasDePrecios from \"./Pages/ListasDePrecios\"\nimport NuevoPedido from \"./Pages/NuevoPedido\"\nimport ChequesList from \"./Pages/ChequesList\"\nimport NuevoCliente from \"./Pages/NuevoCliente\"\nimport NuevoRecibo from \"./Pages/NuevoRecibo\"\nimport NuevoCheque from \"./Pages/NuevoCheque\"\nimport CadenasDeProduccion from \"./Pages/CadenasDeProduccion\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Login from './components/Login';\nimport Registro from './components/Registro';\nimport Layout from \"./components/Layout\"\nimport * as firebase from 'firebase'\n\n\nfunction App(){\n    var firebaseConfig = {\n        apiKey: \"AIzaSyCymMsjhvVdAbbOZydlSZDWQ1MfpZckj2A\",\n        authDomain: \"control-de-stock-4a3ca.firebaseapp.com\",\n        databaseURL: \"https://control-de-stock-4a3ca.firebaseio.com\",\n        projectId: \"control-de-stock-4a3ca\",\n        storageBucket: \"control-de-stock-4a3ca.appspot.com\",\n        messagingSenderId: \"602181217176\",\n        appId: \"1:602181217176:web:a8cc162c05c7fdfcbc19ed\"\n      };\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n    }\n\n    return (\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/Registro\" component={Registro} />\n            <Route exact path=\"/productos\" component={ProductList} />\n            <Route exact path=\"/Pedidos\" component={PedidosList} />\n            <Route exact path=\"/Mecanizados\" component={MecanizadosList} />\n            <Route exact path=\"/No-Mecanizados\" component={NoMecanizadosList} />\n            <Route exact path=\"/Surtidores\" component={SurtidoresList} />\n            <Route exact path=\"/Clientes\" component={ClientesList} />\n            <Route exact path=\"/Proveedores\" component={ProovedoresList} />\n            <Route exact path=\"/Expresos\" component={ExpresosList} />\n            <Route exact path=\"/Deudas\" component={Deudas} />\n            <Route exact path=\"/CadenasDeProduccion\" component={CadenasDeProduccion} />\n            <Route exact path=\"/ListasDePrecios\" component={ListasDePrecios} />\n            <Route exact path=\"/NuevaVenta\" component={NuevoPedido} />\n            <Route exact path=\"/NuevoRecibo\" component={NuevoRecibo} />\n            <Route exact path=\"/NuevoCliente\" component={NuevoCliente} />\n            <Route exact path=\"/Cheques\" component={ChequesList} />\n            <Route exact path=\"/NuevoCheque\" component={NuevoCheque} />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"GET_DATA\":\r\n            switch (action.section) {\r\n                case 'productos':\r\n                    return {\r\n                        ...state,\r\n                        productos: action.payload\r\n                    }\r\n                    break;\r\n                case 'cadenas de produccion':\r\n                    return {\r\n                        ...state,\r\n                        cadenasDeProduccion: action.payload\r\n                    }\r\n                    break;\r\n                case 'pedidos':\r\n                    return {\r\n                        ...state,\r\n                        pedidos: action.payload\r\n                    }\r\n                    break;\r\n                case 'clientes':\r\n                    return {\r\n                        ...state,\r\n                        clientes: action.payload\r\n                    }\r\n                    break;\r\n                case 'proveedores':\r\n                    return {\r\n                        ...state,\r\n                        proveedores: action.payload\r\n                    }\r\n                    break;\r\n                case 'expresos':\r\n                    return {\r\n                        ...state,\r\n                        expresos: action.payload\r\n                    }\r\n                    break;\r\n                case 'deudas':\r\n                    return {\r\n                        ...state,\r\n                        deudas: action.payload\r\n                    }\r\n                    break;\r\n                case 'cheques':\r\n                    return {\r\n                        ...state,\r\n                        cheques: action.payload\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case \"GET_DOCUMENTOS\":\r\n            return {\r\n                ...state,\r\n                imagenes: action.payload\r\n            }\r\n            break;\r\n        case \"GET_IMAGENES\":\r\n            return {\r\n                ...state,\r\n                imagenes: action.payload\r\n            }\r\n            break;\r\n        case \"RECUPERANDO_USUARIO\":\r\n            return {\r\n                ...state,\r\n                recuperarUsuario: action.payload\r\n            }\r\n            break;\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_USER\":\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_REGISTRO\":\r\n            return {\r\n                ...state,\r\n                registro: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_CLIENTE\":\r\n            return {\r\n                ...state,\r\n                cliente: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_PROVEEDOR\":\r\n            return {\r\n                ...state,\r\n                proveedor: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_EXPRESO\":\r\n            return {\r\n                ...state,\r\n                expreso: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { createStore } from 'redux'\nimport { Provider } from \"react-redux\"\nimport reducer from \"./reducers\"\n\nlet initialState = {\n    registro:false,\n    loading: true,\n    error: null,\n    recuperarUsuario: true,\n    data:{\n        productos:{\n        },\n    }\n}\nconst store = createStore(reducer, initialState)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cf936f02.png\";"],"sourceRoot":""}