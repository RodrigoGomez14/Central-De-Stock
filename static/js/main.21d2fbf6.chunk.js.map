{"version":3,"sources":["images/projectManagement.jpg","components/SpinnerLoading.js","actions/index.js","components/Login.js","components/Product.js","Pages/ProductList.js","components/PedidoItem.js","components/BotoneraPedido.js","components/Pedido.js","Pages/PedidosList.js","Pages/MecanizadosList.js","Pages/NoMecanizadosList.js","Pages/SurtidoresList.js","components/NavBar.js","components/Item.js","components/Ficha.js","components/PedidoCliente.js","components/PedidoProovedor.js","components/FichaPedidos.js","components/FichaProovedor.js","Pages/ProovedoresList.js","components/FichaCliente.js","Pages/ClientesList.js","Pages/ExpresosList.js","components/BotoneraDeuda.js","components/Deuda.js","Pages/Deudas.js","Pages/ListasDePrecios.js","components/ProductElection.js","components/BotoneraNuevoPedido.js","components/ResumenPedido.js","Pages/NuevoPedido.js","components/Cheque.js","Pages/ChequesList.js","components/FormNuevoCliente.js","Pages/NuevoCliente.js","Pages/NuevoRecibo.js","components/FormNuevoCheque.js","Pages/NuevoCheque.js","components/Registro.js","components/Layout.js","App.js","serviceWorker.js","reducers/index.js","index.js","images/logo.png"],"names":["module","exports","SpinnerLoading","className","role","this","props","title","Component","getDocumentos","payload","type","changeUser","changeRegistro","changeCliente","changeProveedor","isLoading","recuperandoUsuario","Login","state","mail","undefined","password","firebase","signInWithEmailAndPassword","then","success","catch","error","alert","data","setState","user","to","loading","height","src","Logo","value","onChange","e","updateMail","target","id","placeholder","updatePass","onClick","preventDefault","logIn","mapDispatchToProps","connect","Product","imagen","cambiarPrecio","a","nuevoPrecio","prompt","ref","child","uid","seccion","nombre","update","precio","parseFloat","eliminarProducto","confirmAlert","buttons","label","remove","eliminarEnlace","disminuye","enlace","result","filter","valor","datosRef","alertConfiguracionProducto","customUI","onClose","map","icon","faTimes","Object","keys","productos","articulo","includes","configuracionProducto","arr","producto","document","getElementById","push","cantidad","nuevaCantidad","parseInt","sumarArticulo","cantidadActual","getDownloadURL","url","console","log","faTrash","alt","sumar","ProductList","nuevaCategoria","alertAgregarProducto","faPlus","agregarProducto","alertGuia","faFrownOpen","autoFocus","forEach","Array","prototype","arrayProductos","getElementsByClassName","call","f","children","innerHTML","toLowerCase","search","email","handleChange","key","redirect","PedidoItem","BotoneraPedido","enviarPedido","faCheck","eliminarPedido","Pedido","pedido","values","restarProducto","pathname","cliente","articulos","descontarPedido","PedidosList","productosRef","date","Date","fecha","getDate","getMonth","getFullYear","pedidos","MecanizadosList","products","images","NoMecanizadosList","noMecanizados","mecanizados","SurtidoresList","getele","surtidores","NavBar","handleClick","Navbar","collapseOnSelect","bg","expand","variant","sticky","Toggle","aria-controls","Brand","displayName","confirmLogOut","Collapse","Nav","Link","Item","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","infoExtra","propiedad","nuevaInfo","array","newArr","newInfo","infoDelete","splice","indexOf","name","edit","eliminarInfoArray","editarCliente","class","agregarInfoArray","editarInfo","Ficha","alertModificarDeuda","sumarDeuda","restarDeuda","faMinus","agregarValor","datos","info","alertAgregarValor","agregarCampo","nuevoCampo","nuevoValor","0","alertAgregarCampo","eliminarValor","valores","valorEliminado","alertEliminarValor","faQuestionCircle","alertEditarNombre","editarNombre","nuevoNombre","nuevaDeuda","deudaRef","deuda","scope","PedidoCliente","alertEliminarPedido","llave","PedidoProovedor","proveedor","Fichapedido","reverse","FichaProovedor","eliminarCliente","proovedor","accion","faArrowLeft","faEdit","FichaPedidos","ProovedoresList","returnBack","alertNuevoProveedor","nuevoProveedor","arrayClientes","parentNode","style","display","proveedores","FichaCliente","alertEditarCliente","arrayInfo","ClientesList","clientes","ExpresosList","changeExpreso","expreso","expresos","BotoneraDeuda","deudaVieja","adicion","quita","pedirCantidad","Deuda","Deudas","arrayDeudas","deudas","updateDeuda","ListasDePrecios","fetchData","file","put","documentos","documento","delete","subirDocumento","files","for","borrarDocumento","slice","window","open","BotoneraNuevoPedido","porcentaje","restar","nuevoTotal","Math","floor","total","modificarTotal","cancelarPedido","ResumenPedido","NuevoPedido","nuevoCliente","alertNuevoCliente","alertElegirProducto","sumaPrecios","cantidadPlus","agregarArticulo","seleccionarDestinatario","alertResumen","handleChangeProducto","ProductElection","handleChangeCliente","Cheque","enviadoA","cheque","enviarCheque","ChequesList","filtro","arrayCheques","$filtro","arrayButton","actualizarBotones","cheques","FormNuevoCliente","direccionPrincipal","direccionSecundaria","ciudad","codigoPostal","CUIT","DNI","telefono1","telefono2","telefono3","telefono4","direccion","1","telefono","2","3","submitForm","onSubmit","confirm","when","message","NuevoCliente","NuevoRecibo","getDay","FormNuevoCheque","entrada","banco","numero","monto","Banco","Cliente","NuevoCheque","Registro","registro","isValid","createUserWithEmailAndPassword","updateProfile","sendEmailVerification","signOut","noValidate","required","updateNombre","registrar","Layout","logOut","location","reload","on","snapshot","getProductos","val","getPedidos","getClientes","getProveedores","getDeudas","getCheques","listAll","imagenesRef","items","getImagenes","onAuthStateChanged","fetchImagenes","authListener","recuperarUsuario","section","App","exact","path","component","Boolean","hostname","match","reducer","action","imagenes","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21d2fbf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/projectManagement.6d29eb92.jpg\";","import React, { Component } from \"react\"\r\nimport \"./styles/SpinnerLoading.css\"\r\n\r\nclass SpinnerLoading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <div className=\"spinner-border text-light\" role=\"status\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h3 className=\"text-white text-center mt-4\">{this.props.title}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SpinnerLoading","export const getProductos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'productos',\r\n        payload\r\n    }\r\n}\r\nexport const getPedidos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'pedidos',\r\n        payload\r\n    }\r\n}\r\nexport const getImagenes = payload => {\r\n    return {\r\n        type: \"GET_IMAGENES\",\r\n        payload\r\n    }\r\n}\r\nexport const getClientes = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'clientes',\r\n        payload\r\n    }\r\n}\r\nexport const getProveedores = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'proveedores',\r\n        payload\r\n    }\r\n}\r\nexport const getDeudas = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'deudas',\r\n        payload\r\n    }\r\n}\r\nexport const getCheques = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'cheques',\r\n        payload\r\n    }\r\n}\r\nexport const getDocumentos = payload => {\r\n    return {\r\n        type: \"GET_DOCUMENTOS\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeUser = payload => {\r\n    return {\r\n        type: \"CHANGE_USER\",\r\n        payload\r\n    }\r\n}\r\nexport const changeRegistro = payload => {\r\n    return {\r\n        type: \"CHANGE_REGISTRO\",\r\n        payload\r\n    }\r\n}\r\nexport const changeCliente = payload => {\r\n    return {\r\n        type: \"CHANGE_CLIENTE\",\r\n        payload\r\n    }\r\n}\r\nexport const changeProveedor = payload => {\r\n    return {\r\n        type: \"CHANGE_PROVEEDOR\",\r\n        payload\r\n    }\r\n}\r\nexport const changeExpreso = payload => {\r\n    return {\r\n        type: \"CHANGE_EXPRESO\",\r\n        payload\r\n    }\r\n}\r\nexport const isLoading = payload => {\r\n    return {\r\n        type: \"IS_LOADING\",\r\n        payload\r\n    }\r\n}\r\nexport const recuperandoUsuario = payload => {\r\n    return {\r\n        type: \"RECUPERANDO_USUARIO\",\r\n        payload\r\n    }\r\n}","import React, { Component, Fragment } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport withFirebaseAuth from \"react-with-firebase-auth\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase/app\"\r\nimport Logo from \"../images/logo.png\"\r\nimport \"./styles/Login.css\"\r\nimport {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        mail: undefined,\r\n        password: undefined\r\n    }\r\n    async logIn() {\r\n        this.props.isLoading(true)\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.mail, this.state.password).then(success => {\r\n            this.props.isLoading(false)\r\n        })\r\n            .catch(error => {\r\n                alert(\"El usuario o la contraseña son incorrectas\")\r\n                this.props.isLoading(false)\r\n            })\r\n\r\n    }\r\n    updateMail(data) {\r\n        this.setState(\r\n            {\r\n                mail: data\r\n            }\r\n        )\r\n    }\r\n    updatePass(data) {\r\n        this.setState(\r\n            {\r\n                password: data\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.user ?\r\n                    <Redirect to={\"/productos\"} />\r\n                    :\r\n                    <div className=\"container-fluid login\">\r\n                        {this.state.loading ?\r\n                            <div className=\"row\">\r\n                                {this.state.loading ? <SpinnerLoading /> : null}\r\n                            </div>\r\n                            :\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 text-center\">\r\n                                        <img height=\"125px\" src={Logo} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n                                        <form>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Email</label>\r\n                                                    <input value={this.state.mail} type=\"email\" onChange={e => {\r\n                                                        this.updateMail(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Password</label>\r\n                                                    <input value={this.state.password} type=\"password\" onChange={e => {\r\n                                                        this.updatePass(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Productos\">\r\n                                                        <button type=\"submit\" onClick={e => {\r\n                                                            e.preventDefault()\r\n                                                            this.logIn()\r\n                                                        }} className=\"btn btn-success\">Ingresar Ahora!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Registro\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={()=>{\r\n                                                            this.props.changeRegistro(true)\r\n                                                        }}>Crear Una Cuenta!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        loading: state.loading,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes,faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Product extends Component {\r\n    state={\r\n        imagen:undefined\r\n    }\r\n    async sumar(nombre, cantidad,disminuye) {\r\n        const nuevaCantidad = parseInt(prompt(\"Ingresar cantidad a sumar\"))\r\n        await this.sumarArticulo(nombre, cantidad, nuevaCantidad, this.props.seccion,disminuye)\r\n    }\r\n    async sumarArticulo(nombre, cantidadActual, nuevaCantidad, seccion,disminuye) {\r\n        await firebase.database().ref().child(this.props.user.uid).child(seccion).child(nombre).update({\r\n            cantidad: (cantidadActual + nuevaCantidad)\r\n        })\r\n        if(disminuye){\r\n            disminuye.map(async enlace=>{\r\n                await firebase.database().ref().child(this.props.user.uid).child('productos').child(enlace).update(\r\n                    {\r\n                        cantidad:(this.props.productos[enlace].cantidad-nuevaCantidad)\r\n                    }\r\n                )\r\n            })\r\n        }\r\n    }\r\n    cambiarPrecio = async () =>{\r\n        const nuevoPrecio = prompt(\"Ingresar el nuevo precio del producto\")\r\n        if(nuevoPrecio){\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).update({\r\n                precio: parseFloat(nuevoPrecio)\r\n            })\r\n        }\r\n    }\r\n    eliminarProducto = async () =>{\r\n        confirmAlert({\r\n            title: 'Eliminar Producto?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).remove()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    eliminarEnlace = async (nombre,disminuye,enlace) =>{\r\n        confirmAlert({\r\n            title: 'Eliminar Enlace Con '+nombre+'?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        const result = disminuye.filter(valor => valor!==enlace);\r\n                        const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(nombre)\r\n                        await datosRef.update({\r\n                                disminuye:result\r\n                        }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    async componentDidMount(){\r\n        if(this.props.user.uid==='RSKNrihne8TnWCEvFah4oVx1Bdm1'){\r\n            await firebase.storage().ref().child('imagenes').child(this.props.nombre+'.png').getDownloadURL().then(url=>{\r\n                this.setState({\r\n                    imagen:url\r\n                })\r\n            })\r\n        }\r\n    }\r\n    alertConfiguracionProducto=(nombre,disminuye)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Configuracion Del Producto</h1>\r\n                                <h3>{nombre}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p>En esta seccion podra enlazar ciertos productos para que al aumentar uno disminuya otro por ejemplo</p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>Al Aumentar {nombre}, disminuir </h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {\r\n                                    this.props.disminuye?\r\n                                    <div className=\"col form-group\">\r\n                                        {this.props.disminuye.map(enlace=>(\r\n                                            <div className=\"badge mr-2 badge-pill badge-info\">\r\n                                                {enlace}\r\n                                                 <FontAwesomeIcon onClick={()=>{this.eliminarEnlace(nombre,disminuye,enlace)}}className=\" ml-1 timesIcon\" icon={faTimes}  />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col form-group\">\r\n                            <select className=\"form-control\" id='inputEnlace1' >\r\n                                <option>-</option>\r\n                                    {Object.keys(this.props.productos).map(articulo=>{\r\n                                        if(!disminuye){\r\n                                            disminuye=[]\r\n                                        }\r\n                                        if(!disminuye.includes(articulo)){\r\n                                           return <option >{articulo}</option>\r\n                                        }\r\n                                    })}\r\n                            </select>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.configuracionProducto(nombre,disminuye)\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Aceptar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    configuracionProducto = async (nombre,disminuye) =>{\r\n        let arr = []\r\n        const producto = document.getElementById('inputEnlace1').value\r\n        if(producto!=='-'){\r\n            if(disminuye){\r\n                arr=disminuye\r\n            }\r\n            else{\r\n                arr=[]\r\n            }\r\n            arr.push(producto)\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').child(nombre).update(\r\n                {\r\n                    disminuye:arr\r\n                }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div className=\"container product bg-dark\">\r\n                <div className=\"row\">\r\n                    <div className=\"col bodyProduct\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 mt-2 text-center\">\r\n                                    <h5 className=\"colorWhite nombreProducto \" onClick={e=>{\r\n                                        this.alertConfiguracionProducto(this.props.nombre,this.props.productos[this.props.nombre].disminuye)\r\n                                    }}>{this.props.nombre}</h5>\r\n                                    <FontAwesomeIcon className=\"deleteIcon\" icon={faTrash} onClick={this.eliminarProducto} />\r\n                                </div>\r\n                            </div>\r\n                            {this.state.imagen?\r\n                                <div className=\"row mt-2 mb-2\">\r\n                                    <div className=\"container img\">\r\n                                            <img \r\n                                            src={this.state.imagen} \r\n                                            className=\"productImg\" alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                            :\r\n                                null\r\n                            }\r\n                            <div className=\"row\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Cantidad</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">{this.props.cantidad}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Precio</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">$ {this.props.precio}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={async () => {\r\n                            await this.sumar(\r\n                                this.props.nombre,\r\n                                this.props.cantidad,\r\n                                this.props.productos[this.props.nombre].disminuye\r\n                            )\r\n                        }}>\r\n                            Agregar Cantidad!\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={this.cambiarPrecio}>\r\n                            Modificar Precio!\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.user,\r\n        productos:state.productos\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Product)","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFrownOpen,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport \"./Styles/ProductList.css\"\r\nimport { tsObjectKeyword } from \"@babel/types\";\r\n\r\nclass ProductList extends Component {\r\n    state={nuevaCategoria:false}\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-none align-items-center\"\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n\r\n    alertAgregarProducto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input  type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarProducto = async () =>{\r\n        const nombre = document.getElementById('nombreNuevoProducto').value\r\n        const precio = document.getElementById('precioNuevoProducto').value\r\n        if(nombre){\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\r\n                {\r\n                    [nombre]:{\r\n                        nombre:nombre,\r\n                        cantidad:0,\r\n                        precio:precio\r\n                    }\r\n                }\r\n            )\r\n        }        \r\n    }\r\n    alertGuia = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faFrownOpen}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>No hay productos</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p> Ingrese una categoria para su nuevo producto ej: Pelotas, Remeras, Accesorios, etc\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreCategoria' placeholder=\"Categoria del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p>Ingrese el nombre y precio de un producto para poder comenzar a utilizar el Control De Stock\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                {!this.props.productos?\r\n                                <>\r\n                                    {this.alertGuia()}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                            <h1 className='text-white'>Aun no hay ningun producto!</h1>\r\n                                        </div>\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertAgregarProducto}>\r\n                                            Agregar nuevo Producto!\r\n                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"row align-middle\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertAgregarProducto}>\r\n                                                Agregar nuevo Producto!\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.productos).map(nombre=>(\r\n                                            <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={this.props.productos[nombre].nombre}>\r\n                                                <Product disminuye={this.props.productos[nombre].disminuye} nombre={this.props.productos[nombre].nombre} precio={this.props.productos[nombre].precio}  cantidad={this.props.productos[nombre].cantidad} seccion=\"productos\" />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        productos: state.productos,\r\n        user: state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(ProductList)","import React, { Component, Fragment } from \"react\"\r\n\r\nclass PedidoItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 text-left\">\r\n                        <h5>{this.props.nombre}</h5>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <h5>{this.props.cantidad}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoItem","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraPedido extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.enviarPedido}><FontAwesomeIcon icon={faCheck} /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <span className=\"badge badge-light\">\r\n                        <h4>$ {this.props.precio}</h4>\r\n                    </span>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.eliminarPedido}><FontAwesomeIcon icon={faTimes}  /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraPedido","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PedidoItem from \"./PedidoItem\"\r\nimport BotoneraPedido from \"./BotoneraPedido\"\r\nimport \"./styles/Pedido.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nimport {changeCliente} from '../actions/index'\r\nclass Pedido extends Component {\r\n    state = {\r\n        pedido: [],\r\n\r\n    }\r\n    async restarProducto(producto, nuevaCantidad) {\r\n        console.log(producto, nuevaCantidad)\r\n        const productoRef = await firebase.database().ref().child(this.props.user.uid).child('productos').child(producto)\r\n        productoRef.update(\r\n            {\r\n                cantidad: nuevaCantidad\r\n            }\r\n        )\r\n\r\n    }\r\n    async descontarPedido(pedido) {\r\n        Object.values(pedido).map(async articulo => {\r\n            this.restarProducto(articulo.nombre, this.props.productos[articulo.nombre].cantidad - parseInt(articulo.cantidad))\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"pedido bg-dark p-4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4 onClick={\r\n                                    ()=>{\r\n                                        this.props.changeCliente(this.props.cliente)\r\n                                    }\r\n                                }><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {Object.keys(this.props.pedido.articulos).map(articulo => (\r\n                                <>\r\n                                <PedidoItem nombre={this.props.pedido.articulos[articulo].nombre} cantidad={this.props.pedido.articulos[articulo].cantidad} />\r\n                                </>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <BotoneraPedido\r\n                        precio={this.props.pedido.precio}\r\n                        enviarPedido={async e => {\r\n                            confirmAlert({\r\n                                title: 'Enviar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Enviar',\r\n                                        onClick: async () => {\r\n                                            await this.descontarPedido(this.props.pedido.articulos)\r\n                                            this.props.enviarPedido(this.props.id, this.props.pedido)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n\r\n                        }}\r\n                        eliminarPedido={e => {\r\n                            confirmAlert({\r\n                                title: 'Eliminar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Eliminar',\r\n                                        onClick: async () => {\r\n                                            this.props.eliminarPedido(this.props.id)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    productos:state.productos\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Pedido)","import React, { Component } from \"react\"\r\nimport Pedido from \"../components/Pedido\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport \"./Styles/PedidosList.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport projectManagement from \"../images/projectManagement.jpg\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass PedidosList extends Component {\r\n\r\n    async enviarPedido(key, pedido,uid) {\r\n        const productosRef = await firebase.database().ref().child(uid).child('clientes').child(pedido.cliente)\r\n        if (productosRef.child(\"pedidos\")) {\r\n            let id = 0;\r\n            const date = new Date()\r\n            productosRef.child(\"pedidos\").push({\r\n                fecha: `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`,\r\n                articulos: pedido.articulos\r\n            })\r\n            this.eliminarPedido(key)\r\n        }\r\n    }\r\n    async eliminarPedido(key) {\r\n        await firebase.database().ref().child(this.props.user.uid).child('pedidos').child(key).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.user.uid)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.pedidos) {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.pedidos).map(key => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\">\r\n                                                <Pedido id={key} pedido={this.props.pedidos[key]} cliente={this.props.pedidos[key].cliente} enviarPedido={(key,pedido)=>{\r\n                                                    this.enviarPedido(key,pedido,this.props.user.uid,this.props.pedidos[key])\r\n                                                }} eliminarPedido={this.eliminarPedido} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 form-group text-center\">\r\n                                            <h3 className=\"shadowTitle\">Aun No Hay Ningun Pedido!</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"pedidos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n        pedidos: state.pedidos,\r\n        user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(PedidosList)\r\n","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport \"./Styles/ProductList.css\"\r\n\r\nclass MecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {console.log(this.props.products)}\r\n                                    {Object.values(this.props.products).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"mecanizados\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(MecanizadosList)","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass NoMecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.noMecanizados).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"no-mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"productos2\"],\r\n        mecanizados: state.data[\"mecanizados2\"],\r\n        noMecanizados: state.data[\"no-mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(NoMecanizadosList)","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass SurtidoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var array = document.getele\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.surtidores).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"productos\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"surtidores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        surtidores: state.data[\"Surtidores2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(SurtidoresList)","import React, { Component } from \"react\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport { Link } from \"react-router-dom\"\r\nimport logo from \"../images/logo.png\"\r\nimport \"./styles/Navbar.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass NavBar extends Component {\r\n    confirmLogOut() {\r\n        confirmAlert({\r\n            title: 'Cerrar Sesión?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cerrar',\r\n                    onClick: async () => {\r\n                        this.props.handleClick()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.user ?\r\n                    <Navbar collapseOnSelect bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Brand>\r\n                            <div className='ml-4'>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <h6 className='text-white'>{this.props.user.displayName}</h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                            this.confirmLogOut()\r\n                                        }}>Log Out</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto ml-auto\">\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Productos\">Productos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Pedidos\">Pedidos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Clientes\">Clientes</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Proveedores\">Proveedores</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Deudas\">Deudas</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Cheques\">Cheques</Link>\r\n                                </Nav.Link>\r\n                                {this.props.user.uid==='rm3bclzcSahomVlQBxR9XOxHy9E3'?\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/ListasDePrecios\">Listas De Precios</Link>\r\n                                </Nav.Link>\r\n                                :\r\n                                null\r\n                                }\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                        <Nav.Link>\r\n                        </Nav.Link>\r\n                            <Link className=\"nav-link p-2 btn btn-success\" to=\"/NuevaVenta\" id=\"buttonNuevoPedido\">Nueva Venta</Link>\r\n                        <Nav.Link>\r\n                            <Link className=\"nav-link p-2 btn btn-outline-success\" to=\"/NuevoRecibo\" id=\"buttonNuevoRecibo\">Nuevo Recibo</Link>\r\n                        </Nav.Link>\r\n                    </Navbar>\r\n                    :\r\n                    null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NavBar)","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/ficha.css\"\r\nimport * as firebase from \"firebase\"\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass Item extends Component {\r\n    constructor(props) {\r\n        const firebaseConfig = {\r\n            apiKey: \"AIzaSyDPmTjxjMxN2abofP8ZczgFGeYQYSvbXHE\",\r\n            authDomain: \"stock-119e8.firebaseapp.com\",\r\n            databaseURL: \"https://stock-119e8.firebaseio.com\",\r\n            projectId: \"stock-119e8\",\r\n            storageBucket: \"stock-119e8.appspot.com\",\r\n            messagingSenderId: \"1007277754269\",\r\n            appId: \"1:1007277754269:web:d1db0def0da907b2\"\r\n        }\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        }\r\n        super(props)\r\n    }\r\n    state = {\r\n        infoExtra: undefined\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    \r\n    async editarInfo(propiedad) {\r\n        const nuevaInfo = prompt(\"Ingresar Nueva Informacion\")\r\n        if (nuevaInfo) {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: nuevaInfo\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").child(propiedad).remove()\r\n        }\r\n    }\r\n    async agregarInfoArray(propiedad, array) {\r\n        let newArr = array\r\n        let newInfo = prompt(\"Introducir nueva informacion\")\r\n        if (newInfo) {\r\n            newArr.push(newInfo)\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: newArr\r\n                }\r\n            )\r\n        }\r\n    }\r\n    async eliminarInfoArray(propiedad, array, infoDelete) {\r\n        confirmAlert({\r\n            title: 'Eliminar Informacion?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si,eliminar',\r\n                    onClick: async () => {\r\n                        let newArr = array\r\n                        newArr.splice(newArr.indexOf(infoDelete), 1)\r\n                        await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                            {\r\n                                [propiedad]: newArr\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        if (this.props.name === \"nombre\") {\r\n            return (null)\r\n        }\r\n        else {\r\n            if (this.props.name === \"telefono\" || this.props.name === \"direccion\" || this.props.name === \"infoExtra\") {\r\n                {\r\n                    return (\r\n                        (this.props.name === \"infoExtra\" ?\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3 className=\"nombreItem\" onClick={e => {\r\n                                                this.agregarInfoArray(this.props.name, this.props.data).then(\r\n                                                    this.props.editarCliente()\r\n                                                )\r\n                                            }}> <small>{this.props.name}</small> </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente()\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3><small>{this.props.name}</small></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n            else {\r\n                return (\r\n                    this.props.edit ?\r\n                        <div className=\"container color-white ficha p-2\">\r\n                            {this.props.name === \"deuda\" ?\r\n                                <h3><small>{this.props.name}</small></h3>\r\n                                :\r\n                                <h3 className=\"nombreItem\" onClick={e => {\r\n                                    this.editarInfo(this.props.name).then(\r\n                                        this.props.editarCliente()\r\n                                    )\r\n                                }}> <small>{this.props.name}</small> </h3>\r\n                            }\r\n                            <h3>{this.props.data}</h3>\r\n                        </div>\r\n                        :\r\n                        <div className=\"container color-white ficha  p-2\">\r\n                            <h3 className=\"\"><small>{this.props.name}</small></h3>\r\n                            {this.props.name === \"deuda\" ?\r\n                                (this.props.data === 0 ?\r\n                                    <h3 className=\"itemDeuda \" >{this.props.data}</h3>\r\n                                    :\r\n                                    <h3 className=\"\">$ {this.props.data}</h3>)\r\n                                :\r\n                                <h3 className=\"\">{this.props.data}</h3>\r\n                            }\r\n                        </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Item)","import React, { Component, Fragment } from \"react\"\r\nimport Item from \"./Item\"\r\nimport \"./styles/ficha.css\"\r\nimport * as firebase from 'firebase'\r\nimport {connect} from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faPlus, faMinus,faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { changeCliente,changeProveedor } from \"../actions/index\"\r\n\r\nclass Ficha extends Component {\r\n    alertModificarDeuda=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Modificar Deuda</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" className=\"form-control\" id='inputNuevaDeuda' placeholder=\"Inresar Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.sumarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.restarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarValor=async (key)=>{\r\n        const nuevaInfo = document.getElementById('inputNuevaInfo').value\r\n        let newArr = this.props.cliente.datos.info[key]\r\n        if(nuevaInfo){\r\n            newArr.push(nuevaInfo)\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n            await datosRef.update({\r\n                [key]:newArr\r\n            }\r\n            )\r\n            this.props.editarCliente()\r\n        }\r\n    }\r\n    alertAgregarValor=(key)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar {key}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevaInfo' placeholder=\"Ingresar Informacion...\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarValor(key)\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarCampo=async ()=>{\r\n        const nuevoCampo = document.getElementById('inputNuevoCampo').value\r\n        const nuevoValor = document.getElementById('inputNuevoValor').value\r\n        if(nuevoCampo){\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n            await datosRef.update({\r\n                [nuevoCampo]:{\r\n                    0:nuevoValor\r\n                }\r\n            }\r\n            )\r\n            this.props.editarCliente()\r\n        }\r\n    }\r\n    alertAgregarCampo=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nueva Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Campo</span>\r\n                                        </div>\r\n                                        <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevoCampo' placeholder=\"ej: Ciudad\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Valor</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" id='inputNuevoValor' placeholder=\"ej: Buenos Aires\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarCampo()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarValor=async (key,valores,valorEliminado)=>{\r\n        const result = valores.filter(valor => valor!==valorEliminado);\r\n        const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n        await datosRef.update({\r\n                [key]:result\r\n        }\r\n        )\r\n        this.props.editarCliente()\r\n        \r\n    }\r\n    alertEliminarValor=(key,valores,valor)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Eliminar Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-left\">\r\n                                <p>Desea eliminar {valor} ?</p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.eliminarValor(key,valores,valor)\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    Si, Eliminar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    alertEditarNombre=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Editar Nombre de {this.props.cliente.datos.nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevoNombre' placeholder=\"Ingresar Nuevo Nombre\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.editarNombre()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    Si, Editar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    editarNombre= async ()=>{\r\n        const nuevoNombre = document.getElementById('inputNuevoNombre').value\r\n        if(nuevoNombre){\r\n            let data = this.props.cliente\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(data.datos.nombre).remove()\r\n            data.datos.nombre=nuevoNombre\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion)\r\n            await datosRef.update({\r\n                [data.datos.nombre]:data\r\n            }\r\n            )\r\n            if(this.props.seccion==='clientes'){\r\n                this.props.changeCliente(data.datos.nombre)\r\n            }\r\n            else{\r\n                this.props.changeProveedor(data.datos.nombre)\r\n            }\r\n        }\r\n    }\r\n    async sumarDeuda() {\r\n        const nuevaDeuda = parseFloat(document.getElementById('inputNuevaDeuda').value)\r\n        if(nuevaDeuda){\r\n            const deudaRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\")\r\n            await deudaRef.update({\r\n                deuda: parseFloat(this.props.cliente.datos.deuda)+nuevaDeuda\r\n            }\r\n            )\r\n        }\r\n    }\r\n    async restarDeuda() {\r\n        const nuevaDeuda = parseFloat(document.getElementById('inputNuevaDeuda').value)\r\n        if(nuevaDeuda){\r\n            const deudaRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\")\r\n            await deudaRef.update({\r\n                deuda: parseFloat(this.props.cliente.datos.deuda)-nuevaDeuda\r\n            }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col form-group name\">\r\n                        {this.props.edit?\r\n                            <h1 onClick={this.alertEditarNombre} className='edit'>{this.props.cliente.datos.nombre}<span className={this.props.cliente.datos.deuda>0?'badge badge-pill badge-danger ml-4 deuda':'badge badge-pill badge-success ml-4 deuda'} >${this.props.cliente.datos.deuda}</span></h1>\r\n                        :\r\n                            <h1>{this.props.cliente.datos.nombre}<span className={this.props.cliente.datos.deuda>0?'badge badge-pill badge-danger ml-4 deuda':'badge badge-pill badge-success ml-4 deuda'} onClick={this.alertModificarDeuda} >${this.props.cliente.datos.deuda}</span></h1>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {this.props.edit?\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 form-group text-center\">\r\n                        <button type='button' className=\"btn btn-success\" onClick={this.alertAgregarCampo}>\r\n                            Agregar nuevo campo\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n                }\r\n                <div className=\"row\">\r\n                    {this.props.cliente.datos.info?\r\n                    (\r\n                        <table className=\"table table-hover table-dark\">\r\n                            <tbody>\r\n                                {\r\n                                    Object.keys(this.props.cliente.datos.info).map(key => (\r\n                                    (key === \"nombre\"||key==='deuda' ?\r\n                                        null\r\n                                        :\r\n                                        (\r\n                                        <tr>\r\n                                            {this.props.edit?\r\n                                            <>\r\n                                                <th scope=\"row\">{key}</th>\r\n                                                <td>\r\n                                                    {this.props.cliente.datos.info[key].map(valor=>( \r\n                                                        <p className='mt-2 mb-2 eliminarValor valor' onClick={()=>{\r\n                                                            this.alertEliminarValor(key,this.props.cliente.datos.info[key],valor)\r\n                                                        }}>{valor}</p>\r\n                                                    ))}\r\n                                                </td>\r\n                                                <th>\r\n                                                    <FontAwesomeIcon className='newInfo'icon={faPlus} onClick={()=>{\r\n                                                        this.alertAgregarValor(key)\r\n                                                    }}  />\r\n                                                </th>\r\n                                            </>\r\n                                            :\r\n                                            <>\r\n                                                <th scope=\"row\">{key}</th>\r\n                                                <td>\r\n                                                    {this.props.cliente.datos.info[key].map(valor=>( \r\n                                                        <p className='mt-2 mb-2 valor'>{valor}</p>\r\n                                                    ))}\r\n                                                </td>\r\n                                            </>\r\n                                            }\r\n                                        </tr>\r\n                                        )\r\n                                    )\r\n                                ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                    :\r\n                    <>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1 className='text-white'> <span className='badge badge-pill bdage-info'> Aun no hay Informacion para mostrar</span></h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <button type='button' className='btn btn-success' onClick={this.alertAgregarCampo}> Agregar Informacion!</button>\r\n                        </div>\r\n                    </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nconst mapDispatchToProps={\r\n    changeCliente,\r\n    changeProveedor\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Ficha)\r\n\r\n","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\nclass PedidoCliente extends Component {\r\n    alertEliminarPedido=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Eliminar Pedido</h1>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 text-center\">\r\n                                    <p>La mercaderia sera ingresada nuevamente!</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.eliminarPedido()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Si, Eliminar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarPedido = async () =>{\r\n        this.props.data.articulos.map(async articulo=>{\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').child(articulo.nombre).update(\r\n                {\r\n                    cantidad:this.props.productos[articulo.nombre].cantidad+parseFloat(articulo.cantidad)\r\n                }\r\n            )\r\n        })\r\n        await firebase.database().ref().child(this.props.user.uid).child('clientes').child(this.props.cliente).child('pedidos').child(this.props.llave).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container p2 pedido bg-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row d-flex align-items-center\">\r\n                        <div className=\"col-10\">\r\n                            <h3 className='mt-1 mb-1'>{this.props.data.fecha}</h3>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <FontAwesomeIcon className='eliminarPedido' onClick={\r\n                                this.alertEliminarPedido\r\n                            } icon={faTimes}  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {this.props.data.articulos.map(articulo => (\r\n                        <div className=\"row separator d-flex\">\r\n                                <div className=\" pt-2 pb-2 \">\r\n                                    <p>{articulo.cantidad} </p>\r\n                                </div>\r\n                                <div className=\" pt-2 pb-2 text-right flex-grow-1\">\r\n                                    <p>{articulo.nombre}</p>\r\n                                </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    productos:state.productos,\r\n    cliente:state.cliente\r\n})\r\nexport default connect(mapStateToProps,null)(PedidoCliente)","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\n\r\nclass PedidoProovedor extends Component {\r\n    alertEliminarPedido=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Eliminar Pedido</h1>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 text-center\">\r\n                                    <p>La mercaderia sera descontada</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.eliminarPedido()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Si, Eliminar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarPedido = async () =>{\r\n        this.props.data.articulos.map(async articulo=>{\r\n\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').child(articulo.nombre).update(\r\n                {\r\n                    cantidad:this.props.productos[articulo.nombre].cantidad-articulo.cantidad\r\n                }\r\n            )\r\n        })\r\n        await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proveedor).child('pedidos').child(this.props.llave).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container p2 pedido bg-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row d-flex align-items-center\">\r\n                        <div className=\"col-10\">\r\n                            <h3 className='mt-1 mb-1'>{this.props.data.fecha}</h3>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <FontAwesomeIcon className='eliminarPedido' onClick={\r\n                                this.alertEliminarPedido\r\n                            } icon={faTimes}  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {this.props.data.articulos.map(articulo => (\r\n                        <div className=\"row separator d-flex\">\r\n                                <div className=\" pt-2 pb-2 \">\r\n                                    <p>{articulo.cantidad} </p>\r\n                                </div>\r\n                                <div className=\" pt-2 pb-2 text-right flex-grow-1\">\r\n                                    <p>{articulo.nombre} <span className='badge badg  e-pill badge-light'>${articulo.precio}</span></p>\r\n                                </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    productos:state.productos,\r\n    user:state.user,\r\n    proveedor:state.proveedor\r\n})\r\nexport default connect(mapStateToProps,null)(PedidoProovedor)","import React, { Component } from \"react\"\r\nimport PedidoCliente from \"./PedidoCliente\"\r\nimport PedidoProovedor from \"./PedidoProovedor\"\r\n\r\n\r\nclass Fichapedido extends Component {\r\n    render() {\r\n        if (this.props.data !== undefined) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            Object.keys(this.props.data).reverse().map(key=>(\r\n                                <div className=\"col-12 col-md-6 col-lg-4 form-group d-flex align-items-center\">\r\n                                    {this.props.seccion === \"proveedores\" ?\r\n                                        <PedidoProovedor data={this.props.data[key]} llave={key}/>\r\n                                        :\r\n                                        <PedidoCliente data={this.props.data[key]} llave={key}  />\r\n                                    }\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Fichapedido","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport NavBar from \"./NavBar\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faEdit, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaProovedor extends Component {\r\n    state = {\r\n        edit: false\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n    editarCliente() {\r\n        if (this.state.edit) {\r\n            this.setState({\r\n                edit: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: `/${this.props.seccion}`\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={this.props.handleClick} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha \r\n                                    editarCliente={e => {\r\n                                        this.editarCliente()\r\n                                    }} \r\n                                    edit={this.state.edit} \r\n                                    seccion={'proveedores'} \r\n                                    cliente={this.props.proovedor} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className=\"name\">Lista de Pedidos</h2>\r\n                            </div>\r\n                            <div className=\"col-12 text-center form-group pt-2\">\r\n                                <FichaPedidos seccion='proveedores' data={this.props.proovedor.pedidos} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FichaProovedor)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaProovedor from \"../components/FichaProovedor\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeProveedor } from \"../actions/index\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ProovedoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    returnBack = () => {\r\n        this.props.changeProveedor(undefined)\r\n    }\r\n    alertNuevoProveedor = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Proveedor</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoProveedor' placeholder=\"Nombre del Proveedor\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoProveedor()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    nuevoProveedor = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoProveedor\").value\r\n        if(nombre){\r\n            firebase.database().ref().child(this.props.user.uid).child('proveedores').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        deuda:0,\r\n                        nombre:nombre,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.proveedor) {\r\n                    const proveedor = this.props.proveedores[this.props.proveedor]\r\n                    if (proveedor) {\r\n                        return (\r\n                            <div>\r\n                                <FichaProovedor proovedor={proveedor} seccion=\"Proveedores\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Proveedor</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Proveedor\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.alertNuevoProveedor}>\r\n                                                Agregar Nuevo Proveedor\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.proveedores?\r\n                                            Object.values(this.props.proveedores).map(proveedor => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/Proveedores/`,\r\n                                                        search: `${proveedor.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeProveedor(proveedor.datos.nombre)\r\n                                                        }}>\r\n                                                            {proveedor.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Proveedores!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Proveedores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    proveedores: state.proveedores,\r\n    proveedor: state.proveedor\r\n})\r\nconst mapDispatchToProps = {\r\n    changeProveedor,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProovedoresList)","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faPlus,faMinus, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaCliente extends Component {\r\n    state = {\r\n        edit: false,\r\n        redirect: false\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        console.log(this.props.seccion)\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    async agregarInfoExtra() {\r\n        let arrayInfo\r\n        if (this.props.proovedor.datos.infoExtra) {\r\n            arrayInfo = this.props.proovedor.datos.infoExtra\r\n        }\r\n        else {\r\n            arrayInfo = []\r\n        }\r\n        arrayInfo.push(prompt(\"Ingresar Informacion Extra\"))\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"clientes\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\r\n            {\r\n                infoExtra: arrayInfo\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    alertEditarCliente=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Editar Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" className=\"form-control\" id='inputNuevoCa' placeholder=\"Inresar Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.sumarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.restarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    editarCliente() {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: \"/clientes\"\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={e => {\r\n                                        this.props.handleClick()\r\n                                        this.editarCliente()\r\n                                    }} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha\r\n                                    editarCliente={e => {\r\n                                        this.editarCliente()\r\n                                    }}\r\n                                    edit={this.state.edit}\r\n                                    seccion={'clientes'}\r\n                                    cliente={this.props.proovedor}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className=\"name\">Lista de Pedidos</h2>\r\n                            </div>\r\n                            <div className=\"col-12 text-center form-group pt-2\">\r\n                                <FichaPedidos data={this.props.proovedor.pedidos} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user,\r\n})\r\nexport default connect(mapStateToProps,null)(FichaCliente)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaCliente from \"../components/FichaCliente\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { changeCliente } from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass ClientesList extends Component {\r\n    returnBack() {\r\n        this.props.changeCliente(null)\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.cliente) {\r\n                    const cliente = this.props.clientes[this.props.cliente]\r\n                    if (cliente) {\r\n                        return (\r\n                            <div>\r\n                                <FichaCliente proovedor={cliente} seccion=\"clientes\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Cliente</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Cliente\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <Link to=\"/NuevoCliente\">\r\n                                                <button type=\"button\" className=\"btn btn-success\">\r\n                                                    Agregar Nuevo Cliente\r\n                                                </button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.clientes?\r\n                                            Object.values(this.props.clientes).map(cliente => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/clientes/`,\r\n                                                        search: `${cliente.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeCliente(cliente.datos.nombre)\r\n                                                        }}>\r\n                                                            {cliente.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Clientes!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Clientes\" />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cliente: state.cliente,\r\n    clientes: state.clientes\r\n})\r\nconst mapDispatchToProps = {\r\n    changeCliente,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientesList)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaProovedor from \"../components/FichaProovedor\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeExpreso } from \"../actions/index\"\r\n\r\n\r\nclass ExpresosList extends Component {\r\n    returnBack() {\r\n        this.props.changeExpreso(null)\r\n\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.expreso) {\r\n                    const expreso = this.props.expresos[this.props.expreso]\r\n                    return (\r\n                        <div>\r\n                            <FichaProovedor seccion=\"expresos\" handleClick={e => {\r\n                                this.returnBack()\r\n                            }} proovedor={expreso} />\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Expreso\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.values(this.props.expresos).map(expreso => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                <Link to={{\r\n                                                    pathname: `/expresos/`,\r\n                                                    search: `${expreso.datos.nombre}`\r\n                                                }}>\r\n                                                    <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                        this.props.changeExpreso(expreso.datos.nombre)\r\n                                                    }}>\r\n                                                        {expreso.datos.nombre}\r\n                                                    </button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Expresos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    expresos: state.data[\"expresos2\"],\r\n    expreso: state.expreso\r\n})\r\nconst mapDispatchToProps = {\r\n    changeExpreso,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpresosList)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraDeuda extends Component {\r\n    pedirCantidad() {\r\n        const nuevaDeuda = prompt(\"Ingresar Canidad\")\r\n        if (nuevaDeuda)\r\n            return nuevaDeuda\r\n        else\r\n            return 0\r\n    }\r\n    sumarDeuda(deudaVieja, adicion) {\r\n        return deudaVieja + parseInt(adicion)\r\n    }\r\n    restarDeuda(deudaVieja, quita) {\r\n        return deudaVieja - parseInt(quita)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={(e) => {\r\n                            this.props.handleClick(this.props.cliente, this.sumarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faPlus} /></button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                            this.props.handleClick(this.props.cliente, this.restarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faMinus} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraDeuda","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport BotoneraDeuda from \"./BotoneraDeuda\"\r\nimport \"./styles/Deuda.css\"\r\n\r\nclass Deuda extends Component {\r\n    render() {\r\n        if (this.props.deuda === 0) {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container-fluid pt-2 pb-2 deuda bg-dark\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-1\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <h3>$ {this.props.deuda}</h3>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <BotoneraDeuda cliente={this.props.cliente} deuda={this.props.deuda} handleClick={this.props.handleClick} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Deuda","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport \"./Styles/PedidosList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Deudas extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayDeudas = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center\")\r\n        forEach.call(arrayDeudas, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex\";\r\n            }\r\n        });\r\n    }\r\n    async updateDeuda(cliente, nuevaDeuda,uid) {\r\n        const datosRef = await firebase.database().ref().child(uid).child('clientes').child(cliente).child(\"datos\")\r\n        datosRef.update({\r\n            deuda: nuevaDeuda\r\n        })\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.clientes) {\r\n                    const deudas = []\r\n                    Object.values(this.props.clientes).map(cliente => {\r\n                        if (cliente.datos.deuda != 0) {\r\n                            deudas.push({\r\n                                nombre: cliente.datos.nombre,\r\n                                deuda: cliente.datos.deuda\r\n                            })\r\n                        }\r\n                    })\r\n                    if(deudas.length){\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6 offset-3\">\r\n                                                <form>\r\n                                                    <div className=\"formRow\">\r\n                                                        <div className=\"form-group col-12 text-center\">\r\n                                                            <input type=\"text\" className=\"form-control\" onChange={\r\n                                                                e => {\r\n                                                                    this.handleChange(e)\r\n                                                                }\r\n                                                            } placeholder=\"Buscar Deuda\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {deudas.map(deuda => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 form-group text-center\">\r\n                                                    <Deuda cliente={deuda.nombre} deuda={deuda.deuda} handleClick={(cliente,deuda)=>{\r\n                                                        this.updateDeuda(cliente,deuda,this.props.user.uid)\r\n                                                    }} />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container p-absolute-center\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h3 className=\"shadowTitle\">No Hay Deudas Pendientes!</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container p-absolute-center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h3 className=\"shadowTitle\">No Hay Deudas Pendientes!</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Deudas\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    clientes: state.clientes\r\n})\r\nexport default connect(mapStateToProps, null)(Deudas)\r\n","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport \"./Styles/ChequesList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport {getDocumentos} from '../actions/index'\r\n\r\nclass ListasDePrecios extends Component {\r\n    fetchData(){\r\n        \r\n    }\r\n    async componentDidMount(){\r\n        this.fetchData()\r\n    }\r\n    async subirDocumento() {\r\n        if (this.state.file) {\r\n            console.log(this.state.file)\r\n            await firebase.storage().ref().child(\"ListasDePrecios\").child(this.state.file.name).put(this.state.file).then(e => {\r\n                this.setState({\r\n                    file: undefined,\r\n                    documentos: undefined,\r\n                    loading: true\r\n                })\r\n                this.fetchData()\r\n            })\r\n        }\r\n    }\r\n    async borrarDocumento(documento) {\r\n        confirmAlert({\r\n            title: 'Eliminar Documento?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.storage().ref().child(\"ListasDePrecios\").child(documento).delete().then(e => {\r\n                            this.setState({\r\n                                documentos: undefined,\r\n                                edit: false,\r\n                                loading: true\r\n                            })\r\n                            this.fetchData()\r\n                        }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.documentos)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12  col-md-8 offset-md-2 col-lg-6 offset-lg-3 form-group\">\r\n                                        <div class=\"input-group mb-3\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                {this.state.file ?\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={e => {\r\n                                                        this.subirDocumento()\r\n                                                    }}>Subir Documento!</button>\r\n                                                    :\r\n                                                    <button type=\"button\" className=\"btn btn-success disabled\">Subir Documento!</button>\r\n                                                }\r\n                                            </div>\r\n                                            <div class=\"custom-file\">\r\n                                                <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" onChange={e => {\r\n                                                    this.setState(\r\n                                                        {\r\n                                                            file: e.target.files[0]\r\n                                                        }\r\n                                                    )\r\n                                                }} />\r\n                                                <label class=\"custom-file-label\" for=\"inputGroupFile01\">{\r\n                                                    this.state.file ?\r\n                                                        \"Archivo Elegido!\"\r\n                                                        :\r\n                                                        \"Elegir Archivo\"\r\n                                                }</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 form-group text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={e => {\r\n                                            if (this.state.edit) {\r\n                                                this.setState({\r\n                                                    edit: false\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                this.setState({\r\n                                                    edit: true\r\n                                                })\r\n                                            }\r\n                                        }}>Eliminar Archivo</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.keys(this.props.documentos).map(key => (\r\n                                        console.log(this.props.documentos[key].url)\r\n                                            (this.state.edit ?\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                                        this.borrarDocumento(this.props.documentos[key].nombre)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={e => {\r\n                                                        window.open(this.props.documentos[key].url)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                            )\r\n                                    ))}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return null\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    documentos: state.documentos,\r\n    productos:state.productos\r\n})\r\nconst mapDispatchToProps={\r\n    getDocumentos\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListasDePrecios)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\n\r\nclass Product extends Component {\r\n    state={\r\n        imagen:undefined\r\n    }\r\n    async componentDidMount(){\r\n        if(this.props.user.uid==='RSKNrihne8TnWCEvFah4oVx1Bdm1'){\r\n            await firebase.storage().ref().child('imagenes').child(this.props.nombre+'.png').getDownloadURL().then(url=>{\r\n                this.setState({\r\n                    imagen:url\r\n                })\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"product-election bg-dark\" onClick={this.props.handleClick}>\r\n                <div className=\"product-Info\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h6 className=\"colorWhite textBold mt-2\">{this.props.nombre}</h6>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.imagen?\r\n                            <div className=\"row mt-2 mb-2\">\r\n                                <div className=\"container img\">\r\n                                        <img \r\n                                        src={this.state.imagen}\r\n                                        className=\"productImg\" alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        :\r\n                            null\r\n                        }\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 form-group text-center\">\r\n                                    <span className=\"badge badge-íll badge-light\">$ {this.props.precio}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Product)","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraNuevoPedido extends Component {\r\n    state = {\r\n        redirect: false,\r\n        porcentaje: false,\r\n        restar: false,\r\n    }\r\n    porcentaje = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Porcentaje</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" id=\"porcentaje\" className=\"form-control\" placeholder=\"Porcentaje\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group-text-cen\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const porcentaje = document.getElementById(\"porcentaje\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - (this.props.total * porcentaje / 100))\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    restar = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Cantidad</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" className=\"form-control\" id=\"cantidad\" placeholder=\"cantidad\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const cantidad = document.getElementById(\"cantidad\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - cantidad)\r\n                                        console.log(cantidad)\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    modificarTotal() {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12  text-center form-group\">\r\n                                    <h1>Modificar Total</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.porcentaje()\r\n                                    }}>\r\n                                        Porcentaje\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.restar()\r\n                                    }}>\r\n                                        Restar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    cancelarPedido() {\r\n        confirmAlert({\r\n            title: 'Cancelar Pedido?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cancelar',\r\n                    onClick: async () => {\r\n                        this.setState({\r\n                            redirect: true\r\n                        })\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row align-items-center\">\r\n                {this.state.redirect ?\r\n                    <Redirect to=\"productos\" />\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.enviarPedido}><FontAwesomeIcon icon={faCheck}  /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h3 onClick={e => {\r\n                        this.modificarTotal()\r\n                    }}>${this.props.total}</h3>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={e => {\r\n                        this.cancelarPedido()\r\n                    }}><FontAwesomeIcon icon={faTimes} /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraNuevoPedido","import React, { Component, Fragment } from \"react\"\r\nimport BotoneraNuevoPedido from \"../components/BotoneraNuevoPedido\"\r\nimport './styles/ResumenPedido.css'\r\nclass ResumenPedido extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"col bg-dark text-center nuevoPedido p-2 \">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{this.props.cliente}</h4>\r\n                    </div>\r\n                </div>\r\n                    {Object.keys(this.props.pedido).map(key => (\r\n                                <div className=\"row align-items-center\">\r\n                                    <div className=\"col d-flex\">\r\n                                        <p className='flex-grow-1 text-left'>{this.props.pedido[key].nombre} <span className=\"badge badge-light\">$ {this.props.pedido[key].precio} c/u </span></p>\r\n                                        <p className='mr-2 ml-2'>{this.props.pedido[key].cantidad}</p>\r\n                                    </div>\r\n                                </div>\r\n                    )\r\n                    )}\r\n                <BotoneraNuevoPedido modificarTotal={total => {\r\n                    this.props.modificarTotal(total)\r\n                }} total={this.props.total} enviarPedido={this.props.enviarPedido} />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default ResumenPedido","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport ProductElection from \"../components/ProductElection\"\r\nimport * as firebase from \"firebase\"\r\nimport ResumenPedido from \"../components/ResumenPedido\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport \"./Styles/NuevoPedido.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestionCircle,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { connect } from \"react-redux\"\r\nimport {changeCliente} from \"../actions/index\"\r\nclass NuevoPedido extends Component {\r\n    seleccionarDestinatario(cliente) {\r\n        this.setState({\r\n            nuevoCliente: cliente\r\n        })\r\n    }\r\n    async enviarPedido() {\r\n        let arr = []\r\n        Object.keys(this.state.pedido).map(key => {\r\n            arr.push(\r\n                {   \r\n                    nombre: this.state.pedido[key].nombre,\r\n                    cantidad: this.state.pedido[key].cantidad,\r\n                    seccion: this.state.pedido[key].seccion,\r\n                }\r\n            )\r\n        })\r\n        console.log(arr)\r\n        firebase.database().ref().child(this.props.user.uid).child(\"pedidos\").push(\r\n            {\r\n                cliente: this.state.nuevoCliente,\r\n                precio: this.state.total,\r\n                articulos: arr\r\n            }\r\n        )\r\n    }\r\n    state = {\r\n        nuevoCliente: undefined,\r\n        total: 0,\r\n        pedido: [],\r\n    }\r\n    agregarArticulo(nombre, cantidad, precio, seccion) {\r\n        const arr = this.state.pedido\r\n        arr.push({\r\n            nombre: nombre,\r\n            cantidad: cantidad,\r\n            precio: precio,\r\n            seccion: seccion\r\n        })\r\n        super.setState({\r\n            ...this.state,\r\n            pedido: arr\r\n        })\r\n    }\r\n    handleChangeProducto(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-none\"\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-flex \"\r\n            }\r\n        });\r\n    }\r\n    handleChangeCliente(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    modificarTotal(total) {\r\n        console.log(total)\r\n        this.setState({ total: total })\r\n    }\r\n    alertNuevoCliente = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoCliente' placeholder=\"Nombre del Cliente\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoCliente()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    alertElegirProducto = (nombre,precio) =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" class=\"form-control\" id='cantidadProducto' placeholder=\"Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            const cantidadPlus = document.getElementById('cantidadProducto').value\r\n                                                if (cantidadPlus) {\r\n                                                    this.agregarArticulo(nombre,cantidadPlus,precio, \"productos\")\r\n                                                    if (precio) {\r\n                                                        let sumaPrecios\r\n                                                        if (this.state.total) {\r\n                                                            sumaPrecios = this.state.total\r\n                                                        }\r\n                                                        else {\r\n                                                            sumaPrecios = 0\r\n                                                        }\r\n                                                        sumaPrecios += parseInt(precio * cantidadPlus)\r\n                                                        this.setState({\r\n                                                            total: sumaPrecios\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    nuevoCliente = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoCliente\").value\r\n        if(nombre){\r\n            this.seleccionarDestinatario(nombre)\r\n            firebase.database().ref().child(this.props.user.uid).child('clientes').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        nombre:nombre,\r\n                        deuda:0\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    alertResumen = ()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <ResumenPedido\r\n                                cliente={this.state.nuevoCliente}\r\n                                pedido={this.state.pedido}\r\n                                enviarPedido={e => {\r\n                                    this.enviarPedido().then(\r\n                                        this.setState({\r\n                                            redirect: true\r\n                                        })\r\n                                    )\r\n                                    onClose()\r\n                                }}\r\n                                modificarTotal={total => {\r\n                                    this.modificarTotal(total)\r\n                                }}\r\n                                total={this.state.total}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertAgregarProducto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input  type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarProducto = async () =>{\r\n        const nombre = document.getElementById('nombreNuevoProducto').value\r\n        const precio = document.getElementById('precioNuevoProducto').value\r\n        if(nombre){\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\r\n                {\r\n                    [nombre]:{\r\n                        nombre:nombre,\r\n                        cantidad:0,\r\n                        precio:precio\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            let user = undefined\r\n            user = this.props.user.email\r\n            if (user) {\r\n                if (!this.state.nuevoCliente) {\r\n                    return (\r\n                        <div className=\"nuevo-cliente\">\r\n                            <div className=\"container-fluid mt-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChangeCliente(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Cliente\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <button type='button' className='btn btn-outline-light' onClick={this.alertNuevoCliente}>\r\n                                            Nuevo Cliente\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.clientes?\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.clientes).map(cliente => ( \r\n                                        <div className=\"col-12 text-center form-group\">\r\n                                            <button type=\"button\" className=\"btn btn-primary btn-cliente\" onClick={() => {\r\n                                                console.log(cliente.datos.nombre)\r\n                                                this.seleccionarDestinatario(cliente.datos.nombre)\r\n                                            }}>\r\n                                                {cliente.datos.nombre}\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                :\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 text-center\">\r\n                                        <h1 className='text-white'>Aun no hay Clientes!</h1>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className=\"name\">Elegir Productos</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChangeProducto(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type='button' className='btn btn-success' onClick={this.alertResumen}>\r\n                                                Finalizar Venta\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type='button' className='btn btn-outline-success' onClick={this.alertAgregarProducto}>\r\n                                                Nuevo Producto\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row productList align-items-center\">\r\n                                        {this.props.productos?\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"row\">\r\n                                                {Object.keys(this.props.productos).map(nombre=>( \r\n                                                    <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center justify-content-center\" key={this.props.productos[nombre].nombre}>\r\n                                                    <ProductElection \r\n                                                        handleClick={e => {\r\n                                                            this.alertElegirProducto(this.props.productos[nombre].nombre, this.props.productos[nombre].precio)\r\n                                                        }}\r\n                                                        nombre={this.props.productos[nombre].nombre} \r\n                                                        precio={this.props.productos[nombre].precio} />\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                            }\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className='text-white'> Aun No Hay Productos!</h1>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                    {this.state.redirect ?\r\n                                        <Redirect to=\"pedidos\" />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"NuevaVenta\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    productos: state.productos,\r\n    clientes:state.clientes\r\n})\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoPedido)","import React, { Component } from \"react\"\r\nimport \"./styles/Cheque.css\"\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\nclass Cheque extends Component {\r\n    async enviarCheque(llave) {\r\n        const date = new Date()\r\n        const enviadoA = prompt(\"Ingresar Nombre Del Destinatario\")\r\n        if (enviadoA) {\r\n            await firebase.database().ref().child(this.props.user.uid).child('cheques').child(llave).update(\r\n                {\r\n                    [\"Fecha De Salida\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n                    [\"Enviado A\"]: enviadoA\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container cheque p-3 bg-dark\">\r\n                <div className=\"row d-flex align-items-center\">\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Dia\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Entrada)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Cliente\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Cliente)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Banco\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Banco)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Numero\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Numero)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Cheque\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Fecha)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>$ {this.props.cheque[\"Monto\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Monto)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Fecha De Salida\"] ?\r\n                                        <h6>{this.props.cheque[\"Fecha De Salida\"]}</h6>\r\n                                        :\r\n                                        <h6 className=\"salida\" onClick={\r\n                                            e => {\r\n                                                this.enviarCheque(this.props.llave)\r\n                                            }\r\n                                        }>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Salida)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Enviado A\"] ?\r\n                                        <h6>{this.props.cheque[\"Enviado A\"]}</h6>\r\n                                        :\r\n                                        <h6>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Enviado A)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Cheque)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport Cheque from \"../components/Cheque\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./Styles/ChequesList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\n\r\nclass ChequesList extends Component {\r\n    state = {\r\n        filtro: \"Numero\",\r\n        redirect: false,\r\n    }\r\n    handleChange(e, filtro) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayCheques = document.getElementsByClassName(\"col-12 form-group chequeList\")\r\n        forEach.call(arrayCheques, function (f) {\r\n            const cheque = f.children[0].children[0].children\r\n            let $filtro = undefined\r\n            switch (filtro) {\r\n                case \"Numero\":\r\n                    $filtro = 3;\r\n                    break;\r\n                case \"Nombre\":\r\n                    $filtro = 1;\r\n                    break;\r\n                case \"Monto\":\r\n                    $filtro = 5;\r\n                    break;\r\n                case \"Banco\":\r\n                    $filtro = 2;\r\n                    break;\r\n                case \"Enviado A\":\r\n                    $filtro = 7;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (cheque[$filtro].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 form-group chequeList d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 form-group chequeList d-block\";\r\n            }\r\n        });\r\n    }\r\n    actualizarBotones(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayButton = document.getElementsByClassName(\"filtro btn\")\r\n        forEach.call(arrayButton, function (f) {\r\n            f.className = \"filtro btn btn-outline-light\"\r\n        })\r\n        e.target.className = \"filtro btn btn-outline-success\"\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if(user){\r\n                return (\r\n                    <div>\r\n                        {\r\n                            this.state.redirect ?\r\n                                <Redirect to=\"/NuevoCheque\" />\r\n                                :\r\n                                <div>\r\n                                    <div className=\"productList\">\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-right\">\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={\r\n                                                        e => {\r\n                                                            this.setState({\r\n                                                                redirect: true\r\n                                                            })\r\n                                                        }\r\n                                                    }>Agregar Cheque</button>\r\n                                                </div>\r\n                                                <div className=\"col-12 text-center form-group\">\r\n                                                    <h2 className=\"name\">Cheques</h2>\r\n                                                </div>\r\n                                                <div className=\"col-12  text-center form-group\">\r\n                                                    <form>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"form-group col-6 offset-3 text-center\">\r\n                                                                <input type=\"text\" className=\"form-control\" onChange={\r\n                                                                    e => {\r\n                                                                        this.handleChange(e, this.state.filtro)\r\n                                                                    }\r\n                                                                } placeholder=\"Buscar Cheque\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"container\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-success\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Numero\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Numero</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Nombre\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Nombre</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Banco\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Banco</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Monto\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Monto</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Enviado A\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Enviado A</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                            {this.props.cheques?\r\n                                            <div className=\"row\">\r\n                                                {Object.keys(this.props.cheques).map(key => (\r\n                                                    <div className=\"col-12 form-group chequeList\">\r\n                                                        <Cheque llave={key} cheque={this.props.cheques[key]} />\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3 className=\"shadowTitle\">No Hay Cheques!</h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Cheques\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cheques: state.cheques\r\n})\r\nexport default connect(mapStateToProps, null)(ChequesList)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Prompt } from \"react-router\"\r\nimport * as firebase from \"firebase\"\r\nimport \"../components/styles/FormNuevoCliente.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nclass FormNuevoCliente extends Component {\r\n    state = {\r\n        nombre: null,\r\n        direccionPrincipal: null,\r\n        direccionSecundaria: null,\r\n        ciudad: null,\r\n        codigoPostal: \" - \",\r\n        expreso: null,\r\n        CUIT: null,\r\n        DNI: null,\r\n        telefono1: null,\r\n        telefono2: null,\r\n        telefono3: null,\r\n        telefono4: null,\r\n    }\r\n\r\n    async submitForm() {\r\n        let cliente = {\r\n            [this.state.nombre]: {\r\n                datos: {\r\n                    info:{\r\n                        direccion: {\r\n                            0: this.state.direccionPrincipal,\r\n                            1: this.state.direccionSecundaria,\r\n                        },\r\n                        telefono: {\r\n                            0: this.state.telefono1,\r\n                            1: this.state.telefono2,\r\n                            2: this.state.telefono3,\r\n                            3: this.state.telefono4,\r\n                        },\r\n                        ciudad:{\r\n                            0:this.state.ciudad + \" CP:\" + this.state.codigoPostal,\r\n                        },\r\n                        CUIT: {\r\n                            0:this.state.CUIT\r\n                        },\r\n                        DNI: {\r\n                            0:this.state.DNI\r\n                        }\r\n                    },\r\n                    nombre: this.state.nombre,\r\n                    deuda: 0,\r\n                }\r\n            }\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child('clientes').update(cliente)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 offset-2\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <Prompt\r\n                                when={this.state.DNI}\r\n                                message=\"Estas Seguro que deseas retirarte?\"\r\n                            />\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\">\r\n                                    <label>Nombre</label>\r\n                                    <input type=\"text\" value={this.state.nombre} onChange={e => {\r\n                                        this.setState(\r\n                                            {\r\n                                                ...this.state,\r\n                                                nombre: e.target.value\r\n                                            }\r\n                                        )\r\n                                    }} className=\"form-control\" id=\"nombre\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress\">Direccion Principal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={this.state.direccionPrincipal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionPrincipal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress2\">Direccion Secundaria</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" value={this.state.direccionSecundaria} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionSecundaria: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>Ciudad</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.ciudad} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            ciudad: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label for=\"inputZip\">Codigo Postal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.codigoPostal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            codigoPostal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 1</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono1} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono1: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 2</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono2} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono2: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 3</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono3} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono3: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 4</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono4} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono4: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>CUIT</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.CUIT} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            CUIT: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label for=\"inputZip\">DNI</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.DNI} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            DNI: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cliente</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/clientes\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FormNuevoCliente)","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCliente from \"../components/FormNuevoCliente\"\r\nimport {connect} from 'react-redux'\r\nclass NuevoCliente extends Component {\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <FormNuevoCliente />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"NuevoCliente\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NuevoCliente)","import React, { Component, Fragment } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport Login from \"../components/Login\"\nimport SpinnerLoading from \"../components/SpinnerLoading\"\nimport ProductElection from \"../components/ProductElection\"\nimport * as firebase from \"firebase\"\nimport ResumenPedido from \"../components/ResumenPedido\"\nimport \"./Styles/ProovedoresList.css\"\nimport \"./Styles/NuevoPedido.css\"\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle,faPlus} from '@fortawesome/free-solid-svg-icons'\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { connect } from \"react-redux\"\nimport {changeProveedor} from \"../actions/index\"\nclass NuevoRecibo extends Component {\n    seleccionarDestinatario(cliente) {\n        this.setState({\n            nuevoCliente: cliente\n        })\n    }\n    async enviarPedido() {\n        let arr = []\n        Object.keys(this.state.pedido).map(key => {\n            arr.push(\n                {   precio:this.state.pedido[key].precio,\n                    nombre: this.state.pedido[key].nombre,\n                    cantidad: this.state.pedido[key].cantidad,\n                    seccion: this.state.pedido[key].seccion,\n                    disminuye: this.state.pedido[key].disminuye,\n                }\n            )\n        })\n        const date = new Date()\n        firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.state.nuevoCliente).child(\"pedidos\").push(\n            {\n                fecha: `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`,\n                articulos: arr\n            }\n        )\n        arr.map(articulo=>{\n            const nuevaCantidad=this.props.productos[articulo.nombre].cantidad+=parseFloat(articulo.cantidad)\n            firebase.database().ref().child(this.props.user.uid).child('productos').child(articulo.nombre).update(\n                {\n                    cantidad:nuevaCantidad\n                }\n            )\n            if(articulo.disminuye){\n                articulo.disminuye.map(enlace=>{\n                    firebase.database().ref().child(this.props.user.uid).child('productos').child(enlace).update(\n                        {\n                            cantidad:(this.props.productos[enlace].cantidad-articulo.cantidad)\n                        }\n                    )\n                })\n            }\n        })\n    }\n    state = {\n        nuevoCliente: undefined,\n        accion:undefined,\n        total: 0,\n        pedido: [],\n    }\n    agregarArticulo(nombre, cantidad, precio, seccion,disminuye) {\n        const arr = this.state.pedido\n        arr.push({\n            nombre: nombre,\n            cantidad: cantidad,\n            precio: precio,\n            seccion: seccion,\n            disminuye:disminuye,\n        })\n        super.setState({\n            ...this.state,\n            pedido: arr\n        })\n    }\n    handleChangeProducto(e) {\n        var forEach = Array.prototype.forEach;\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center\")\n        forEach.call(arrayProductos, function (f) {\n            if (f.children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-none\"\n            }\n            else {\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center align-items-center justify-content-center d-flex \"\n            }\n        });\n    }\n    handleChangeCliente(e) {\n        var forEach = Array.prototype.forEach;\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\n        forEach.call(arrayClientes, function (f) {\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\n                f.parentNode.style.display = \"none\";\n            else\n                f.parentNode.style.display = \"block\";\n        });\n    }\n    modificarTotal(total) {\n        console.log(total)\n        this.setState({ total: total })\n    }\n    alertNuevoCliente = () =>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Agregar Nuevo Proveedor</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoCliente' placeholder=\"Nombre del Cliente\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.nuevoCliente()\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n          });\n    }\n    alertElegirProducto = (nombre,disminuye) =>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>{nombre}</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"number\" class=\"form-control\" id='cantidadProducto' placeholder=\"Cantidad\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input type=\"number\" class=\"form-control\" id='precioProducto' placeholder=\"Precio\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            const cantidadPlus = document.getElementById('cantidadProducto').value\n                                            const precio = document.getElementById('precioProducto').value\n                                                if (cantidadPlus) {\n                                                    this.agregarArticulo(nombre,cantidadPlus,precio, \"productos\",disminuye)\n                                                    if (precio) {\n                                                        let sumaPrecios\n                                                        if (this.state.total) {\n                                                            sumaPrecios = this.state.total\n                                                        }\n                                                        else {\n                                                            sumaPrecios = 0\n                                                        }\n                                                        sumaPrecios += parseInt(precio * cantidadPlus)\n                                                        this.setState({\n                                                            total: sumaPrecios\n                                                        })\n                                                    }\n                                                }\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            );\n            }\n        });\n    }\n    nuevoCliente = async () =>{\n        const nombre = document.getElementById(\"nombreNuevoCliente\").value\n        if(nombre){\n            this.seleccionarDestinatario(nombre)\n            firebase.database().ref().child(this.props.user.uid).child('proveedores').update({\n                [nombre]:{\n                    datos:{\n                        nombre:nombre,\n                        deuda:0\n                    }\n                }\n            })\n        }\n    }\n    alertResumen = ()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <ResumenPedido\n                                cliente={this.state.nuevoCliente}\n                                pedido={this.state.pedido}\n                                enviarPedido={e => {\n                                    this.enviarPedido().then(\n                                        this.setState({\n                                            redirect: true\n                                        })\n                                    )\n                                    onClose()\n                                }}\n                                modificarTotal={total => {\n                                    this.modificarTotal(total)\n                                }}\n                                total={this.state.total}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n            }\n        });\n    }\n    alertAgregarProducto=()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Agregar Nuevo Producto</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input  type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.agregarProducto()\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n        });\n    }\n    agregarProducto = async () =>{\n        const nombre = document.getElementById('nombreNuevoProducto').value\n        const precio = document.getElementById('precioNuevoProducto').value\n        if(nombre){\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\n                {\n                    [nombre]:{\n                        nombre:nombre,\n                        cantidad:0,\n                        precio:precio\n                    }\n                }\n            )\n        }\n    }\n    render() {\n        try {\n            let user = this.props.user.email\n            if (user) {\n                if (!this.state.nuevoCliente) {\n                    return (\n                        <div className=\"nuevo-cliente \">\n                            <div className=\"container-fluid mt-4\">\n                                <div className=\"row\">\n                                    <div className=\"col-6 offset-3\">\n                                        <form>\n                                            <div className=\"formRow\">\n                                                <div className=\"form-group col-12 text-center\">\n                                                    <input type=\"text\" className=\"form-control\" onChange={\n                                                        e => {\n                                                            this.handleChangeCliente(e)\n                                                        }\n                                                    } placeholder=\"Buscar Proveedor\" />\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div className=\"col\">\n                                        <button type='button' className='btn btn-outline-light' onClick={this.alertNuevoCliente}>\n                                            Nuevo Proveedor\n                                        </button>\n                                    </div>\n                                </div>\n                                {this.props.proveedores?\n                                <div className=\"row\">\n                                    {Object.values(this.props.proveedores).map(cliente => (\n                                        <div className=\"col-12 text-center form-group\">\n                                            <button type=\"button\" className=\"btn btn-primary btn-cliente\" onClick={() => {\n                                                console.log(cliente.datos.nombre)\n                                                this.seleccionarDestinatario(cliente.datos.nombre)\n                                            }}>\n                                                {cliente.datos.nombre}\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                                :\n                                <div className=\"row\">\n                                    <div className=\"col-12 text-center\">\n                                        <h1 className='text-white'>Aun no hay Proveedores!</h1>\n                                    </div>\n                                </div>\n                                }\n                            </div>\n                        </div>\n                    )\n                }\n                else {\n                    return (\n                        <div>\n                            <div className=\"productList\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 text-center\">\n                                            <h1 className=\"name\">Elegir Productos</h1>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-6 offset-3\">\n                                            <form>\n                                                <div className=\"formRow\">\n                                                    <div className=\"form-group col-12 text-center\">\n                                                        <input type=\"text\" className=\"form-control\" onChange={\n                                                            e => {\n                                                                this.handleChangeProducto(e)\n                                                            }\n                                                        } placeholder=\"Buscar Producto\" />\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div className=\"col\">\n                                            <button type='button' className='btn btn-success' onClick={this.alertResumen}>\n                                                Finalizar Recibo\n                                            </button>\n                                        </div>\n                                        <div className=\"col text-center\">\n                                            <button type='button' className='btn btn-outline-success' onClick={this.alertAgregarProducto}>\n                                                Nuevo Producto\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"row productList align-items-center\">\n                                    {this.props.productos?\n                                        <div className=\"container-fluid\">\n                                                <div className=\"row\">\n                                                {Object.keys(this.props.productos).map(nombre=>( \n                                                    <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center justify-content-center\" key={this.props.productos[nombre].nombre}>\n                                                    <ProductElection \n                                                        handleClick={e => {\n                                                            this.alertElegirProducto(this.props.productos[nombre].nombre,this.props.productos[nombre].disminuye)\n                                                        }}\n                                                        nombre={this.props.productos[nombre].nombre} \n                                                        precio={this.props.productos[nombre].precio} />\n                                                    </div>\n                                                ))}\n                                                </div>\n                                        </div>\n                                        :\n                                        <div className=\"col-12 text-center\">\n                                            <h1 className='text-white'> Aun No Hay Productos!</h1>\n                                        </div>\n                                        }\n                                    </div>\n                                    {this.state.redirect ?\n                                        <Redirect to=\"productos\" />\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            }\n        }\n        catch (error) {\n            return (\n                <Login redirect=\"NuevoRecibo\" />\n            )\n        }\n    }\n}\nconst mapStateToProps = state => ({\n    user: state.user,\n    productos: state.productos,\n    proveedores:state.proveedores\n})\nconst mapDispatchToProps={\n    changeProveedor\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoRecibo)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass FormNuevoCheque extends Component {\r\n    state = {\r\n        entrada: null,\r\n        cliente: null,\r\n        banco: null,\r\n        numero: null,\r\n        fecha: null,\r\n        monto: null\r\n    }\r\n\r\n    async submitForm() {\r\n        const date = new Date()\r\n        let cheque = {\r\n            Banco: this.state.banco,\r\n            Cliente: this.state.cliente,\r\n            [\"Fecha Del Cheque\"]: this.state.fecha,\r\n            [\"Fecha Del Dia\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n            Monto: this.state.monto,\r\n            Numero: this.state.numero,\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"cheques\").push(cheque)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cheque?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 offset-3\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Cliente</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.cliente} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            cliente: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label for=\"inputZip\">Banco</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.banco} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            banco: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Numero De Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.numero} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            numero: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Fecha Del Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.fecha} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            fecha: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Monto</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.monto} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            monto: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cheque</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/Cheques\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FormNuevoCheque)","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCheque from \"../components/FormNuevoCheque\"\r\nimport { connect } from \"react-redux\"\r\nclass NuevoCheque extends Component {\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <FormNuevoCheque />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"NuevoCheque\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(NuevoCheque)","import React, { Component, Fragment } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport withFirebaseAuth from \"react-with-firebase-auth\"\nimport SpinnerLoading from \"../components/SpinnerLoading\"\nimport * as firebase from \"firebase/app\"\nimport Logo from \"../images/logo.png\"\nimport \"./styles/Login.css\"\nimport {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n} from \"../actions/index\"\nimport { connect } from \"react-redux\"\n\nclass Registro extends Component {\n    state = {\n        registro:false,\n        nombre:{\n            valor:undefined,\n            isValid:undefined\n        },\n        mail:{\n            valor:undefined,\n            isValid:true\n        },\n        password:{\n            valor:undefined,\n            isValid:undefined\n        }\n    }\n    async registrar() {\n        if(this.state.nombre.valor && this.state.mail.valor && this.state.password.valor){\n            this.props.isLoading(true)\n            await firebase.auth().createUserWithEmailAndPassword(this.state.mail.valor, this.state.password.valor).then(async result => {\n                result.user.updateProfile({\n                    displayName:this.state.nombre.valor\n                })\n                result.user.sendEmailVerification().catch(error=>{\n                    console.log(error)\n                })\n                firebase.auth().signOut()\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({\n                    mail:{\n                        isValid:false\n                    }\n                })\n            })\n        }\n        else{\n            alert('competar formulario')\n        }\n    }\n    updateMail(data) {\n        this.setState(\n            {\n                mail:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updatePass(data) {\n        this.setState(\n            {\n                password:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updateNombre(data) {\n        this.setState(\n            {\n                nombre:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n        if(!data){\n            this.setState({\n                nombre:{\n                    isValid:false\n                }\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.props.user ?\n                    <Redirect to={\"/\"} />\n                    :\n                    <div className=\"container-fluid login\">\n                        {this.state.loading ?\n                            <div className=\"row\">\n                                {this.state.loading ? <SpinnerLoading /> : null}\n                            </div>\n                            :\n                            <Fragment>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 text-center\">\n                                        <img height=\"125px\" src={Logo} />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\n                                        <form className='needs-validation' noValidate>\n                                            <div className=\"form-row\">\n                                                <div className=\"col-12 form-group\">\n                                                    <label>Nombre Completo</label>\n                                                    <input \n                                                        required \n                                                        autoFocus \n                                                        type=\"text\" \n                                                        className={this.state.nombre.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputNombre\"\n                                                        onChange={e => {\n                                                            this.updateNombre(e.target.value)\n                                                        }} \n                                                        placeholder=\"Nombre Completo\" \n                                                    />\n                                                    <div className=\"valid-feedback\">\n                                                        Looks good!\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">\n                                                        Ingresa un Nombre de Usuario\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Email</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.mail.valor} \n                                                        type=\"email\" \n                                                        onChange={e => {\n                                                            this.updateMail(e.target.value)\n                                                        }} \n                                                        className={this.state.mail.isValid ? \"form-control\" : \"form-control is-invalid\"}\n                                                        id=\"inputEmail\" \n                                                        placeholder=\"Email\" \n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        El Correo Electronico ya esta registrado\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Password</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.password.valor} \n                                                        type=\"password\" \n                                                        onChange={e => {\n                                                            this.updatePass(e.target.value)\n                                                        }} \n                                                        className={this.state.password.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputPassword\" \n                                                        placeholder=\"Password\" \n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <h5>Luego de registrarse revise su casilla de correo y verifique el registro.</h5>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12 text-center\">\n                                                    <Link to=\"/Productos\">\n                                                        <button \n                                                            type=\"submit\" \n                                                            onClick={e => {\n                                                                e.preventDefault()\n                                                                this.registrar()\n                                                            }} \n                                                            className=\"btn btn-success\">Registrarse Ahora!\n                                                        </button>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </Fragment>\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        loading: state.loading,\n    }\n}\nconst mapDispatchToProps = {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Registro)","import React, { Component, Fragment } from \"react\"\r\nimport {Redirect} from 'react-router-dom'\r\nimport NavBar from \"./NavBar\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport Registro from \"../components/Registro\"\r\nimport {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getDeudas,\r\n    getCheques,\r\n    getImagenes,\r\n    getDocumentos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nclass Layout extends Component {\r\n    \r\n    logOut = async () => {\r\n        await firebase.auth().signOut()\r\n        window.location.reload()\r\n    }\r\n    async fetchData(id) {\r\n        this.props.isLoading(true)\r\n        const productosRef = await firebase.database().ref().child(id).child('productos')\r\n        productosRef.on(\"value\", snapshot => {\r\n            this.props.getProductos(snapshot.val())\r\n        })\r\n        const pedidosRef = await firebase.database().ref().child(id).child('pedidos')\r\n        pedidosRef.on(\"value\", snapshot => {\r\n            this.props.getPedidos(snapshot.val())\r\n        })\r\n        const clientesRef = await firebase.database().ref().child(id).child('clientes')\r\n        clientesRef.on(\"value\", snapshot => {\r\n            this.props.getClientes(snapshot.val())\r\n        })\r\n        const proveedoresRef = await firebase.database().ref().child(id).child('proveedores')\r\n        proveedoresRef.on(\"value\", snapshot => {\r\n            this.props.getProveedores(snapshot.val())\r\n        })\r\n        const deudasRef = await firebase.database().ref().child(id).child('deudas')\r\n        deudasRef.on(\"value\", snapshot => {\r\n            this.props.getDeudas(snapshot.val())\r\n        })\r\n        const chequesRef = await firebase.database().ref().child(id).child('cheques')\r\n        chequesRef.on(\"value\", snapshot => {\r\n            this.props.getCheques(snapshot.val())\r\n            this.props.isLoading(false)\r\n        })\r\n    }\r\n    async fetchImagenes (){\r\n        let array = []\r\n        const imagenesRef = await firebase.storage().ref().child('imagenes').listAll()\r\n        Object.values(imagenesRef.items).map(async imagen=>{\r\n            await imagen.getDownloadURL().then(url=>{\r\n                array.push({\r\n                    nombre:imagen.name.slice(0,imagen.name.indexOf('.')),\r\n                    url:url\r\n                })\r\n            })\r\n        })\r\n        this.props.getImagenes(imagenesRef.items)\r\n    }\r\n    async authListener() {\r\n        firebase.auth().onAuthStateChanged(async user=>{\r\n            if (user) {\r\n                await this.fetchData(user.uid)\r\n                await this.fetchImagenes()\r\n                this.props.changeUser(user)\r\n            }\r\n            this.props.recuperandoUsuario(false)\r\n        })\r\n    }\r\n    async componentDidMount() {\r\n        await this.authListener()\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.recuperarUsuario ?\r\n                        <>\r\n                            <SpinnerLoading title=\"Recuperando Usuario...\" />\r\n                        </>\r\n                        :\r\n                        <div className=\"app\">\r\n                            {!this.props.user ?\r\n                                (this.props.registro?\r\n                                <Registro/>\r\n                                :\r\n                                <Login />\r\n                                )\r\n                                :\r\n                                <>\r\n                                    {this.props.loading ?\r\n                                        <SpinnerLoading title=\"Recuperando Informacion...\" />\r\n                                        :\r\n                                        (this.props.user?\r\n                                        <>\r\n                                            <NavBar user={this.props.user} handleClick={this.logOut} />\r\n                                            {console.log(this.props.user)}\r\n                                            {this.props.children}\r\n                                        </>\r\n                                        :\r\n                                        (this.logOut())\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading,\r\n    user: state.user,\r\n    registro:state.registro,\r\n    recuperarUsuario:state.recuperarUsuario,\r\n    documentos: state.documentos,\r\n    productos:state.productos\r\n})\r\nconst mapDispatchToProps = {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getImagenes,\r\n    getDeudas,\r\n    getCheques,\r\n    getDocumentos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)","import React ,{Component}from 'react';\nimport { Switch, Route, HashRouter } from \"react-router-dom\"\nimport './App.css';\nimport ProductList from \"./Pages/ProductList\"\nimport PedidosList from \"./Pages/PedidosList\"\nimport MecanizadosList from \"./Pages/MecanizadosList\"\nimport NoMecanizadosList from \"./Pages/NoMecanizadosList\"\nimport SurtidoresList from \"./Pages/SurtidoresList\"\nimport ProovedoresList from \"./Pages/ProovedoresList\"\nimport ClientesList from \"./Pages/ClientesList\"\nimport ExpresosList from \"./Pages/ExpresosList\"\nimport Deudas from \"./Pages/Deudas\"\nimport ListasDePrecios from \"./Pages/ListasDePrecios\"\nimport NuevoPedido from \"./Pages/NuevoPedido\"\nimport ChequesList from \"./Pages/ChequesList\"\nimport NuevoCliente from \"./Pages/NuevoCliente\"\nimport NuevoRecibo from \"./Pages/NuevoRecibo\"\nimport NuevoCheque from \"./Pages/NuevoCheque\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Login from './components/Login';\nimport Registro from './components/Registro';\nimport Layout from \"./components/Layout\"\nimport * as firebase from 'firebase'\n\n\nfunction App(){\n    var firebaseConfig = {\n        apiKey: \"AIzaSyCymMsjhvVdAbbOZydlSZDWQ1MfpZckj2A\",\n        authDomain: \"control-de-stock-4a3ca.firebaseapp.com\",\n        databaseURL: \"https://control-de-stock-4a3ca.firebaseio.com\",\n        projectId: \"control-de-stock-4a3ca\",\n        storageBucket: \"control-de-stock-4a3ca.appspot.com\",\n        messagingSenderId: \"602181217176\",\n        appId: \"1:602181217176:web:a8cc162c05c7fdfcbc19ed\"\n      };\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n    }\n\n    return (\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/Registro\" component={Registro} />\n            <Route exact path=\"/productos\" component={ProductList} />\n            <Route exact path=\"/Pedidos\" component={PedidosList} />\n            <Route exact path=\"/Mecanizados\" component={MecanizadosList} />\n            <Route exact path=\"/No-Mecanizados\" component={NoMecanizadosList} />\n            <Route exact path=\"/Surtidores\" component={SurtidoresList} />\n            <Route exact path=\"/Clientes\" component={ClientesList} />\n            <Route exact path=\"/Proveedores\" component={ProovedoresList} />\n            <Route exact path=\"/Expresos\" component={ExpresosList} />\n            <Route exact path=\"/Deudas\" component={Deudas} />\n            <Route exact path=\"/ListasDePrecios\" component={ListasDePrecios} />\n            <Route exact path=\"/NuevaVenta\" component={NuevoPedido} />\n            <Route exact path=\"/NuevoRecibo\" component={NuevoRecibo} />\n            <Route exact path=\"/NuevoCliente\" component={NuevoCliente} />\n            <Route exact path=\"/Cheques\" component={ChequesList} />\n            <Route exact path=\"/NuevoCheque\" component={NuevoCheque} />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"GET_DATA\":\r\n            switch (action.section) {\r\n                case 'productos':\r\n                    return {\r\n                        ...state,\r\n                        productos: action.payload\r\n                    }\r\n                    break;\r\n                case 'pedidos':\r\n                    return {\r\n                        ...state,\r\n                        pedidos: action.payload\r\n                    }\r\n                    break;\r\n                case 'clientes':\r\n                    return {\r\n                        ...state,\r\n                        clientes: action.payload\r\n                    }\r\n                    break;\r\n                case 'proveedores':\r\n                    return {\r\n                        ...state,\r\n                        proveedores: action.payload\r\n                    }\r\n                    break;\r\n                case 'deudas':\r\n                    return {\r\n                        ...state,\r\n                        deudas: action.payload\r\n                    }\r\n                    break;\r\n                case 'cheques':\r\n                    return {\r\n                        ...state,\r\n                        cheques: action.payload\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case \"GET_DOCUMENTOS\":\r\n            return {\r\n                ...state,\r\n                imagenes: action.payload\r\n            }\r\n            break;\r\n        case \"GET_IMAGENES\":\r\n            return {\r\n                ...state,\r\n                imagenes: action.payload\r\n            }\r\n            break;\r\n        case \"RECUPERANDO_USUARIO\":\r\n            return {\r\n                ...state,\r\n                recuperarUsuario: action.payload\r\n            }\r\n            break;\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_USER\":\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_REGISTRO\":\r\n            return {\r\n                ...state,\r\n                registro: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_CLIENTE\":\r\n            return {\r\n                ...state,\r\n                cliente: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_PROVEEDOR\":\r\n            return {\r\n                ...state,\r\n                proveedor: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_EXPRESO\":\r\n            return {\r\n                ...state,\r\n                expreso: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { createStore } from 'redux'\nimport { Provider } from \"react-redux\"\nimport reducer from \"./reducers\"\n\nlet initialState = {\n    registro:false,\n    loading: true,\n    error: null,\n    recuperarUsuario: true,\n    data:{\n        productos:{\n        },\n    }\n}\nconst store = createStore(reducer, initialState)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cf936f02.png\";"],"sourceRoot":""}