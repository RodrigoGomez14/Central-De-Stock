{"version":3,"sources":["images/projectManagement.jpg","components/SpinnerLoading.js","actions/index.js","components/Login.js","components/Product.js","Pages/ProductList.js","components/PedidoItem.js","components/BotoneraPedido.js","components/Pedido.js","Pages/PedidosList.js","Pages/MecanizadosList.js","Pages/NoMecanizadosList.js","Pages/SurtidoresList.js","components/NavBar.js","components/Item.js","components/Ficha.js","components/PedidoCliente.js","components/PedidoProovedor.js","components/FichaPedidos.js","components/FichaProovedor.js","Pages/ProovedoresList.js","components/FichaCliente.js","Pages/ClientesList.js","Pages/ExpresosList.js","components/BotoneraDeuda.js","components/Deuda.js","Pages/Deudas.js","Pages/ListasDePrecios.js","components/ProductElection.js","components/BotoneraNuevoPedido.js","components/ResumenPedido.js","Pages/NuevoPedido.js","components/Cheque.js","Pages/ChequesList.js","components/FormNuevoCliente.js","Pages/NuevoCliente.js","Pages/NuevoRecibo.js","components/FormNuevoCheque.js","Pages/NuevoCheque.js","components/Registro.js","components/Layout.js","App.js","serviceWorker.js","reducers/index.js","index.js","images/logo.png"],"names":["module","exports","SpinnerLoading","className","role","this","props","title","Component","changeUser","payload","type","changeRegistro","changeCliente","changeProveedor","isLoading","recuperandoUsuario","Login","state","mail","undefined","password","firebase","signInWithEmailAndPassword","then","success","catch","error","alert","data","setState","user","to","loading","height","src","Logo","value","onChange","e","updateMail","target","id","placeholder","updatePass","onClick","preventDefault","logIn","mapDispatchToProps","connect","Product","cambiarPrecio","a","nuevoPrecio","prompt","ref","child","uid","seccion","nombre","update","precio","parseFloat","eliminarProducto","confirmAlert","buttons","label","remove","cantidad","nuevaCantidad","parseInt","sumarArticulo","cantidadActual","console","log","icon","faTrash","sumar","ProductList","alertAgregarProducto","customUI","onClose","faPlus","autoFocus","agregarProducto","document","getElementById","alertGuia","faFrownOpen","forEach","Array","prototype","arrayProductos","getElementsByClassName","call","f","children","innerHTML","toLowerCase","search","productos","email","handleChange","Object","values","map","producto","key","redirect","PedidoItem","BotoneraPedido","enviarPedido","faCheck","eliminarPedido","faTimes","Pedido","pedido","articulo","restarProducto","pathname","cliente","keys","articulos","descontarPedido","PedidosList","productosRef","date","Date","getDate","getMonth","getFullYear","push","fecha","pedidos","MecanizadosList","products","imagen","images","NoMecanizadosList","noMecanizados","mecanizados","SurtidoresList","getele","surtidores","NavBar","handleClick","Navbar","collapseOnSelect","bg","expand","variant","sticky","Toggle","aria-controls","Brand","displayName","confirmLogOut","Collapse","Nav","Link","Item","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","infoExtra","propiedad","nuevaInfo","array","newArr","newInfo","infoDelete","splice","indexOf","name","edit","eliminarInfoArray","editarCliente","class","agregarInfoArray","editarInfo","Ficha","alertModificarDeuda","sumarDeuda","restarDeuda","faMinus","agregarValor","datos","info","datosRef","alertAgregarValor","agregarCampo","nuevoCampo","nuevoValor","0","alertAgregarCampo","eliminarValor","valores","valorEliminado","result","filter","valor","alertEliminarValor","faQuestionCircle","alertEditarNombre","editarNombre","nuevoNombre","nuevaDeuda","deudaRef","deuda","scope","PedidoCliente","PedidoProovedor","Fichapedido","pedidosAux","reverse","FichaProovedor","eliminarCliente","proovedor","accion","arr","faArrowLeft","faEdit","FichaPedidos","ProovedoresList","returnBack","alertNuevoProveedor","nuevoProveedor","arrayClientes","parentNode","style","display","proveedor","proveedores","FichaCliente","alertEditarCliente","arrayInfo","ClientesList","clientes","ExpresosList","changeExpreso","expreso","expresos","BotoneraDeuda","deudaVieja","adicion","quita","pedirCantidad","Deuda","Deudas","arrayDeudas","deudas","updateDeuda","ListasDePrecios","file","put","documentos","fetchData","documento","delete","subirDocumento","files","for","url","borrarDocumento","slice","window","open","BotoneraNuevoPedido","porcentaje","restar","nuevoTotal","Math","floor","total","modificarTotal","cancelarPedido","ResumenPedido","NuevoPedido","nuevoCliente","alertNuevoCliente","alertElegirProducto","sumaPrecios","cantidadPlus","agregarArticulo","seleccionarDestinatario","alertResumen","alertEnviarPedido","handleChangeProducto","ProductElection","handleChangeCliente","Cheque","llave","enviadoA","cheque","enviarCheque","ChequesList","filtro","arrayCheques","$filtro","arrayButton","actualizarBotones","cheques","FormNuevoCliente","direccionPrincipal","direccionSecundaria","ciudad","codigoPostal","CUIT","DNI","telefono1","telefono2","telefono3","telefono4","direccion","1","telefono","2","3","submitForm","onSubmit","confirm","when","message","NuevoCliente","NuevoRecibo","getDay","FormNuevoCheque","entrada","banco","numero","monto","Banco","Cliente","NuevoCheque","Registro","registro","isValid","createUserWithEmailAndPassword","updateProfile","noValidate","required","updateNombre","registrar","Layout","logOut","signOut","location","reload","on","snapshot","getProductos","val","getPedidos","getClientes","getProveedores","getDeudas","getCheques","onAuthStateChanged","authListener","recuperarUsuario","section","getDocumentos","App","exact","path","component","Boolean","hostname","match","reducer","action","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.003933c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/projectManagement.6d29eb92.jpg\";","import React, { Component } from \"react\"\r\nimport \"./styles/SpinnerLoading.css\"\r\n\r\nclass SpinnerLoading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <div className=\"spinner-border text-light\" role=\"status\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h3 className=\"text-white text-center mt-4\">{this.props.title}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SpinnerLoading","export const getProductos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'productos',\r\n        payload\r\n    }\r\n}\r\nexport const getPedidos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'pedidos',\r\n        payload\r\n    }\r\n}\r\nexport const getClientes = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'clientes',\r\n        payload\r\n    }\r\n}\r\nexport const getProveedores = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'proveedores',\r\n        payload\r\n    }\r\n}\r\nexport const getDeudas = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'deudas',\r\n        payload\r\n    }\r\n}\r\nexport const getCheques = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'cheques',\r\n        payload\r\n    }\r\n}\r\nexport const getDocumentos = payload => {\r\n    return {\r\n        type: \"GET_DOCUMENTOS\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeUser = payload => {\r\n    return {\r\n        type: \"CHANGE_USER\",\r\n        payload\r\n    }\r\n}\r\nexport const changeRegistro = payload => {\r\n    return {\r\n        type: \"CHANGE_REGISTRO\",\r\n        payload\r\n    }\r\n}\r\nexport const changeCliente = payload => {\r\n    return {\r\n        type: \"CHANGE_CLIENTE\",\r\n        payload\r\n    }\r\n}\r\nexport const changeProveedor = payload => {\r\n    return {\r\n        type: \"CHANGE_PROVEEDOR\",\r\n        payload\r\n    }\r\n}\r\nexport const changeExpreso = payload => {\r\n    return {\r\n        type: \"CHANGE_EXPRESO\",\r\n        payload\r\n    }\r\n}\r\nexport const isLoading = payload => {\r\n    return {\r\n        type: \"IS_LOADING\",\r\n        payload\r\n    }\r\n}\r\nexport const recuperandoUsuario = payload => {\r\n    return {\r\n        type: \"RECUPERANDO_USUARIO\",\r\n        payload\r\n    }\r\n}","import React, { Component, Fragment } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport withFirebaseAuth from \"react-with-firebase-auth\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase/app\"\r\nimport Logo from \"../images/logo.png\"\r\nimport \"./styles/Login.css\"\r\nimport {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        mail: undefined,\r\n        password: undefined\r\n    }\r\n    async logIn() {\r\n        this.props.isLoading(true)\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.mail, this.state.password).then(success => {\r\n            this.props.isLoading(false)\r\n        })\r\n            .catch(error => {\r\n                alert(\"El usuario o la contraseña son incorrectas\")\r\n                this.props.isLoading(false)\r\n            })\r\n\r\n    }\r\n    updateMail(data) {\r\n        this.setState(\r\n            {\r\n                mail: data\r\n            }\r\n        )\r\n    }\r\n    updatePass(data) {\r\n        this.setState(\r\n            {\r\n                password: data\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.user ?\r\n                    <Redirect to={\"/productos\"} />\r\n                    :\r\n                    <div className=\"container-fluid login\">\r\n                        {this.state.loading ?\r\n                            <div className=\"row\">\r\n                                {this.state.loading ? <SpinnerLoading /> : null}\r\n                            </div>\r\n                            :\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 text-center\">\r\n                                        <img height=\"125px\" src={Logo} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n                                        <form>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Email</label>\r\n                                                    <input value={this.state.mail} type=\"email\" onChange={e => {\r\n                                                        this.updateMail(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Password</label>\r\n                                                    <input value={this.state.password} type=\"password\" onChange={e => {\r\n                                                        this.updatePass(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Productos\">\r\n                                                        <button type=\"submit\" onClick={e => {\r\n                                                            e.preventDefault()\r\n                                                            this.logIn()\r\n                                                        }} className=\"btn btn-success\">Ingresar Ahora!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Registro\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={()=>{\r\n                                                            this.props.changeRegistro(true)\r\n                                                        }}>Crear Una Cuenta!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        loading: state.loading,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Product extends Component {\r\n    async sumar(nombre, cantidad) {\r\n        const nuevaCantidad = parseInt(prompt(\"Ingresar cantidad a sumar\"))\r\n        await this.sumarArticulo(nombre, cantidad, nuevaCantidad, this.props.seccion)\r\n    }\r\n    async sumarArticulo(nombre, cantidadActual, nuevaCantidad, seccion) {\r\n        await firebase.database().ref().child(this.props.user.uid).child(seccion).child(nombre).update({\r\n            cantidad: (cantidadActual + nuevaCantidad)\r\n        })\r\n    }\r\n    async descontarArticulo(nombre, cantidadActual, nuevaCantidad, seccion) {\r\n        console.log(cantidadActual)\r\n        await firebase.database().ref().child(this.props.user.uid).child(seccion).child(nombre).update({\r\n            cantidad: (cantidadActual - nuevaCantidad)\r\n        })\r\n    }\r\n    cambiarPrecio = async () =>{\r\n        const nuevoPrecio = prompt(\"Ingresar el nuevo precio del producto\")\r\n        if(nuevoPrecio){\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).update({\r\n                precio: parseFloat(nuevoPrecio)\r\n            })\r\n        }\r\n    }\r\n    eliminarProducto = async () =>{\r\n        confirmAlert({\r\n            title: 'Eliminar Producto?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).remove()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.user.uid)\r\n        return (\r\n            <div className=\"container product bg-dark\">\r\n                <div className=\"row\">\r\n                    <div className=\"col bodyProduct\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 mt-2 text-center\">\r\n                                    <h5 className=\"colorWhite\">{this.props.nombre}</h5>\r\n                                    <FontAwesomeIcon className=\"deleteIcon\" icon={faTrash} onClick={this.eliminarProducto} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Cantidad</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">{this.props.cantidad}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Precio</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">$ {this.props.precio}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={async () => {\r\n                            await this.sumar(\r\n                                this.props.nombre,\r\n                                this.props.cantidad\r\n                            )\r\n                        }}>\r\n                            Agregar Cantidad!\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={this.cambiarPrecio}>\r\n                            Modificar Precio!\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Product)","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFrownOpen,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport \"./Styles/ProductList.css\"\r\n\r\nclass ProductList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-none align-items-center\"\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n\r\n    alertAgregarProducto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarProducto = async () =>{\r\n        const nombre = document.getElementById('nombreNuevoProducto').value\r\n        const precio = document.getElementById('precioNuevoProducto').value\r\n        if(nombre){\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\r\n                {\r\n                    [nombre]:{\r\n                        nombre:nombre,\r\n                        cantidad:0,\r\n                        precio:precio\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    alertGuia = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faFrownOpen}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>No hay productos</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p> Ingrese el nombre y precio de un producto para poder comenzar a utilizar el Control De Stock\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.productos)\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                {!this.props.productos?\r\n                                <>\r\n                                    {this.alertGuia()}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                            <h1 className='text-white'>Aun no hay ningun producto!</h1>\r\n                                        </div>\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertAgregarProducto}>\r\n                                            Agregar nuevo Producto!\r\n                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"row align-middle\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertAgregarProducto}>\r\n                                                Agregar nuevo Producto!\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.values(this.props.productos).map(producto => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                                {console.log(producto)}\r\n                                                <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} seccion=\"productos\" />\r\n                                            </div>\r\n                                        ))\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        productos: state.productos,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(ProductList)","import React, { Component, Fragment } from \"react\"\r\n\r\nclass PedidoItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 text-left\">\r\n                        <h5>{this.props.nombre}</h5>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <h5>{this.props.cantidad}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoItem","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraPedido extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.enviarPedido}><FontAwesomeIcon icon={faCheck} /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <span className=\"badge badge-light\">\r\n                        <h4>$ {this.props.precio}</h4>\r\n                    </span>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.eliminarPedido}><FontAwesomeIcon icon={faTimes}  /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraPedido","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PedidoItem from \"./PedidoItem\"\r\nimport BotoneraPedido from \"./BotoneraPedido\"\r\nimport \"./styles/Pedido.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nimport {changeCliente} from '../actions/index'\r\nclass Pedido extends Component {\r\n    state = {\r\n        pedido: [],\r\n\r\n    }\r\n    async restarProducto(producto, nuevaCantidad) {\r\n        console.log(producto, nuevaCantidad)\r\n        const productoRef = await firebase.database().ref().child(this.props.user.uid).child('productos').child(producto)\r\n        productoRef.update(\r\n            {\r\n                cantidad: nuevaCantidad\r\n            }\r\n        )\r\n\r\n    }\r\n    async descontarPedido(pedido) {\r\n        Object.values(pedido).map(async articulo => {\r\n            this.restarProducto(articulo.nombre, this.props.productos[articulo.nombre].cantidad - parseInt(articulo.cantidad))\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"pedido bg-dark p-4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4 onClick={\r\n                                    this.props.changeCliente(this.props.cliente)\r\n                                }><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {Object.keys(this.props.pedido.articulos).map(articulo => (\r\n                                <PedidoItem nombre={this.props.pedido.articulos[articulo].nombre} cantidad={this.props.pedido.articulos[articulo].cantidad} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <BotoneraPedido\r\n                        precio={this.props.pedido.precio}\r\n                        enviarPedido={async e => {\r\n                            confirmAlert({\r\n                                title: 'Enviar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Enviar',\r\n                                        onClick: async () => {\r\n                                            await this.descontarPedido(this.props.pedido.articulos)\r\n                                            this.props.enviarPedido(this.props.id, this.props.pedido)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n\r\n                        }}\r\n                        eliminarPedido={e => {\r\n                            confirmAlert({\r\n                                title: 'Eliminar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Eliminar',\r\n                                        onClick: async () => {\r\n                                            this.props.eliminarPedido(this.props.id)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    productos:state.productos\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Pedido)","import React, { Component } from \"react\"\r\nimport Pedido from \"../components/Pedido\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport \"./Styles/PedidosList.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport projectManagement from \"../images/projectManagement.jpg\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass PedidosList extends Component {\r\n\r\n    async enviarPedido(key, pedido,uid) {\r\n        const productosRef = await firebase.database().ref().child(uid).child('clientes').child(pedido.cliente)\r\n        if (productosRef.child(\"pedidos\")) {\r\n            let id = 0;\r\n            const date = new Date()\r\n            console.log(`${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`)\r\n            productosRef.child(\"pedidos\").push({\r\n                fecha: `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`,\r\n                articulos: pedido.articulos\r\n            })\r\n            this.eliminarPedido(key)\r\n        }\r\n    }\r\n    async eliminarPedido(key) {\r\n        await firebase.database().ref().child(this.props.user.uid).child('pedidos').child(key).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.user.uid)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.pedidos) {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.pedidos).map(key => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\">\r\n                                                <Pedido id={key} pedido={this.props.pedidos[key]} cliente={this.props.pedidos[key].cliente} enviarPedido={(key,pedido)=>{\r\n                                                    this.enviarPedido(key,pedido,this.props.user.uid)\r\n                                                }} eliminarPedido={this.eliminarPedido} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 form-group text-center\">\r\n                                            <h3 className=\"shadowTitle\">Aun No Hay Ningun Pedido!</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"pedidos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n        pedidos: state.pedidos,\r\n        user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(PedidosList)\r\n","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport \"./Styles/ProductList.css\"\r\n\r\nclass MecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {console.log(this.props.products)}\r\n                                    {Object.values(this.props.products).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"mecanizados\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(MecanizadosList)","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass NoMecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.noMecanizados).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"no-mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"productos2\"],\r\n        mecanizados: state.data[\"mecanizados2\"],\r\n        noMecanizados: state.data[\"no-mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(NoMecanizadosList)","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass SurtidoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var array = document.getele\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.surtidores).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"productos\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"surtidores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        surtidores: state.data[\"Surtidores2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(SurtidoresList)","import React, { Component } from \"react\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport { Link } from \"react-router-dom\"\r\nimport logo from \"../images/logo.png\"\r\nimport \"./styles/Navbar.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass NavBar extends Component {\r\n    confirmLogOut() {\r\n        confirmAlert({\r\n            title: 'Cerrar Sesión?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cerrar',\r\n                    onClick: async () => {\r\n                        this.props.handleClick()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.user ?\r\n                    <Navbar collapseOnSelect bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Brand>\r\n                            <div className='ml-4'>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <h6 className='text-white'>{this.props.user.displayName}</h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                            this.confirmLogOut()\r\n                                        }}>Log Out</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto ml-auto\">\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Productos\">Productos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Pedidos\">Pedidos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Clientes\">Clientes</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Proveedores\">Proveedores</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Deudas\">Deudas</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Cheques\">Cheques</Link>\r\n                                </Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                        <Nav.Link>\r\n                        </Nav.Link>\r\n                            <Link className=\"nav-link p-2 btn btn-success\" to=\"/NuevaVenta\" id=\"buttonNuevoPedido\">Nueva Venta</Link>\r\n                        <Nav.Link>\r\n                            <Link className=\"nav-link p-2 btn btn-outline-success\" to=\"/NuevoRecibo\" id=\"buttonNuevoRecibo\">Nuevo Recibo</Link>\r\n                        </Nav.Link>\r\n                    </Navbar>\r\n                    :\r\n                    null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NavBar)","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/ficha.css\"\r\nimport * as firebase from \"firebase\"\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass Item extends Component {\r\n    constructor(props) {\r\n        const firebaseConfig = {\r\n            apiKey: \"AIzaSyDPmTjxjMxN2abofP8ZczgFGeYQYSvbXHE\",\r\n            authDomain: \"stock-119e8.firebaseapp.com\",\r\n            databaseURL: \"https://stock-119e8.firebaseio.com\",\r\n            projectId: \"stock-119e8\",\r\n            storageBucket: \"stock-119e8.appspot.com\",\r\n            messagingSenderId: \"1007277754269\",\r\n            appId: \"1:1007277754269:web:d1db0def0da907b2\"\r\n        }\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        }\r\n        super(props)\r\n    }\r\n    state = {\r\n        infoExtra: undefined\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    \r\n    async editarInfo(propiedad) {\r\n        const nuevaInfo = prompt(\"Ingresar Nueva Informacion\")\r\n        if (nuevaInfo) {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: nuevaInfo\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").child(propiedad).remove()\r\n        }\r\n    }\r\n    async agregarInfoArray(propiedad, array) {\r\n        let newArr = array\r\n        let newInfo = prompt(\"Introducir nueva informacion\")\r\n        if (newInfo) {\r\n            newArr.push(newInfo)\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: newArr\r\n                }\r\n            )\r\n        }\r\n    }\r\n    async eliminarInfoArray(propiedad, array, infoDelete) {\r\n        confirmAlert({\r\n            title: 'Eliminar Informacion?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si,eliminar',\r\n                    onClick: async () => {\r\n                        let newArr = array\r\n                        newArr.splice(newArr.indexOf(infoDelete), 1)\r\n                        await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                            {\r\n                                [propiedad]: newArr\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        if (this.props.name === \"nombre\") {\r\n            return (null)\r\n        }\r\n        else {\r\n            if (this.props.name === \"telefono\" || this.props.name === \"direccion\" || this.props.name === \"infoExtra\") {\r\n                {\r\n                    return (\r\n                        (this.props.name === \"infoExtra\" ?\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3 className=\"nombreItem\" onClick={e => {\r\n                                                this.agregarInfoArray(this.props.name, this.props.data).then(\r\n                                                    this.props.editarCliente()\r\n                                                )\r\n                                            }}> <small>{this.props.name}</small> </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente()\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3><small>{this.props.name}</small></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n            else {\r\n                return (\r\n                    this.props.edit ?\r\n                        <div className=\"container color-white ficha p-2\">\r\n                            {this.props.name === \"deuda\" ?\r\n                                <h3><small>{this.props.name}</small></h3>\r\n                                :\r\n                                <h3 className=\"nombreItem\" onClick={e => {\r\n                                    this.editarInfo(this.props.name).then(\r\n                                        this.props.editarCliente()\r\n                                    )\r\n                                }}> <small>{this.props.name}</small> </h3>\r\n                            }\r\n                            <h3>{this.props.data}</h3>\r\n                        </div>\r\n                        :\r\n                        <div className=\"container color-white ficha  p-2\">\r\n                            <h3 className=\"\"><small>{this.props.name}</small></h3>\r\n                            {this.props.name === \"deuda\" ?\r\n                                (this.props.data === 0 ?\r\n                                    <h3 className=\"itemDeuda \" >{this.props.data}</h3>\r\n                                    :\r\n                                    <h3 className=\"\">$ {this.props.data}</h3>)\r\n                                :\r\n                                <h3 className=\"\">{this.props.data}</h3>\r\n                            }\r\n                        </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Item)","import React, { Component, Fragment } from \"react\"\r\nimport Item from \"./Item\"\r\nimport \"./styles/ficha.css\"\r\nimport * as firebase from 'firebase'\r\nimport {connect} from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faPlus, faMinus,faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { changeCliente,changeProveedor } from \"../actions/index\"\r\n\r\nclass Ficha extends Component {\r\n    alertModificarDeuda=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Modificar Deuda</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" className=\"form-control\" id='inputNuevaDeuda' placeholder=\"Inresar Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.sumarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.restarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarValor=async (key)=>{\r\n        const nuevaInfo = document.getElementById('inputNuevaInfo').value\r\n        let newArr = this.props.cliente.datos.info[key]\r\n        if(nuevaInfo){\r\n            newArr.push(nuevaInfo)\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n            await datosRef.update({\r\n                [key]:newArr\r\n            }\r\n            )\r\n            this.props.editarCliente()\r\n        }\r\n    }\r\n    alertAgregarValor=(key)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar {key}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevaInfo' placeholder=\"Ingresar Informacion...\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarValor(key)\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarCampo=async ()=>{\r\n        const nuevoCampo = document.getElementById('inputNuevoCampo').value\r\n        const nuevoValor = document.getElementById('inputNuevoValor').value\r\n        if(nuevoCampo){\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n            await datosRef.update({\r\n                [nuevoCampo]:{\r\n                    0:nuevoValor\r\n                }\r\n            }\r\n            )\r\n            this.props.editarCliente()\r\n        }\r\n    }\r\n    alertAgregarCampo=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nueva Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Campo</span>\r\n                                        </div>\r\n                                        <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevoCampo' placeholder=\"ej: Ciudad\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Valor</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" id='inputNuevoValor' placeholder=\"ej: Buenos Aires\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarCampo()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    eliminarValor=async (key,valores,valorEliminado)=>{\r\n        const result = valores.filter(valor => valor!==valorEliminado);\r\n        const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\").child('info')\r\n        await datosRef.update({\r\n                [key]:result\r\n        }\r\n        )\r\n        this.props.editarCliente()\r\n        \r\n    }\r\n    alertEliminarValor=(key,valores,valor)=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Eliminar Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-left\">\r\n                                <p>Desea eliminar {valor} ?</p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.eliminarValor(key,valores,valor)\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    Si, Eliminar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    alertEditarNombre=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faQuestionCircle}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Editar Nombre de {this.props.cliente.datos.nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='inputNuevoNombre' placeholder=\"Ingresar Nuevo Nombre\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.editarNombre()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    Si, Editar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-danger'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    editarNombre= async ()=>{\r\n        const nuevoNombre = document.getElementById('inputNuevoNombre').value\r\n        if(nuevoNombre){\r\n            let data = this.props.cliente\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(data.datos.nombre).remove()\r\n            data.datos.nombre=nuevoNombre\r\n            const datosRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion)\r\n            await datosRef.update({\r\n                [data.datos.nombre]:data\r\n            }\r\n            )\r\n            if(this.props.seccion==='clientes'){\r\n                this.props.changeCliente(data.datos.nombre)\r\n            }\r\n            else{\r\n                this.props.changeProveedor(data.datos.nombre)\r\n            }\r\n        }\r\n    }\r\n    async sumarDeuda() {\r\n        const nuevaDeuda = parseFloat(document.getElementById('inputNuevaDeuda').value)\r\n        if(nuevaDeuda){\r\n            const deudaRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\")\r\n            await deudaRef.update({\r\n                deuda: parseFloat(this.props.cliente.datos.deuda)+nuevaDeuda\r\n            }\r\n            )\r\n        }\r\n    }\r\n    async restarDeuda() {\r\n        const nuevaDeuda = parseFloat(document.getElementById('inputNuevaDeuda').value)\r\n        if(nuevaDeuda){\r\n            const deudaRef = await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.cliente.datos.nombre).child(\"datos\")\r\n            await deudaRef.update({\r\n                deuda: parseFloat(this.props.cliente.datos.deuda)-nuevaDeuda\r\n            }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col form-group name\">\r\n                        {this.props.edit?\r\n                            <h1 onClick={this.alertEditarNombre} className='edit'>{this.props.cliente.datos.nombre}<span className={this.props.cliente.datos.deuda>0?'badge badge-pill badge-danger ml-4 deuda':'badge badge-pill badge-success ml-4 deuda'} >${this.props.cliente.datos.deuda}</span></h1>\r\n                        :\r\n                            <h1>{this.props.cliente.datos.nombre}<span className={this.props.cliente.datos.deuda>0?'badge badge-pill badge-danger ml-4 deuda':'badge badge-pill badge-success ml-4 deuda'} onClick={this.alertModificarDeuda} >${this.props.cliente.datos.deuda}</span></h1>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {this.props.edit?\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 form-group text-center\">\r\n                        <button type='button' className=\"btn btn-success\" onClick={this.alertAgregarCampo}>\r\n                            Agregar nuevo campo\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n                }\r\n                <div className=\"row\">\r\n                    {this.props.cliente.datos.info?\r\n                    (\r\n                        <table className=\"table table-hover table-dark\">\r\n                            <tbody>\r\n                                {\r\n                                    Object.keys(this.props.cliente.datos.info).map(key => (\r\n                                    (key === \"nombre\"||key==='deuda' ?\r\n                                        null\r\n                                        :\r\n                                        (\r\n                                        <tr>\r\n                                            {this.props.edit?\r\n                                            <>\r\n                                                <th scope=\"row\">{key}</th>\r\n                                                <td>\r\n                                                    {this.props.cliente.datos.info[key].map(valor=>( \r\n                                                        <p className='mt-2 mb-2 eliminarValor' onClick={()=>{\r\n                                                            this.alertEliminarValor(key,this.props.cliente.datos.info[key],valor)\r\n                                                        }}>{valor}</p>\r\n                                                    ))}\r\n                                                </td>\r\n                                                <th>\r\n                                                    <FontAwesomeIcon className='newInfo'icon={faPlus} onClick={()=>{\r\n                                                        this.alertAgregarValor(key)\r\n                                                    }}  />\r\n                                                </th>\r\n                                            </>\r\n                                            :\r\n                                            <>\r\n                                                <th scope=\"row\">{key}</th>\r\n                                                <td>\r\n                                                    {this.props.cliente.datos.info[key].map(valor=>( \r\n                                                        <p className='mt-2 mb-2'>{valor}</p>\r\n                                                    ))}\r\n                                                </td>\r\n                                            </>\r\n                                            }\r\n                                        </tr>\r\n                                        )\r\n                                    )\r\n                                ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                    :\r\n                    <>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1 className='text-white'> <span className='badge badge-pill bdage-info'> Aun no hay Informacion para mostrar</span></h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <button type='button' className='btn btn-success' onClick={this.alertAgregarCampo}> Agregar Informacion!</button>\r\n                        </div>\r\n                    </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nconst mapDispatchToProps={\r\n    changeCliente,\r\n    changeProveedor\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Ficha)\r\n\r\n","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\n\r\nclass PedidoCliente extends Component {\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container p2 pedido bg-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col pt-1 pb-1\">\r\n                            <h3>{this.props.data.fecha}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {this.props.data.articulos.map(articulo => (\r\n                        <div className=\"row separator d-flex\">\r\n                                <div className=\" pt-2 pb-2 \">\r\n                                    <p>{articulo.cantidad} </p>\r\n                                </div>\r\n                                <div className=\" pt-2 pb-2 text-right flex-grow-1\">\r\n                                    <p>{articulo.nombre}</p>\r\n                                </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoCliente","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\n\r\nclass PedidoProovedor extends Component {\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container p2 pedido bg-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col pt-1 pb-1\">\r\n                            <h3>{this.props.data.fecha}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {this.props.data.articulos.map(articulo => (\r\n                        <div className=\"row separator d-flex\">\r\n                                <div className=\" pt-2 pb-2 \">\r\n                                    <p>{articulo.cantidad} </p>\r\n                                </div>\r\n                                <div className=\" pt-2 pb-2 text-right flex-grow-1\">\r\n                                    <p>{articulo.nombre} <span className='badge badg  e-pill badge-light'>${articulo.precio}</span></p>\r\n                                </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoProovedor","import React, { Component } from \"react\"\r\nimport PedidoCliente from \"./PedidoCliente\"\r\nimport PedidoProovedor from \"./PedidoProovedor\"\r\n\r\n\r\nclass Fichapedido extends Component {\r\n    render() {\r\n        if (this.props.data !== undefined) {\r\n            console.log(this.props.data)\r\n            let pedidosAux = []\r\n            Object.keys(this.props.data).map(pedido => {\r\n                console.log(pedido)\r\n                pedidosAux.push(this.props.data[pedido])\r\n            })\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {pedidosAux.reverse().map(pedido => (\r\n                            <div className=\"col-12 col-md-6 col-lg-4 form-group d-flex align-items-center\">\r\n                                {this.props.seccion === \"proveedores\" ?\r\n                                    <PedidoProovedor data={pedido} />\r\n                                    :\r\n                                    <PedidoCliente data={pedido} />\r\n                                }\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Fichapedido","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport NavBar from \"./NavBar\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faEdit, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaProovedor extends Component {\r\n    state = {\r\n        edit: false\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n    editarCliente() {\r\n        if (this.state.edit) {\r\n            this.setState({\r\n                edit: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: `/${this.props.seccion}`\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={this.props.handleClick} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha \r\n                                    editarCliente={e => {\r\n                                        this.editarCliente()\r\n                                    }} \r\n                                    edit={this.state.edit} \r\n                                    seccion={'proveedores'} \r\n                                    cliente={this.props.proovedor} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className=\"name\">Lista de Pedidos</h2>\r\n                            </div>\r\n                            <div className=\"col-12 text-center form-group pt-2\">\r\n                                <FichaPedidos seccion='proveedores' data={this.props.proovedor.pedidos} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FichaProovedor)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaProovedor from \"../components/FichaProovedor\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeProveedor } from \"../actions/index\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ProovedoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    returnBack = () => {\r\n        this.props.changeProveedor(undefined)\r\n    }\r\n    alertNuevoProveedor = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Proveedor</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoProveedor' placeholder=\"Nombre del Proveedor\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoProveedor()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    nuevoProveedor = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoProveedor\").value\r\n        if(nombre){\r\n            firebase.database().ref().child(this.props.user.uid).child('proveedores').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        deuda:0,\r\n                        nombre:nombre,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.proveedor) {\r\n                    const proveedor = this.props.proveedores[this.props.proveedor]\r\n                    if (proveedor) {\r\n                        return (\r\n                            <div>\r\n                                <FichaProovedor proovedor={proveedor} seccion=\"Proveedores\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Proveedor</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Proveedor\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.alertNuevoProveedor}>\r\n                                                Agregar Nuevo Proveedor\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.proveedores?\r\n                                            Object.values(this.props.proveedores).map(proveedor => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/Proveedores/`,\r\n                                                        search: `${proveedor.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeProveedor(proveedor.datos.nombre)\r\n                                                        }}>\r\n                                                            {proveedor.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Proveedores!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Proveedores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    proveedores: state.proveedores,\r\n    proveedor: state.proveedor\r\n})\r\nconst mapDispatchToProps = {\r\n    changeProveedor,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProovedoresList)","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faPlus,faMinus, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaCliente extends Component {\r\n    state = {\r\n        edit: false,\r\n        redirect: false\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        console.log(this.props.seccion)\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    async agregarInfoExtra() {\r\n        let arrayInfo\r\n        if (this.props.proovedor.datos.infoExtra) {\r\n            arrayInfo = this.props.proovedor.datos.infoExtra\r\n        }\r\n        else {\r\n            arrayInfo = []\r\n        }\r\n        arrayInfo.push(prompt(\"Ingresar Informacion Extra\"))\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"clientes\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\r\n            {\r\n                infoExtra: arrayInfo\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    alertEditarCliente=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Editar Informacion</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" className=\"form-control\" id='inputNuevoCa' placeholder=\"Inresar Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.sumarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                    <FontAwesomeIcon icon={faPlus}  />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-danger'\r\n                                        onClick={() => {\r\n                                            this.restarDeuda()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinus}  />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    editarCliente() {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: \"/clientes\"\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={e => {\r\n                                        this.props.handleClick()\r\n                                        this.editarCliente()\r\n                                    }} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha\r\n                                    editarCliente={e => {\r\n                                        this.editarCliente()\r\n                                    }}\r\n                                    edit={this.state.edit}\r\n                                    seccion={'clientes'}\r\n                                    cliente={this.props.proovedor}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className=\"name\">Lista de Pedidos</h2>\r\n                            </div>\r\n                            <div className=\"col-12 text-center form-group pt-2\">\r\n                                <FichaPedidos data={this.props.proovedor.pedidos} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user,\r\n})\r\nexport default connect(mapStateToProps,null)(FichaCliente)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaCliente from \"../components/FichaCliente\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { changeCliente } from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass ClientesList extends Component {\r\n    returnBack() {\r\n        this.props.changeCliente(null)\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.cliente) {\r\n                    const cliente = this.props.clientes[this.props.cliente]\r\n                    if (cliente) {\r\n                        return (\r\n                            <div>\r\n                                <FichaCliente proovedor={cliente} seccion=\"clientes\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Cliente</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Cliente\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <Link to=\"/NuevoCliente\">\r\n                                                <button type=\"button\" className=\"btn btn-success\">\r\n                                                    Agregar Nuevo Cliente\r\n                                                </button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.clientes?\r\n                                            Object.values(this.props.clientes).map(cliente => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/clientes/`,\r\n                                                        search: `${cliente.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeCliente(cliente.datos.nombre)\r\n                                                        }}>\r\n                                                            {cliente.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Clientes!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Clientes\" />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cliente: state.cliente,\r\n    clientes: state.clientes\r\n})\r\nconst mapDispatchToProps = {\r\n    changeCliente,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientesList)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaProovedor from \"../components/FichaProovedor\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeExpreso } from \"../actions/index\"\r\n\r\n\r\nclass ExpresosList extends Component {\r\n    returnBack() {\r\n        this.props.changeExpreso(null)\r\n\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.expreso) {\r\n                    const expreso = this.props.expresos[this.props.expreso]\r\n                    return (\r\n                        <div>\r\n                            <FichaProovedor seccion=\"expresos\" handleClick={e => {\r\n                                this.returnBack()\r\n                            }} proovedor={expreso} />\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Expreso\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.values(this.props.expresos).map(expreso => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                <Link to={{\r\n                                                    pathname: `/expresos/`,\r\n                                                    search: `${expreso.datos.nombre}`\r\n                                                }}>\r\n                                                    <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                        this.props.changeExpreso(expreso.datos.nombre)\r\n                                                    }}>\r\n                                                        {expreso.datos.nombre}\r\n                                                    </button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Expresos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    expresos: state.data[\"expresos2\"],\r\n    expreso: state.expreso\r\n})\r\nconst mapDispatchToProps = {\r\n    changeExpreso,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpresosList)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraDeuda extends Component {\r\n    pedirCantidad() {\r\n        const nuevaDeuda = prompt(\"Ingresar Canidad\")\r\n        if (nuevaDeuda)\r\n            return nuevaDeuda\r\n        else\r\n            return 0\r\n    }\r\n    sumarDeuda(deudaVieja, adicion) {\r\n        return deudaVieja + parseInt(adicion)\r\n    }\r\n    restarDeuda(deudaVieja, quita) {\r\n        return deudaVieja - parseInt(quita)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={(e) => {\r\n                            this.props.handleClick(this.props.cliente, this.sumarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faPlus} /></button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                            this.props.handleClick(this.props.cliente, this.restarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faMinus} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraDeuda","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport BotoneraDeuda from \"./BotoneraDeuda\"\r\nimport \"./styles/Deuda.css\"\r\n\r\nclass Deuda extends Component {\r\n    render() {\r\n        if (this.props.deuda === 0) {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container-fluid pt-2 pb-2 deuda bg-dark\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-1\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <h3>$ {this.props.deuda}</h3>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <BotoneraDeuda cliente={this.props.cliente} deuda={this.props.deuda} handleClick={this.props.handleClick} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Deuda","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport \"./Styles/PedidosList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Deudas extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayDeudas = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center\")\r\n        forEach.call(arrayDeudas, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex\";\r\n            }\r\n        });\r\n    }\r\n    async updateDeuda(cliente, nuevaDeuda,uid) {\r\n        const datosRef = await firebase.database().ref().child(uid).child('clientes').child(cliente).child(\"datos\")\r\n        datosRef.update({\r\n            deuda: nuevaDeuda\r\n        })\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.clientes) {\r\n                    const deudas = []\r\n                    Object.values(this.props.clientes).map(cliente => {\r\n                        if (cliente.datos.deuda != 0) {\r\n                            deudas.push({\r\n                                nombre: cliente.datos.nombre,\r\n                                deuda: cliente.datos.deuda\r\n                            })\r\n                        }\r\n                    })\r\n                    if(deudas.length){\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6 offset-3\">\r\n                                                <form>\r\n                                                    <div className=\"formRow\">\r\n                                                        <div className=\"form-group col-12 text-center\">\r\n                                                            <input type=\"text\" className=\"form-control\" onChange={\r\n                                                                e => {\r\n                                                                    this.handleChange(e)\r\n                                                                }\r\n                                                            } placeholder=\"Buscar Deuda\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {deudas.map(deuda => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 form-group text-center\">\r\n                                                    <Deuda cliente={deuda.nombre} deuda={deuda.deuda} handleClick={(cliente,deuda)=>{\r\n                                                        this.updateDeuda(cliente,deuda,this.props.user.uid)\r\n                                                    }} />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container p-absolute-center\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h3 className=\"shadowTitle\">No Hay Deudas Pendientes!</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container p-absolute-center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h3 className=\"shadowTitle\">No Hay Deudas Pendientes!</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Deudas\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    clientes: state.clientes\r\n})\r\nexport default connect(mapStateToProps, null)(Deudas)\r\n","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport \"./Styles/ChequesList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\n\r\nclass ListasDePrecios extends Component {\r\n    async subirDocumento() {\r\n        if (this.state.file) {\r\n            console.log(this.state.file)\r\n            await firebase.storage().ref().child(\"ListasDePrecios\").child(this.state.file.name).put(this.state.file).then(e => {\r\n                this.setState({\r\n                    file: undefined,\r\n                    documentos: undefined,\r\n                    loading: true\r\n                })\r\n                this.fetchData()\r\n            })\r\n        }\r\n    }\r\n    async borrarDocumento(documento) {\r\n        confirmAlert({\r\n            title: 'Eliminar Documento?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.storage().ref().child(\"ListasDePrecios\").child(documento).delete().then(e => {\r\n                            this.setState({\r\n                                documentos: undefined,\r\n                                edit: false,\r\n                                loading: true\r\n                            })\r\n                            this.fetchData()\r\n                        }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.documentos)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12  col-md-8 offset-md-2 col-lg-6 offset-lg-3 form-group\">\r\n                                        <div class=\"input-group mb-3\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                {this.state.file ?\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={e => {\r\n                                                        this.subirDocumento()\r\n                                                    }}>Subir Documento!</button>\r\n                                                    :\r\n                                                    <button type=\"button\" className=\"btn btn-success disabled\">Subir Documento!</button>\r\n                                                }\r\n                                            </div>\r\n                                            <div class=\"custom-file\">\r\n                                                <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" onChange={e => {\r\n                                                    this.setState(\r\n                                                        {\r\n                                                            file: e.target.files[0]\r\n                                                        }\r\n                                                    )\r\n                                                }} />\r\n                                                <label class=\"custom-file-label\" for=\"inputGroupFile01\">{\r\n                                                    this.state.file ?\r\n                                                        \"Archivo Elegido!\"\r\n                                                        :\r\n                                                        \"Elegir Archivo\"\r\n                                                }</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 form-group text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={e => {\r\n                                            if (this.state.edit) {\r\n                                                this.setState({\r\n                                                    edit: false\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                this.setState({\r\n                                                    edit: true\r\n                                                })\r\n                                            }\r\n                                        }}>Eliminar Archivo</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.keys(this.props.documentos).map(key => (\r\n                                        console.log(this.props.documentos[key].url)\r\n                                            (this.state.edit ?\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                                        this.borrarDocumento(this.props.documentos[key].nombre)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={e => {\r\n                                                        window.open(this.props.documentos[key].url)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                            )\r\n                                    ))}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    documentos: state.documentos,\r\n})\r\nexport default connect(mapStateToProps, null)(ListasDePrecios)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\n\r\nclass Product extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"product-election bg-dark\" onClick={this.props.handleClick}>\r\n                <div className=\"product-Info\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h6 className=\"colorWhite textBold mt-2\">{this.props.nombre}</h6>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 form-group text-center\">\r\n                                    <span className=\"badge badge-íll badge-light\">$ {this.props.precio}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraNuevoPedido extends Component {\r\n    state = {\r\n        redirect: false,\r\n        porcentaje: false,\r\n        restar: false,\r\n    }\r\n    porcentaje = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Porcentaje</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" id=\"porcentaje\" className=\"form-control\" placeholder=\"Porcentaje\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group-text-cen\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const porcentaje = document.getElementById(\"porcentaje\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - (this.props.total * porcentaje / 100))\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    restar = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Cantidad</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" className=\"form-control\" id=\"cantidad\" placeholder=\"cantidad\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const cantidad = document.getElementById(\"cantidad\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - cantidad)\r\n                                        console.log(cantidad)\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    modificarTotal() {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12  text-center form-group\">\r\n                                    <h1>Modificar Total</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.porcentaje()\r\n                                    }}>\r\n                                        Porcentaje\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.restar()\r\n                                    }}>\r\n                                        Restar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    cancelarPedido() {\r\n        confirmAlert({\r\n            title: 'Cancelar Pedido?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cancelar',\r\n                    onClick: async () => {\r\n                        this.setState({\r\n                            redirect: true\r\n                        })\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row align-items-center\">\r\n                {this.state.redirect ?\r\n                    <Redirect to=\"productos\" />\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.props.enviarPedido}><FontAwesomeIcon icon={faCheck}  /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h3 onClick={e => {\r\n                        this.modificarTotal()\r\n                    }}>${this.props.total}</h3>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={e => {\r\n                        this.cancelarPedido()\r\n                    }}><FontAwesomeIcon icon={faTimes} /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraNuevoPedido","import React, { Component, Fragment } from \"react\"\r\nimport BotoneraNuevoPedido from \"../components/BotoneraNuevoPedido\"\r\nimport './styles/ResumenPedido.css'\r\nclass ResumenPedido extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"col bg-dark text-center nuevoPedido p-2 \">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{this.props.cliente}</h4>\r\n                    </div>\r\n                </div>\r\n                    {Object.keys(this.props.pedido).map(key => (\r\n                                <div className=\"row align-items-center\">\r\n                                    <div className=\"col d-flex\">\r\n                                        <p className='flex-grow-1 text-left'>{this.props.pedido[key].nombre} <span className=\"badge badge-light\">$ {this.props.pedido[key].precio} c/u </span></p>\r\n                                        <p className='mr-2 ml-2'>{this.props.pedido[key].cantidad}</p>\r\n                                    </div>\r\n                                </div>\r\n                    )\r\n                    )}\r\n                <BotoneraNuevoPedido modificarTotal={total => {\r\n                    this.props.modificarTotal(total)\r\n                }} total={this.props.total} enviarPedido={this.props.enviarPedido} />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default ResumenPedido","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport ProductElection from \"../components/ProductElection\"\r\nimport * as firebase from \"firebase\"\r\nimport ResumenPedido from \"../components/ResumenPedido\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport \"./Styles/NuevoPedido.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestionCircle,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { connect } from \"react-redux\"\r\nimport {changeCliente} from \"../actions/index\"\r\nclass NuevoPedido extends Component {\r\n    seleccionarDestinatario(cliente) {\r\n        this.setState({\r\n            nuevoCliente: cliente\r\n        })\r\n    }\r\n    async enviarPedido() {\r\n        let arr = []\r\n        Object.keys(this.state.pedido).map(key => {\r\n            arr.push(\r\n                {\r\n                    nombre: this.state.pedido[key].nombre,\r\n                    cantidad: this.state.pedido[key].cantidad,\r\n                    seccion: this.state.pedido[key].seccion\r\n                }\r\n            )\r\n        })\r\n        console.log(arr)\r\n        firebase.database().ref().child(this.props.user.uid).child(\"pedidos\").push(\r\n            {\r\n                cliente: this.state.nuevoCliente,\r\n                precio: this.state.total,\r\n                articulos: arr\r\n            }\r\n        )\r\n    }\r\n    alertEnviarPedido() {\r\n        confirmAlert({\r\n            title: 'Agregar Pedido?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.enviarPedido().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    state = {\r\n        nuevoCliente: undefined,\r\n        total: 0,\r\n        pedido: [],\r\n    }\r\n    agregarArticulo(nombre, cantidad, precio, seccion) {\r\n        const arr = this.state.pedido\r\n        arr.push({\r\n            nombre: nombre,\r\n            cantidad: cantidad,\r\n            precio: precio,\r\n            seccion: seccion\r\n        })\r\n        super.setState({\r\n            ...this.state,\r\n            pedido: arr\r\n        })\r\n    }\r\n    handleChangeProducto(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var array = document.getele\r\n        var arrayProductos = document.getElementsByClassName(\"col-6 col-md-3 col-lg-2 form-group \")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-6 col-md-3 col-lg-2 form-group d-none \"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-6 col-md-3 col-lg-2 form-group d-block \"\r\n            }\r\n        });\r\n    }\r\n    handleChangeCliente(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    modificarTotal(total) {\r\n        console.log(total)\r\n        this.setState({ total: total })\r\n    }\r\n    alertNuevoCliente = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoCliente' placeholder=\"Nombre del Cliente\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoCliente()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    alertElegirProducto = (nombre,precio) =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" class=\"form-control\" id='cantidadProducto' placeholder=\"Cantidad\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            const cantidadPlus = document.getElementById('cantidadProducto').value\r\n                                                if (cantidadPlus) {\r\n                                                    this.agregarArticulo(nombre,cantidadPlus,precio, \"productos\")\r\n                                                    if (precio) {\r\n                                                        let sumaPrecios\r\n                                                        if (this.state.total) {\r\n                                                            sumaPrecios = this.state.total\r\n                                                        }\r\n                                                        else {\r\n                                                            sumaPrecios = 0\r\n                                                        }\r\n                                                        sumaPrecios += parseInt(precio * cantidadPlus)\r\n                                                        this.setState({\r\n                                                            total: sumaPrecios\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    nuevoCliente = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoCliente\").value\r\n        if(nombre){\r\n            this.seleccionarDestinatario(nombre)\r\n            firebase.database().ref().child(this.props.user.uid).child('clientes').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        nombre:nombre,\r\n                        deuda:0\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    alertResumen = ()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <ResumenPedido\r\n                                cliente={this.state.nuevoCliente}\r\n                                pedido={this.state.pedido}\r\n                                enviarPedido={e => {\r\n                                    this.alertEnviarPedido()\r\n                                }}\r\n                                modificarTotal={total => {\r\n                                    this.modificarTotal(total)\r\n                                }}\r\n                                total={this.state.total}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertAgregarProducto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarProducto = async () =>{\r\n        const nombre = document.getElementById('nombreNuevoProducto').value\r\n        const precio = document.getElementById('precioNuevoProducto').value\r\n        if(nombre){\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\r\n                {\r\n                    [nombre]:{\r\n                        nombre:nombre,\r\n                        cantidad:0,\r\n                        precio:precio\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            let user = undefined\r\n            user = this.props.user.email\r\n            if (user) {\r\n                if (!this.state.nuevoCliente) {\r\n                    return (\r\n                        <div className=\"nuevo-cliente\">\r\n                            <div className=\"container-fluid mt-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChangeCliente(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Cliente\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <button type='button' className='btn btn-outline-light' onClick={this.alertNuevoCliente}>\r\n                                            Nuevo Cliente\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.clientes?\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.clientes).map(cliente => (\r\n                                        <div className=\"col-12 text-center form-group\">\r\n                                            <button type=\"button\" className=\"btn btn-primary btn-cliente\" onClick={() => {\r\n                                                console.log(cliente.datos.nombre)\r\n                                                this.seleccionarDestinatario(cliente.datos.nombre)\r\n                                            }}>\r\n                                                {cliente.datos.nombre}\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                :\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 text-center\">\r\n                                        <h1 className='text-white'>Aun no hay Clientes!</h1>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className=\"name\">Elegir Productos</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChangeProducto(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type='button' className='btn btn-success' onClick={this.alertResumen}>\r\n                                                Finalizar Venta\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type='button' className='btn btn-outline-success' onClick={this.alertAgregarProducto}>\r\n                                                Nuevo Producto\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row productList align-items-center\">\r\n                                        {this.props.productos?\r\n                                            Object.values(this.props.productos).map(producto => ( \r\n                                                <div className=\"col-6 col-md-3 col-lg-2 form-group\" key={producto.nombre}>\r\n                                                    <ProductElection \r\n                                                        handleClick={e => {\r\n                                                            this.alertElegirProducto(producto.nombre, producto.precio)\r\n                                                        }}\r\n                                                        nombre={producto.nombre} \r\n                                                        precio={producto.precio} \r\n                                                    />\r\n                                                </div>\r\n                                            ))\r\n                                        :\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className='text-white'> Aun No Hay Productos!</h1>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                    {this.state.redirect ?\r\n                                        <Redirect to=\"pedidos\" />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"NuevaVenta\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    productos: state.productos,\r\n    clientes:state.clientes\r\n})\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoPedido)","import React, { Component } from \"react\"\r\nimport \"./styles/Cheque.css\"\r\nimport * as firebase from \"firebase\"\r\nimport {connect} from 'react-redux'\r\nclass Cheque extends Component {\r\n    async enviarCheque(llave) {\r\n        const date = new Date()\r\n        const enviadoA = prompt(\"Ingresar Nombre Del Destinatario\")\r\n        if (enviadoA) {\r\n            await firebase.database().ref().child(this.props.user.uid).child('cheques').child(llave).update(\r\n                {\r\n                    [\"Fecha De Salida\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n                    [\"Enviado A\"]: enviadoA\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container cheque p-3 bg-dark\">\r\n                <div className=\"row d-flex align-items-center\">\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Dia\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Entrada)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Cliente\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Cliente)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Banco\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Banco)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Numero\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Numero)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Cheque\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Fecha)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>$ {this.props.cheque[\"Monto\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Monto)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Fecha De Salida\"] ?\r\n                                        <h6>{this.props.cheque[\"Fecha De Salida\"]}</h6>\r\n                                        :\r\n                                        <h6 className=\"salida\" onClick={\r\n                                            e => {\r\n                                                this.enviarCheque(this.props.llave)\r\n                                            }\r\n                                        }>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Salida)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Enviado A\"] ?\r\n                                        <h6>{this.props.cheque[\"Enviado A\"]}</h6>\r\n                                        :\r\n                                        <h6>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Enviado A)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Cheque)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport Cheque from \"../components/Cheque\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./Styles/ChequesList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\n\r\nclass ChequesList extends Component {\r\n    state = {\r\n        filtro: \"Numero\",\r\n        redirect: false,\r\n    }\r\n    handleChange(e, filtro) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayCheques = document.getElementsByClassName(\"col-12 form-group chequeList\")\r\n        forEach.call(arrayCheques, function (f) {\r\n            const cheque = f.children[0].children[0].children\r\n            let $filtro = undefined\r\n            switch (filtro) {\r\n                case \"Numero\":\r\n                    $filtro = 3;\r\n                    break;\r\n                case \"Nombre\":\r\n                    $filtro = 1;\r\n                    break;\r\n                case \"Monto\":\r\n                    $filtro = 5;\r\n                    break;\r\n                case \"Banco\":\r\n                    $filtro = 2;\r\n                    break;\r\n                case \"Enviado A\":\r\n                    $filtro = 7;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (cheque[$filtro].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 form-group chequeList d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 form-group chequeList d-block\";\r\n            }\r\n        });\r\n    }\r\n    actualizarBotones(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayButton = document.getElementsByClassName(\"filtro btn\")\r\n        forEach.call(arrayButton, function (f) {\r\n            f.className = \"filtro btn btn-outline-light\"\r\n        })\r\n        e.target.className = \"filtro btn btn-outline-success\"\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if(user){\r\n                return (\r\n                    <div>\r\n                        {\r\n                            this.state.redirect ?\r\n                                <Redirect to=\"/NuevoCheque\" />\r\n                                :\r\n                                <div>\r\n                                    <div className=\"productList\">\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-right\">\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={\r\n                                                        e => {\r\n                                                            this.setState({\r\n                                                                redirect: true\r\n                                                            })\r\n                                                        }\r\n                                                    }>Agregar Cheque</button>\r\n                                                </div>\r\n                                                <div className=\"col-12 text-center form-group\">\r\n                                                    <h2 className=\"name\">Cheques</h2>\r\n                                                </div>\r\n                                                <div className=\"col-12  text-center form-group\">\r\n                                                    <form>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"form-group col-6 offset-3 text-center\">\r\n                                                                <input type=\"text\" className=\"form-control\" onChange={\r\n                                                                    e => {\r\n                                                                        this.handleChange(e, this.state.filtro)\r\n                                                                    }\r\n                                                                } placeholder=\"Buscar Cheque\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"container\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-success\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Numero\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Numero</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Nombre\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Nombre</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Banco\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Banco</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Monto\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Monto</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Enviado A\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Enviado A</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                            {this.props.cheques?\r\n                                            <div className=\"row\">\r\n                                                {Object.keys(this.props.cheques).map(key => (\r\n                                                    <div className=\"col-12 form-group chequeList\">\r\n                                                        <Cheque llave={key} cheque={this.props.cheques[key]} />\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3 className=\"shadowTitle\">No Hay Cheques!</h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Cheques\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cheques: state.cheques\r\n})\r\nexport default connect(mapStateToProps, null)(ChequesList)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Prompt } from \"react-router\"\r\nimport * as firebase from \"firebase\"\r\nimport \"../components/styles/FormNuevoCliente.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nclass FormNuevoCliente extends Component {\r\n    state = {\r\n        nombre: null,\r\n        direccionPrincipal: null,\r\n        direccionSecundaria: null,\r\n        ciudad: null,\r\n        codigoPostal: \" - \",\r\n        expreso: null,\r\n        CUIT: null,\r\n        DNI: null,\r\n        telefono1: null,\r\n        telefono2: null,\r\n        telefono3: null,\r\n        telefono4: null,\r\n    }\r\n\r\n    async submitForm() {\r\n        let cliente = {\r\n            [this.state.nombre]: {\r\n                datos: {\r\n                    info:{\r\n                        direccion: {\r\n                            0: this.state.direccionPrincipal,\r\n                            1: this.state.direccionSecundaria,\r\n                        },\r\n                        telefono: {\r\n                            0: this.state.telefono1,\r\n                            1: this.state.telefono2,\r\n                            2: this.state.telefono3,\r\n                            3: this.state.telefono4,\r\n                        },\r\n                        ciudad:{\r\n                            0:this.state.ciudad + \" CP:\" + this.state.codigoPostal,\r\n                        },\r\n                        CUIT: {\r\n                            0:this.state.CUIT\r\n                        },\r\n                        DNI: {\r\n                            0:this.state.DNI\r\n                        }\r\n                    },\r\n                    nombre: this.state.nombre,\r\n                    deuda: 0,\r\n                }\r\n            }\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child('clientes').update(cliente)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 offset-2\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <Prompt\r\n                                when={this.state.DNI}\r\n                                message=\"Estas Seguro que deseas retirarte?\"\r\n                            />\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\">\r\n                                    <label>Nombre</label>\r\n                                    <input type=\"text\" value={this.state.nombre} onChange={e => {\r\n                                        this.setState(\r\n                                            {\r\n                                                ...this.state,\r\n                                                nombre: e.target.value\r\n                                            }\r\n                                        )\r\n                                    }} className=\"form-control\" id=\"nombre\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress\">Direccion Principal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={this.state.direccionPrincipal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionPrincipal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress2\">Direccion Secundaria</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" value={this.state.direccionSecundaria} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionSecundaria: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>Ciudad</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.ciudad} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            ciudad: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label for=\"inputZip\">Codigo Postal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.codigoPostal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            codigoPostal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 1</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono1} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono1: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 2</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono2} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono2: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 3</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono3} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono3: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 4</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono4} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono4: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>CUIT</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.CUIT} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            CUIT: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label for=\"inputZip\">DNI</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.DNI} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            DNI: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cliente</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/clientes\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FormNuevoCliente)","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCliente from \"../components/FormNuevoCliente\"\r\nimport {connect} from 'react-redux'\r\nclass NuevoCliente extends Component {\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <FormNuevoCliente />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"NuevoCliente\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NuevoCliente)","import React, { Component, Fragment } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport Login from \"../components/Login\"\nimport SpinnerLoading from \"../components/SpinnerLoading\"\nimport ProductElection from \"../components/ProductElection\"\nimport * as firebase from \"firebase\"\nimport ResumenPedido from \"../components/ResumenPedido\"\nimport \"./Styles/ProovedoresList.css\"\nimport \"./Styles/NuevoPedido.css\"\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle,faPlus} from '@fortawesome/free-solid-svg-icons'\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { connect } from \"react-redux\"\nimport {changeProveedor} from \"../actions/index\"\nclass NuevoRecibo extends Component {\n    seleccionarDestinatario(cliente) {\n        this.setState({\n            nuevoCliente: cliente\n        })\n    }\n    async enviarPedido() {\n        let arr = []\n        Object.keys(this.state.pedido).map(key => {\n\n            arr.push(\n                {   precio:this.state.pedido[key].precio,\n                    nombre: this.state.pedido[key].nombre,\n                    cantidad: this.state.pedido[key].cantidad,\n                    seccion: this.state.pedido[key].seccion\n                }\n            )\n        })\n        const date = new Date()\n        firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.state.nuevoCliente).child(\"pedidos\").push(\n            {\n                fecha: `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`,\n                articulos: arr\n            }\n        )\n        arr.map(articulo=>{\n            const nuevaCantidad=this.props.productos[articulo.nombre].cantidad+=parseFloat(articulo.cantidad)\n            firebase.database().ref().child(this.props.user.uid).child('productos').child(articulo.nombre).update(\n                {\n                    cantidad:nuevaCantidad\n                }\n            )\n        })\n    }\n    alertEnviarPedido() {\n        confirmAlert({\n            title: 'Agregar Recibo?',\n            buttons: [\n                {\n                    label: 'Si, Agregar',\n                    onClick: async () => {\n                        this.enviarPedido().then(\n                            this.setState({\n                                redirect: true\n                            })\n                        )\n                    }\n                },\n                {\n                    label: 'Cancelar'\n                }\n            ]\n        });\n    }\n    state = {\n        nuevoCliente: undefined,\n        accion:undefined,\n        total: 0,\n        pedido: [],\n    }\n    agregarArticulo(nombre, cantidad, precio, seccion) {\n        const arr = this.state.pedido\n        arr.push({\n            nombre: nombre,\n            cantidad: cantidad,\n            precio: precio,\n            seccion: seccion\n        })\n        super.setState({\n            ...this.state,\n            pedido: arr\n        })\n    }\n    handleChangeProducto(e) {\n        var forEach = Array.prototype.forEach;\n        var array = document.getele\n        var arrayProductos = document.getElementsByClassName(\"col-6 col-md-3 col-lg-2 form-group\")\n        forEach.call(arrayProductos, function (f) {\n            if (f.children[0].children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\n                f.className = \"col-6 col-md-3 col-lg-2 form-group d-none \"\n                console.log(f.className)\n            }\n            else {\n                f.className = \"col-6 col-md-3 col-lg-2 form-group d-block \"\n            }\n        });\n    }\n    handleChangeCliente(e) {\n        var forEach = Array.prototype.forEach;\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\n        forEach.call(arrayClientes, function (f) {\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\n                f.parentNode.style.display = \"none\";\n            else\n                f.parentNode.style.display = \"block\";\n        });\n    }\n    modificarTotal(total) {\n        console.log(total)\n        this.setState({ total: total })\n    }\n    alertNuevoCliente = () =>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Agregar Nuevo Proveedor</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoCliente' placeholder=\"Nombre del Cliente\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.nuevoCliente()\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n          });\n    }\n    alertElegirProducto = (nombre) =>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>{nombre}</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"number\" class=\"form-control\" id='cantidadProducto' placeholder=\"Cantidad\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input type=\"number\" class=\"form-control\" id='precioProducto' placeholder=\"Precio\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            const cantidadPlus = document.getElementById('cantidadProducto').value\n                                            const precio = document.getElementById('precioProducto').value\n                                                if (cantidadPlus) {\n                                                    this.agregarArticulo(nombre,cantidadPlus,precio, \"productos\")\n                                                    if (precio) {\n                                                        let sumaPrecios\n                                                        if (this.state.total) {\n                                                            sumaPrecios = this.state.total\n                                                        }\n                                                        else {\n                                                            sumaPrecios = 0\n                                                        }\n                                                        sumaPrecios += parseInt(precio * cantidadPlus)\n                                                        this.setState({\n                                                            total: sumaPrecios\n                                                        })\n                                                    }\n                                                }\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            );\n            }\n        });\n    }\n    nuevoCliente = async () =>{\n        const nombre = document.getElementById(\"nombreNuevoCliente\").value\n        if(nombre){\n            this.seleccionarDestinatario(nombre)\n            firebase.database().ref().child(this.props.user.uid).child('proveedores').update({\n                [nombre]:{\n                    datos:{\n                        nombre:nombre,\n                        deuda:0\n                    }\n                }\n            })\n        }\n    }\n    alertResumen = ()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <ResumenPedido\n                                cliente={this.state.nuevoCliente}\n                                pedido={this.state.pedido}\n                                enviarPedido={e => {\n                                    this.alertEnviarPedido()\n                                }}\n                                modificarTotal={total => {\n                                    this.modificarTotal(total)\n                                }}\n                                total={this.state.total}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n            }\n        });\n    }\n    alertAgregarProducto=()=>{\n        confirmAlert({\n            customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <div className=\"container alert\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h1>Agregar Nuevo Producto</h1>\n                            </div>\n                        </div>\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group\">\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col form-group text-center\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-success'\n                                        onClick={() => {\n                                            this.agregarProducto()\n                                            onClose();\n                                        }}\n                                    >\n                                        Agregar\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button\n                                        className='btn btn-outline-dark'\n                                        onClick={() => {\n                                            onClose();\n                                        }}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              );\n            }\n        });\n    }\n    agregarProducto = async () =>{\n        const nombre = document.getElementById('nombreNuevoProducto').value\n        const precio = document.getElementById('precioNuevoProducto').value\n        if(nombre){\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\n                {\n                    [nombre]:{\n                        nombre:nombre,\n                        cantidad:0,\n                        precio:precio\n                    }\n                }\n            )\n        }\n    }\n    render() {\n        try {\n            let user = this.props.user.email\n            if (user) {\n                if (!this.state.nuevoCliente) {\n                    return (\n                        <div className=\"nuevo-cliente \">\n                            <div className=\"container-fluid mt-4\">\n                                <div className=\"row\">\n                                    <div className=\"col-6 offset-3\">\n                                        <form>\n                                            <div className=\"formRow\">\n                                                <div className=\"form-group col-12 text-center\">\n                                                    <input type=\"text\" className=\"form-control\" onChange={\n                                                        e => {\n                                                            this.handleChangeCliente(e)\n                                                        }\n                                                    } placeholder=\"Buscar Proveedor\" />\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div className=\"col\">\n                                        <button type='button' className='btn btn-outline-light' onClick={this.alertNuevoCliente}>\n                                            Nuevo Proveedor\n                                        </button>\n                                    </div>\n                                </div>\n                                {this.props.proveedores?\n                                <div className=\"row\">\n                                    {Object.values(this.props.proveedores).map(cliente => (\n                                        <div className=\"col-12 text-center form-group\">\n                                            <button type=\"button\" className=\"btn btn-primary btn-cliente\" onClick={() => {\n                                                console.log(cliente.datos.nombre)\n                                                this.seleccionarDestinatario(cliente.datos.nombre)\n                                            }}>\n                                                {cliente.datos.nombre}\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                                :\n                                <div className=\"row\">\n                                    <div className=\"col-12 text-center\">\n                                        <h1 className='text-white'>Aun no hay Proveedores!</h1>\n                                    </div>\n                                </div>\n                                }\n                            </div>\n                        </div>\n                    )\n                }\n                else {\n                    return (\n                        <div>\n                            <div className=\"productList\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 text-center\">\n                                            <h1 className=\"name\">Elegir Productos</h1>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-6 offset-3\">\n                                            <form>\n                                                <div className=\"formRow\">\n                                                    <div className=\"form-group col-12 text-center\">\n                                                        <input type=\"text\" className=\"form-control\" onChange={\n                                                            e => {\n                                                                this.handleChangeProducto(e)\n                                                            }\n                                                        } placeholder=\"Buscar Producto\" />\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div className=\"col\">\n                                            <button type='button' className='btn btn-success' onClick={this.alertResumen}>\n                                                Finalizar Recibo\n                                            </button>\n                                        </div>\n                                        <div className=\"col text-center\">\n                                            <button type='button' className='btn btn-outline-success' onClick={this.alertAgregarProducto}>\n                                                Nuevo Producto\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"row productList align-items-center\">\n                                        {this.props.productos?\n                                            Object.values(this.props.productos).map(producto => ( \n                                                <div className=\"col-6 col-md-3 col-lg-2 form-group\" key={producto.nombre}>\n                                                    <ProductElection \n                                                        handleClick={e => {\n                                                            this.alertElegirProducto(producto.nombre, producto.precio)\n                                                        }}\n                                                        nombre={producto.nombre} \n                                                        precio={producto.precio} \n                                                    />\n                                                </div>\n                                            ))\n                                        :\n                                        <div className=\"col-12 text-center\">\n                                            <h1 className='text-white'> Aun No Hay Productos!</h1>\n                                        </div>\n                                        }\n                                    </div>\n                                    {this.state.redirect ?\n                                        <Redirect to=\"productos\" />\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            }\n        }\n        catch (error) {\n            return (\n                <Login redirect=\"NuevoRecibo\" />\n            )\n        }\n    }\n}\nconst mapStateToProps = state => ({\n    user: state.user,\n    productos: state.productos,\n    proveedores:state.proveedores\n})\nconst mapDispatchToProps={\n    changeProveedor\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoRecibo)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass FormNuevoCheque extends Component {\r\n    state = {\r\n        entrada: null,\r\n        cliente: null,\r\n        banco: null,\r\n        numero: null,\r\n        fecha: null,\r\n        monto: null\r\n    }\r\n\r\n    async submitForm() {\r\n        const date = new Date()\r\n        let cheque = {\r\n            Banco: this.state.banco,\r\n            Cliente: this.state.cliente,\r\n            [\"Fecha Del Cheque\"]: this.state.fecha,\r\n            [\"Fecha Del Dia\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n            Monto: this.state.monto,\r\n            Numero: this.state.numero,\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"cheques\").push(cheque)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cheque?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 offset-3\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Cliente</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.cliente} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            cliente: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label for=\"inputZip\">Banco</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.banco} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            banco: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Numero De Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.numero} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            numero: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Fecha Del Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.fecha} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            fecha: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Monto</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.monto} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            monto: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cheque</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/Cheques\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FormNuevoCheque)","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCheque from \"../components/FormNuevoCheque\"\r\nimport { connect } from \"react-redux\"\r\nclass NuevoCheque extends Component {\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <FormNuevoCheque />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"NuevoCheque\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(NuevoCheque)","import React, { Component, Fragment } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport withFirebaseAuth from \"react-with-firebase-auth\"\nimport SpinnerLoading from \"../components/SpinnerLoading\"\nimport * as firebase from \"firebase/app\"\nimport Logo from \"../images/logo.png\"\nimport \"./styles/Login.css\"\nimport {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n} from \"../actions/index\"\nimport { connect } from \"react-redux\"\n\nclass Registro extends Component {\n    state = {\n        registro:false,\n        nombre:{\n            valor:undefined,\n            isValid:undefined\n        },\n        mail:{\n            valor:undefined,\n            isValid:true\n        },\n        password:{\n            valor:undefined,\n            isValid:undefined\n        }\n    }\n    async registrar() {\n        if(this.state.nombre.valor && this.state.mail.valor && this.state.password.valor){\n            this.props.isLoading(true)\n            await firebase.auth().createUserWithEmailAndPassword(this.state.mail.valor, this.state.password.valor).then(async result => {\n                result.user.updateProfile({\n                    displayName:this.state.nombre.valor\n                })\n                await firebase.auth().signInWithEmailAndPassword(this.state.mail.valor, this.state.password.valor).then(()=>{\n                    this.props.changeRegistro(false)\n                })\n                alert('Bienvenido')\n                this.props.isLoading(false)\n            })\n            .catch(error => {\n                this.setState({\n                    mail:{\n                        isValid:false\n                    }\n                })\n            })\n        }\n        else{\n            alert('competar formulario')\n        }\n    }\n    updateMail(data) {\n        this.setState(\n            {\n                mail:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updatePass(data) {\n        this.setState(\n            {\n                password:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updateNombre(data) {\n        this.setState(\n            {\n                nombre:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n        if(!data){\n            this.setState({\n                nombre:{\n                    isValid:false\n                }\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.props.user ?\n                    <Redirect to={\"/\"} />\n                    :\n                    <div className=\"container-fluid login\">\n                        {this.state.loading ?\n                            <div className=\"row\">\n                                {this.state.loading ? <SpinnerLoading /> : null}\n                            </div>\n                            :\n                            <Fragment>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 text-center\">\n                                        <img height=\"125px\" src={Logo} />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\n                                        <form className='needs-validation' noValidate>\n                                            <div className=\"form-row\">\n                                                <div className=\"col-12 form-group\">\n                                                    <label>Nombre Completo</label>\n                                                    <input \n                                                        required \n                                                        autoFocus \n                                                        type=\"text\" \n                                                        className={this.state.nombre.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputNombre\"\n                                                        onChange={e => {\n                                                            this.updateNombre(e.target.value)\n                                                        }} \n                                                        placeholder=\"Nombre Completo\" \n                                                    />\n                                                    <div className=\"valid-feedback\">\n                                                        Looks good!\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">\n                                                        Ingresa un Nombre de Usuario\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Email</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.mail.valor} \n                                                        type=\"email\" \n                                                        onChange={e => {\n                                                            this.updateMail(e.target.value)\n                                                        }} \n                                                        className={this.state.mail.isValid ? \"form-control\" : \"form-control is-invalid\"}\n                                                        id=\"inputEmail\" \n                                                        placeholder=\"Email\" \n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        El Correo Electronico ya esta registrado\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Password</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.password.valor} \n                                                        type=\"password\" \n                                                        onChange={e => {\n                                                            this.updatePass(e.target.value)\n                                                        }} \n                                                        className={this.state.password.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputPassword\" \n                                                        placeholder=\"Password\" \n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12 text-center\">\n                                                    <Link to=\"/Productos\">\n                                                        <button \n                                                            type=\"submit\" \n                                                            onClick={e => {\n                                                                e.preventDefault()\n                                                                this.registrar()\n                                                            }} \n                                                            className=\"btn btn-success\">Registrarse Ahora!\n                                                        </button>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </Fragment>\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        loading: state.loading,\n    }\n}\nconst mapDispatchToProps = {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Registro)","import React, { Component, Fragment } from \"react\"\r\nimport {Redirect} from 'react-router-dom'\r\nimport NavBar from \"./NavBar\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport Registro from \"../components/Registro\"\r\nimport {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getDeudas,\r\n    getCheques,\r\n    getDocumentos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nclass Layout extends Component {\r\n    \r\n    logOut = async () => {\r\n        await firebase.auth().signOut()\r\n        window.location.reload()\r\n    }\r\n    async fetchData(id) {\r\n        this.props.isLoading(true)\r\n        const productosRef = await firebase.database().ref().child(id).child('productos')\r\n        productosRef.on(\"value\", snapshot => {\r\n            this.props.getProductos(snapshot.val())\r\n        })\r\n        const pedidosRef = await firebase.database().ref().child(id).child('pedidos')\r\n        pedidosRef.on(\"value\", snapshot => {\r\n            this.props.getPedidos(snapshot.val())\r\n        })\r\n        const clientesRef = await firebase.database().ref().child(id).child('clientes')\r\n        clientesRef.on(\"value\", snapshot => {\r\n            this.props.getClientes(snapshot.val())\r\n        })\r\n        const proveedoresRef = await firebase.database().ref().child(id).child('proveedores')\r\n        proveedoresRef.on(\"value\", snapshot => {\r\n            this.props.getProveedores(snapshot.val())\r\n        })\r\n        const deudasRef = await firebase.database().ref().child(id).child('deudas')\r\n        deudasRef.on(\"value\", snapshot => {\r\n            this.props.getDeudas(snapshot.val())\r\n        })\r\n        const chequesRef = await firebase.database().ref().child(id).child('cheques')\r\n        chequesRef.on(\"value\", snapshot => {\r\n            this.props.getCheques(snapshot.val())\r\n            this.props.isLoading(false)\r\n        })\r\n    }\r\n    async authListener() {\r\n        firebase.auth().onAuthStateChanged(async user=>{\r\n            if (user) {\r\n                await this.fetchData(user.uid)\r\n                this.props.changeUser(user)\r\n            }\r\n            this.props.recuperandoUsuario(false)\r\n        })\r\n    }\r\n    async componentDidMount() {\r\n        await this.authListener()\r\n    }\r\n    render() {\r\n        console.log(this.props.user)\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.recuperarUsuario ?\r\n                        <>\r\n                            <SpinnerLoading title=\"Recuperando Usuario...\" />\r\n                        </>\r\n                        :\r\n                        <div className=\"app\">\r\n                            {!this.props.user ?\r\n                                (this.props.registro?\r\n                                <Registro/>\r\n                                :\r\n                                <Login />\r\n                                )\r\n                                :\r\n                                <>\r\n                                    {this.props.loading ?\r\n                                        <SpinnerLoading title=\"Recuperando Informacion...\" />\r\n                                        :\r\n                                        <>\r\n                                            <NavBar user={this.props.user} handleClick={this.logOut} />\r\n                                            {this.props.children}\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading,\r\n    user: state.user,\r\n    registro:state.registro,\r\n    recuperarUsuario:state.recuperarUsuario,\r\n    documentos: state.documentos\r\n})\r\nconst mapDispatchToProps = {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getDeudas,\r\n    getCheques,\r\n    getDocumentos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)","import React ,{Component}from 'react';\nimport { Switch, Route, HashRouter } from \"react-router-dom\"\nimport './App.css';\nimport ProductList from \"./Pages/ProductList\"\nimport PedidosList from \"./Pages/PedidosList\"\nimport MecanizadosList from \"./Pages/MecanizadosList\"\nimport NoMecanizadosList from \"./Pages/NoMecanizadosList\"\nimport SurtidoresList from \"./Pages/SurtidoresList\"\nimport ProovedoresList from \"./Pages/ProovedoresList\"\nimport ClientesList from \"./Pages/ClientesList\"\nimport ExpresosList from \"./Pages/ExpresosList\"\nimport Deudas from \"./Pages/Deudas\"\nimport ListasDePrecios from \"./Pages/ListasDePrecios\"\nimport NuevoPedido from \"./Pages/NuevoPedido\"\nimport ChequesList from \"./Pages/ChequesList\"\nimport NuevoCliente from \"./Pages/NuevoCliente\"\nimport NuevoRecibo from \"./Pages/NuevoRecibo\"\nimport NuevoCheque from \"./Pages/NuevoCheque\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Login from './components/Login';\nimport Registro from './components/Registro';\nimport Layout from \"./components/Layout\"\nimport * as firebase from 'firebase'\n\n\nfunction App(){\n    var firebaseConfig = {\n        apiKey: \"AIzaSyCymMsjhvVdAbbOZydlSZDWQ1MfpZckj2A\",\n        authDomain: \"control-de-stock-4a3ca.firebaseapp.com\",\n        databaseURL: \"https://control-de-stock-4a3ca.firebaseio.com\",\n        projectId: \"control-de-stock-4a3ca\",\n        storageBucket: \"control-de-stock-4a3ca.appspot.com\",\n        messagingSenderId: \"602181217176\",\n        appId: \"1:602181217176:web:a8cc162c05c7fdfcbc19ed\"\n      };\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n    }\n\n    return (\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/Registro\" component={Registro} />\n            <Route exact path=\"/productos\" component={ProductList} />\n            <Route exact path=\"/Pedidos\" component={PedidosList} />\n            <Route exact path=\"/Mecanizados\" component={MecanizadosList} />\n            <Route exact path=\"/No-Mecanizados\" component={NoMecanizadosList} />\n            <Route exact path=\"/Surtidores\" component={SurtidoresList} />\n            <Route exact path=\"/Clientes\" component={ClientesList} />\n            <Route exact path=\"/Proveedores\" component={ProovedoresList} />\n            <Route exact path=\"/Expresos\" component={ExpresosList} />\n            <Route exact path=\"/Deudas\" component={Deudas} />\n            <Route exact path=\"/ListasDePrecios\" component={ListasDePrecios} />\n            <Route exact path=\"/NuevaVenta\" component={NuevoPedido} />\n            <Route exact path=\"/NuevoRecibo\" component={NuevoRecibo} />\n            <Route exact path=\"/NuevoCliente\" component={NuevoCliente} />\n            <Route exact path=\"/Cheques\" component={ChequesList} />\n            <Route exact path=\"/NuevoCheque\" component={NuevoCheque} />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"GET_DATA\":\r\n            switch (action.section) {\r\n                case 'productos':\r\n                    return {\r\n                        ...state,\r\n                        productos: action.payload\r\n                    }\r\n                    break;\r\n                case 'pedidos':\r\n                    return {\r\n                        ...state,\r\n                        pedidos: action.payload\r\n                    }\r\n                    break;\r\n                case 'clientes':\r\n                    return {\r\n                        ...state,\r\n                        clientes: action.payload\r\n                    }\r\n                    break;\r\n                case 'proveedores':\r\n                    return {\r\n                        ...state,\r\n                        proveedores: action.payload\r\n                    }\r\n                    break;\r\n                case 'deudas':\r\n                    return {\r\n                        ...state,\r\n                        deudas: action.payload\r\n                    }\r\n                    break;\r\n                case 'cheques':\r\n                    return {\r\n                        ...state,\r\n                        cheques: action.payload\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case \"GET_DOCUMENTOS\":\r\n            return {\r\n                ...state,\r\n                documentos: action.payload\r\n            }\r\n            break;\r\n        case \"RECUPERANDO_USUARIO\":\r\n            return {\r\n                ...state,\r\n                recuperarUsuario: action.payload\r\n            }\r\n            break;\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_USER\":\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_REGISTRO\":\r\n            return {\r\n                ...state,\r\n                registro: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_CLIENTE\":\r\n            return {\r\n                ...state,\r\n                cliente: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_PROVEEDOR\":\r\n            return {\r\n                ...state,\r\n                proveedor: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_EXPRESO\":\r\n            return {\r\n                ...state,\r\n                expreso: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { createStore } from 'redux'\nimport { Provider } from \"react-redux\"\nimport reducer from \"./reducers\"\n\nlet initialState = {\n    registro:false,\n    loading: true,\n    error: null,\n    recuperarUsuario: true,\n    data:{\n        productos:{\n        },\n    }\n}\nconst store = createStore(reducer, initialState)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cf936f02.png\";"],"sourceRoot":""}