{"version":3,"sources":["components/SpinnerLoading.js","actions/index.js","components/Login.js","components/Product.js","Pages/ProductList.js","components/PedidoItem.js","components/BotoneraPedido.js","components/Pedido.js","Pages/PedidosList.js","Pages/MecanizadosList.js","Pages/NoMecanizadosList.js","Pages/SurtidoresList.js","components/NavBar.js","components/Item.js","components/Ficha.js","components/PedidoCliente.js","components/PedidoProovedor.js","components/FichaPedidos.js","components/FichaProovedor.js","Pages/ProovedoresList.js","components/FichaCliente.js","Pages/ClientesList.js","Pages/ExpresosList.js","components/BotoneraDeuda.js","components/Deuda.js","Pages/Deudas.js","Pages/ListasDePrecios.js","components/ProductElection.js","components/BotoneraNuevoPedido.js","components/ResumenPedido.js","Pages/NuevoPedido.js","components/Cheque.js","Pages/ChequesList.js","components/FormNuevoCliente.js","Pages/NuevoCliente.js","components/FormNuevoCheque.js","Pages/NuevoCheque.js","components/Registro.js","components/Layout.js","App.js","serviceWorker.js","reducers/index.js","index.js","images/logo.png","images/projectManagement.jpg"],"names":["SpinnerLoading","className","role","this","props","title","Component","changeUser","payload","type","changeRegistro","changeCliente","isLoading","recuperandoUsuario","Login","state","mail","undefined","password","firebase","signInWithEmailAndPassword","then","success","catch","error","alert","data","setState","user","to","loading","height","src","Logo","value","onChange","e","updateMail","target","id","placeholder","updatePass","onClick","preventDefault","logIn","mapDispatchToProps","connect","Product","cambiarPrecio","a","nuevoPrecio","prompt","ref","child","uid","seccion","nombre","update","precio","parseFloat","eliminarProducto","confirmAlert","buttons","label","remove","cantidad","nuevaCantidad","parseInt","sumarArticulo","cantidadActual","console","log","icon","faTrash","sumar","ProductList","alertAgregarProducto","customUI","onClose","faPlus","autoFocus","agregarProducto","document","getElementById","alertGuia","faFrownOpen","forEach","Array","prototype","arrayProductos","getElementsByClassName","call","f","children","innerHTML","toLowerCase","search","productos","email","handleChange","Object","values","map","producto","key","redirect","PedidoItem","BotoneraPedido","faCheck","enviarPedido","faTimes","eliminarPedido","Pedido","pedido","articulo","restarProducto","pathname","cliente","keys","articulos","descontarPedido","PedidosList","productosRef","date","Date","getDate","getMonth","getFullYear","push","fecha","pedidos","projectManagement","alt","MecanizadosList","products","imagen","images","NoMecanizadosList","noMecanizados","mecanizados","SurtidoresList","getele","surtidores","NavBar","handleClick","Navbar","collapseOnSelect","bg","expand","variant","sticky","Brand","logo","Toggle","aria-controls","Collapse","Nav","Link","displayName","confirmLogOut","Item","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","infoExtra","nuevaDeuda","deudaRef","deuda","propiedad","nuevaInfo","array","newArr","newInfo","infoDelete","splice","indexOf","name","edit","eliminarInfoArray","editarCliente","class","agregarInfoArray","editarInfo","modificarDeuda","Ficha","info","agregarNuevaInfo","item","PedidoCliente","PedidoProovedor","Fichapedido","pedidosAux","reverse","FichaProovedor","eliminarCliente","proovedor","datos","agregarArticulo","pedidosRef","getDay","accion","arr","arrayInfo","faArrowLeft","agregarInfoExtra","faEdit","seLLevo","trajo","FichaPedidos","ProovedoresList","returnBack","changeProveedor","alertNuevoProveedor","nuevoProveedor","arrayClientes","parentNode","style","display","proveedor","proveedores","FichaCliente","signOut","ClientesList","clientes","ExpresosList","changeExpreso","expreso","expresos","BotoneraDeuda","deudaVieja","adicion","quita","sumarDeuda","pedirCantidad","restarDeuda","faMinus","Deuda","Deudas","arrayDeudas","deudas","updateDeuda","ListasDePrecios","file","put","documentos","fetchData","documento","delete","subirDocumento","files","for","url","borrarDocumento","slice","window","open","BotoneraNuevoPedido","porcentaje","restar","nuevoTotal","Math","floor","total","modificarTotal","cancelarPedido","ResumenPedido","NuevoPedido","nuevoCliente","alertNuevoCliente","alertElegirProducto","sumaPrecios","cantidadPlus","seleccionarDestinatario","handleChangeProducto","ProductElection","alertEnviarPedido","handleChangeCliente","Cheque","llave","enviadoA","cheque","enviarCheque","ChequesList","filtro","logOut","location","reload","arrayCheques","$filtro","arrayButton","actualizarBotones","cheques","FormNuevoCliente","direccionPrincipal","direccionSecundaria","ciudad","codigoPostal","CUIT","DNI","telefono1","telefono2","telefono3","telefono4","direccion","0","1","telefono","2","3","submitForm","onSubmit","confirm","when","message","NuevoCliente","onAuthStateChanged","authListener","FormNuevoCheque","entrada","banco","numero","monto","Banco","Cliente","NuevoCheque","Registro","registro","valor","isValid","createUserWithEmailAndPassword","result","updateProfile","noValidate","required","updateNombre","registrar","Layout","on","snapshot","getProductos","val","getPedidos","getClientes","getProveedores","getDeudas","getCheques","recuperarUsuario","section","getDocumentos","App","exact","path","component","Boolean","hostname","match","reducer","action","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.90958e1f.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"./styles/SpinnerLoading.css\"\r\n\r\nclass SpinnerLoading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <div className=\"spinner-border text-light\" role=\"status\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h3 className=\"text-white text-center mt-4\">{this.props.title}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SpinnerLoading","export const getProductos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'productos',\r\n        payload\r\n    }\r\n}\r\nexport const getPedidos = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'pedidos',\r\n        payload\r\n    }\r\n}\r\nexport const getClientes = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'clientes',\r\n        payload\r\n    }\r\n}\r\nexport const getProveedores = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'proveedores',\r\n        payload\r\n    }\r\n}\r\nexport const getDeudas = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'deudas',\r\n        payload\r\n    }\r\n}\r\nexport const getCheques = payload => {\r\n    return {\r\n        type: \"GET_DATA\",\r\n        section:'cheques',\r\n        payload\r\n    }\r\n}\r\nexport const getDocumentos = payload => {\r\n    return {\r\n        type: \"GET_DOCUMENTOS\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeUser = payload => {\r\n    return {\r\n        type: \"CHANGE_USER\",\r\n        payload\r\n    }\r\n}\r\nexport const changeRegistro = payload => {\r\n    return {\r\n        type: \"CHANGE_REGISTRO\",\r\n        payload\r\n    }\r\n}\r\nexport const changeCliente = payload => {\r\n    return {\r\n        type: \"CHANGE_CLIENTE\",\r\n        payload\r\n    }\r\n}\r\nexport const changeProveedor = payload => {\r\n    return {\r\n        type: \"CHANGE_PROVEEDOR\",\r\n        payload\r\n    }\r\n}\r\nexport const changeExpreso = payload => {\r\n    return {\r\n        type: \"CHANGE_EXPRESO\",\r\n        payload\r\n    }\r\n}\r\nexport const isLoading = payload => {\r\n    return {\r\n        type: \"IS_LOADING\",\r\n        payload\r\n    }\r\n}\r\nexport const recuperandoUsuario = payload => {\r\n    return {\r\n        type: \"RECUPERANDO_USUARIO\",\r\n        payload\r\n    }\r\n}","import React, { Component, Fragment } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport withFirebaseAuth from \"react-with-firebase-auth\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase/app\"\r\nimport Logo from \"../images/logo.png\"\r\nimport \"./styles/Login.css\"\r\nimport {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        mail: undefined,\r\n        password: undefined\r\n    }\r\n    async logIn() {\r\n        this.props.isLoading(true)\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.mail, this.state.password).then(success => {\r\n            this.props.isLoading(false)\r\n        })\r\n            .catch(error => {\r\n                alert(\"El usuario o la contraseña son incorrectas\")\r\n                this.props.isLoading(false)\r\n            })\r\n\r\n    }\r\n    updateMail(data) {\r\n        this.setState(\r\n            {\r\n                mail: data\r\n            }\r\n        )\r\n    }\r\n    updatePass(data) {\r\n        this.setState(\r\n            {\r\n                password: data\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.user ?\r\n                    <Redirect to={\"/productos\"} />\r\n                    :\r\n                    <div className=\"container-fluid login\">\r\n                        {this.state.loading ?\r\n                            <div className=\"row\">\r\n                                {this.state.loading ? <SpinnerLoading /> : null}\r\n                            </div>\r\n                            :\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 text-center\">\r\n                                        <img height=\"125px\" src={Logo} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n                                        <form>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Email</label>\r\n                                                    <input value={this.state.mail} type=\"email\" onChange={e => {\r\n                                                        this.updateMail(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-12\">\r\n                                                    <label>Password</label>\r\n                                                    <input value={this.state.password} type=\"password\" onChange={e => {\r\n                                                        this.updatePass(e.target.value)\r\n                                                    }} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Productos\">\r\n                                                        <button type=\"submit\" onClick={e => {\r\n                                                            e.preventDefault()\r\n                                                            this.logIn()\r\n                                                        }} className=\"btn btn-success\">Ingresar Ahora!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"form-group col text-center\">\r\n                                                    <Link to=\"/Registro\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={()=>{\r\n                                                            this.props.changeRegistro(true)\r\n                                                        }}>Crear Una Cuenta!</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        loading: state.loading,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    changeUser,\r\n    changeRegistro,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Product extends Component {\r\n    async sumar(nombre, cantidad) {\r\n        const nuevaCantidad = parseInt(prompt(\"Ingresar cantidad a sumar\"))\r\n        await this.sumarArticulo(nombre, cantidad, nuevaCantidad, this.props.seccion)\r\n    }\r\n    async sumarArticulo(nombre, cantidadActual, nuevaCantidad, seccion) {\r\n        await firebase.database().ref().child(this.props.user.uid).child(seccion).child(nombre).update({\r\n            cantidad: (cantidadActual + nuevaCantidad)\r\n        })\r\n    }\r\n    async descontarArticulo(nombre, cantidadActual, nuevaCantidad, seccion) {\r\n        console.log(cantidadActual)\r\n        await firebase.database().ref().child(this.props.user.uid).child(seccion).child(nombre).update({\r\n            cantidad: (cantidadActual - nuevaCantidad)\r\n        })\r\n    }\r\n    cambiarPrecio = async () =>{\r\n        const nuevoPrecio = prompt(\"Ingresar el nuevo precio del producto\")\r\n        if(nuevoPrecio){\r\n            await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).update({\r\n                precio: parseFloat(nuevoPrecio)\r\n            })\r\n        }\r\n    }\r\n    eliminarProducto = async () =>{\r\n        confirmAlert({\r\n            title: 'Eliminar Producto?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.nombre).remove()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.user.uid)\r\n        return (\r\n            <div className=\"container product bg-dark\">\r\n                <div className=\"row\">\r\n                    <div className=\"col bodyProduct\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 mt-2 text-center\">\r\n                                    <h5 className=\"colorWhite\">{this.props.nombre}</h5>\r\n                                    <FontAwesomeIcon className=\"deleteIcon\" icon={faTrash} onClick={this.eliminarProducto} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Cantidad</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">{this.props.cantidad}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 text-left\">\r\n                                            <h5 className=\"colorWhite\">Precio</h5>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h5><span className=\"badge badge-light\">$ {this.props.precio}</span></h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={async () => {\r\n                            await this.sumar(\r\n                                this.props.nombre,\r\n                                this.props.cantidad\r\n                            )\r\n                        }}>\r\n                            Agregar Cantidad!\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-light btnProduct\" onClick={this.cambiarPrecio}>\r\n                            Modificar Precio!\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Product)","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFrownOpen,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport \"./Styles/ProductList.css\"\r\n\r\nclass ProductList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-3 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-none align-items-center\"\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n\r\n    alertAgregarProducto=()=>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    agregarProducto = async () =>{\r\n        const nombre = document.getElementById('nombreNuevoProducto').value\r\n        const precio = document.getElementById('precioNuevoProducto').value\r\n        if(nombre){\r\n            await firebase.database().ref().child(this.props.user.uid).child('productos').update(\r\n                {\r\n                    [nombre]:{\r\n                        nombre:nombre,\r\n                        cantidad:0,\r\n                        precio:precio\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    alertGuia = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon questionIcon\" icon={faFrownOpen}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>No hay productos</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p> Ingrese el nombre y precio de un producto para poder comenzar a utilizar el Control De Stock\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" className=\"form-control\" id='nombreNuevoProducto' placeholder=\"Nombre del Producto\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id='precioNuevoProducto' placeholder=\"Precio\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.agregarProducto()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.productos)\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                {!this.props.productos?\r\n                                <>\r\n                                    {this.alertGuia()}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                            <h1 className='text-white'>Aun no hay ningun producto!</h1>\r\n                                        </div>\r\n                                        <div className=\"form-group col-12 text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertAgregarProducto}>\r\n                                            Agregar nuevo Producto!\r\n                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"row align-middle\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success btnProduct\" onClick={this.alertAgregarProducto}>\r\n                                                Agregar nuevo Producto!\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.values(this.props.productos).map(producto => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                                {console.log(producto)}\r\n                                                <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} seccion=\"productos\" />\r\n                                            </div>\r\n                                        ))\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        productos: state.productos,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(ProductList)","import React, { Component, Fragment } from \"react\"\r\n\r\nclass PedidoItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 text-left\">\r\n                        <h5>{this.props.nombre}</h5>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <h5>{this.props.cantidad}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoItem","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraPedido extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\"><FontAwesomeIcon icon={faCheck} onClick={this.props.enviarPedido} /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <span className=\"badge badge-light\">\r\n                        <h4>$ {this.props.precio}</h4>\r\n                    </span>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\"><FontAwesomeIcon icon={faTimes} onClick={this.props.eliminarPedido} /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraPedido","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PedidoItem from \"./PedidoItem\"\r\nimport BotoneraPedido from \"./BotoneraPedido\"\r\nimport \"./styles/Pedido.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nimport {changeCliente} from '../actions/index'\r\nclass Pedido extends Component {\r\n    state = {\r\n        pedido: [],\r\n\r\n    }\r\n    async restarProducto(producto, nuevaCantidad) {\r\n        console.log(producto, nuevaCantidad)\r\n        const productoRef = await firebase.database().ref().child(this.props.user.uid).child('productos').child(producto)\r\n        productoRef.update(\r\n            {\r\n                cantidad: nuevaCantidad\r\n            }\r\n        )\r\n\r\n    }\r\n    async descontarPedido(pedido) {\r\n        Object.values(pedido).map(async articulo => {\r\n            this.restarProducto(articulo.nombre, this.props.productos[articulo.nombre].cantidad - parseInt(articulo.cantidad))\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"pedido bg-dark p-4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4 onClick={\r\n                                    this.props.changeCliente(this.props.cliente)\r\n                                }><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {Object.keys(this.props.pedido.articulos).map(articulo => (\r\n                                <PedidoItem nombre={this.props.pedido.articulos[articulo].nombre} cantidad={this.props.pedido.articulos[articulo].cantidad} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <BotoneraPedido\r\n                        precio={this.props.pedido.precio}\r\n                        enviarPedido={async e => {\r\n                            confirmAlert({\r\n                                title: 'Enviar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Enviar',\r\n                                        onClick: async () => {\r\n                                            await this.descontarPedido(this.props.pedido.articulos)\r\n                                            this.props.enviarPedido(this.props.id, this.props.pedido)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n\r\n                        }}\r\n                        eliminarPedido={e => {\r\n                            confirmAlert({\r\n                                title: 'Eliminar Pedido?',\r\n                                buttons: [\r\n                                    {\r\n                                        label: 'Eliminar',\r\n                                        onClick: async () => {\r\n                                            this.props.eliminarPedido(this.props.id)\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        label: 'Cancelar'\r\n                                    }\r\n                                ]\r\n                            });\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    productos:state.productos\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Pedido)","import React, { Component } from \"react\"\r\nimport Pedido from \"../components/Pedido\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport \"./Styles/PedidosList.css\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport projectManagement from \"../images/projectManagement.jpg\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass PedidosList extends Component {\r\n\r\n    async enviarPedido(key, pedido,uid) {\r\n        const productosRef = await firebase.database().ref().child(uid).child('clientes').child(pedido.cliente)\r\n        if (productosRef.child(\"pedidos\")) {\r\n            let id = 0;\r\n            const date = new Date()\r\n            console.log(`${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`)\r\n            productosRef.child(\"pedidos\").push({\r\n                fecha: `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`,\r\n                articulos: pedido.articulos\r\n            })\r\n            this.eliminarPedido(key)\r\n        }\r\n    }\r\n    async eliminarPedido(key) {\r\n        await firebase.database().ref().child(this.props.user.uid).child('pedidos').child(key).remove()\r\n    }\r\n    render() {\r\n        console.log(this.props.user.uid)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.pedidos) {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.pedidos).map(key => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\">\r\n                                                <Pedido id={key} pedido={this.props.pedidos[key]} cliente={this.props.pedidos[key].cliente} enviarPedido={(key,pedido)=>{\r\n                                                    this.enviarPedido(key,pedido,this.props.user.uid)\r\n                                                }} eliminarPedido={this.eliminarPedido} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 form-group text-center\">\r\n                                            <h3 className=\"shadowTitle\">Aun No Hay Ningun Pedido!</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 form-group text-center\">\r\n                                            <img src={projectManagement} alt=\"\" height=\"500 px\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"pedidos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n        pedidos: state.pedidos,\r\n        user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(PedidosList)\r\n","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\nimport \"./Styles/ProductList.css\"\r\n\r\nclass MecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {console.log(this.props.products)}\r\n                                    {Object.values(this.props.products).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"mecanizados\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(MecanizadosList)","import React, { Component } from \"react\"\r\nimport Product from \"../components/Product\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass NoMecanizadosList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.noMecanizados).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"no-mecanizados\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"productos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        products: state.data[\"productos2\"],\r\n        mecanizados: state.data[\"mecanizados2\"],\r\n        noMecanizados: state.data[\"no-mecanizados2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(NoMecanizadosList)","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport Product from \"../components/Product\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass SurtidoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var array = document.getele\r\n        var arrayProductos = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[1].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            let user\r\n            user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChange(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Producto\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.surtidores).map(producto => (\r\n                                        <div className=\"col-12 col-md-6 col-lg-3 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                            <Product nombre={producto.nombre} precio={producto.precio} cantidad={producto.cantidad} imagen={this.props.images[producto.nombre]} seccion=\"productos\" />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"surtidores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        surtidores: state.data[\"Surtidores2\"],\r\n        images: state.images,\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(SurtidoresList)","import React, { Component } from \"react\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport { Link } from \"react-router-dom\"\r\nimport logo from \"../images/logo.png\"\r\nimport \"./styles/Navbar.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass NavBar extends Component {\r\n    confirmLogOut() {\r\n        confirmAlert({\r\n            title: 'Cerrar Sesión?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cerrar',\r\n                    onClick: async () => {\r\n                        this.props.handleClick()\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.user ?\r\n                    <Navbar collapseOnSelect bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n                        <Navbar.Brand><img className=\"navbar-brand d-none d-sm-block logo\" src={logo} alt=\"logo\" /></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto ml-auto\">\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Productos\">Productos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Pedidos\">Pedidos</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Clientes\">Clientes</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Proveedores\">Proveedores</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Deudas\">Deudas</Link>\r\n                                </Nav.Link>\r\n                                <Nav.Link>\r\n                                    <Link className=\"nav-link\" to=\"/Cheques\">Cheques</Link>\r\n                                </Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                            <div className='mr-4'>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <h6 className='text-white'>{this.props.user.displayName}</h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                            this.confirmLogOut()\r\n                                        }}>Log Out</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        <Link className=\"navbar-brand p-2 btn btn-success\" to=\"/NuevoPedido\" id=\"buttonNuevoPedido\">Nuevo Pedido</Link>\r\n                    </Navbar>\r\n                    :\r\n                    null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NavBar)","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/ficha.css\"\r\nimport * as firebase from \"firebase\"\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass Item extends Component {\r\n    constructor(props) {\r\n        const firebaseConfig = {\r\n            apiKey: \"AIzaSyDPmTjxjMxN2abofP8ZczgFGeYQYSvbXHE\",\r\n            authDomain: \"stock-119e8.firebaseapp.com\",\r\n            databaseURL: \"https://stock-119e8.firebaseio.com\",\r\n            projectId: \"stock-119e8\",\r\n            storageBucket: \"stock-119e8.appspot.com\",\r\n            messagingSenderId: \"1007277754269\",\r\n            appId: \"1:1007277754269:web:d1db0def0da907b2\"\r\n        }\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        }\r\n        super(props)\r\n    }\r\n    state = {\r\n        infoExtra: undefined\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    async modificarDeuda() {\r\n        const nuevaDeuda = parseInt(prompt(\"Ingresar Nueva Deuda\"))\r\n        const deudaRef = await firebase.database().ref().child(this.props.user.uid).child('clientes').child(this.props.cliente).child(\"datos\")\r\n        await deudaRef.update({\r\n            deuda: nuevaDeuda\r\n        }\r\n        )\r\n    }\r\n    async editarInfo(propiedad) {\r\n        const nuevaInfo = prompt(\"Ingresar Nueva Informacion\")\r\n        if (nuevaInfo) {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: nuevaInfo\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").child(propiedad).remove()\r\n        }\r\n    }\r\n    async agregarInfoArray(propiedad, array) {\r\n        let newArr = array\r\n        let newInfo = prompt(\"Introducir nueva informacion\")\r\n        if (newInfo) {\r\n            newArr.push(newInfo)\r\n            await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                {\r\n                    [propiedad]: newArr\r\n                }\r\n            )\r\n        }\r\n    }\r\n    async eliminarInfoArray(propiedad, array, infoDelete) {\r\n        confirmAlert({\r\n            title: 'Eliminar Informacion?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si,eliminar',\r\n                    onClick: async () => {\r\n                        let newArr = array\r\n                        newArr.splice(newArr.indexOf(infoDelete), 1)\r\n                        await firebase.database().ref().child(this.props.seccion + \"2\").child(this.props.cliente).child(\"datos\").update(\r\n                            {\r\n                                [propiedad]: newArr\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        if (this.props.name === \"nombre\") {\r\n            return (null)\r\n        }\r\n        else {\r\n            if (this.props.name === \"telefono\" || this.props.name === \"direccion\" || this.props.name === \"infoExtra\") {\r\n                {\r\n                    return (\r\n                        (this.props.name === \"infoExtra\" ?\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-black p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4><small>Info Extra</small></h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h4>{this.props.data[key]}</h4>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (this.props.edit ?\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3 className=\"nombreItem\" onClick={e => {\r\n                                                this.agregarInfoArray(this.props.name, this.props.data).then(\r\n                                                    this.props.editarCliente()\r\n                                                )\r\n                                            }}> <small>{this.props.name}</small> </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3 className=\"dataItem\" onClick={e => {\r\n                                                        this.eliminarInfoArray(this.props.name, this.props.data, this.props.data[key]).then(\r\n                                                            this.props.editarCliente()\r\n                                                        )\r\n                                                    }}>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"container color-white p-2\">\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h3><small>{this.props.name}</small></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.keys(this.props.data).map(key => {\r\n                                            return (\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <h3>{this.props.data[key]}</h3>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n            else {\r\n                return (\r\n                    this.props.edit ?\r\n                        <div className=\"container color-white ficha p-2\">\r\n                            {this.props.name === \"deuda\" ?\r\n                                <h3><small>{this.props.name}</small></h3>\r\n                                :\r\n                                <h3 className=\"nombreItem\" onClick={e => {\r\n                                    this.editarInfo(this.props.name).then(\r\n                                        this.props.editarCliente()\r\n                                    )\r\n                                }}> <small>{this.props.name}</small> </h3>\r\n                            }\r\n                            <h3>{this.props.data}</h3>\r\n                        </div>\r\n                        :\r\n                        <div className=\"container color-white ficha  p-2\">\r\n                            <h3 className=\"\"><small>{this.props.name}</small></h3>\r\n                            {this.props.name === \"deuda\" ?\r\n                                (this.props.data === 0 ?\r\n                                    <h3 className=\"itemDeuda \" onClick={\r\n                                        e => {\r\n                                            this.modificarDeuda()\r\n                                        }\r\n                                    }>{this.props.data}</h3>\r\n                                    :\r\n                                    <h3 className=\"\">$ {this.props.data}</h3>)\r\n                                :\r\n                                <h3 className=\"\">{this.props.data}</h3>\r\n                            }\r\n                        </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Item)","import React, { Component, Fragment } from \"react\"\r\nimport Item from \"./Item\"\r\nimport \"./styles/ficha.css\"\r\nclass Ficha extends Component {\r\n    render() {\r\n        let info = Object.keys(this.props.data)\r\n        return (\r\n            <div className=\"container\">\r\n                {console.log(this.props.data)}\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 form-group name\">\r\n                        <h1>{this.props.data.nombre}</h1>\r\n                    </div>\r\n                    {this.props.edit ?\r\n                        <div className=\"col-12 form-group name\">\r\n                            <button type=\"button\" className=\"btn btn-outline-success newInfo\" onClick={this.props.agregarNuevaInfo}>Agregar Nueva Informacion</button>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                    {info.map(item => (\r\n                        (item === \"nombre\" ?\r\n                            null\r\n                            :\r\n                            (item === \"infoExtra\" ?\r\n                                <div className=\"col-12 form-group text-center d-flex align-items-center\">\r\n                                    <Item editarCliente={this.props.editarCliente} edit={this.props.edit} seccion={this.props.seccion} cliente={this.props.data.nombre} name={item} data={this.props.data[item]} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"col-12 col-md-6 form-group text-center d-flex align-items-center\">\r\n                                    <Item editarCliente={this.props.editarCliente} edit={this.props.edit} seccion={this.props.seccion} cliente={this.props.data.nombre} name={item} data={this.props.data[item]} />\r\n                                </div>\r\n                            )\r\n                        )))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Ficha\r\n\r\n","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\n\r\nclass PedidoCliente extends Component {\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container pedido bg-dark\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h3>{this.props.data.fecha}</h3>\r\n                    </div>\r\n                </div>\r\n                {this.props.data.articulos.map(articulo => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-left\">\r\n                            <h5>{articulo.nombre}</h5>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <h5>{articulo.cantidad}</h5>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoCliente","import React, { Component, Fragment } from \"react\"\r\nimport \"./styles/PedidoCliente.css\"\r\n\r\nclass PedidoProovedor extends Component {\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n            <div className=\"container pedido bg-dark\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h3>{this.props.data.fecha}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.props.data.articulos.map(articulo => (\r\n                        <Fragment>\r\n                            <div className=\"col-2\">\r\n                                <h5>{articulo.cantidad}</h5>\r\n                            </div>\r\n                            <div className=\"col-10 text-right\">\r\n                                <h5>{articulo.nombre}</h5>\r\n                            </div>\r\n                        </Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PedidoProovedor","import React, { Component } from \"react\"\r\nimport PedidoCliente from \"./PedidoCliente\"\r\nimport PedidoProovedor from \"./PedidoProovedor\"\r\n\r\n\r\nclass Fichapedido extends Component {\r\n    render() {\r\n        if (this.props.data !== undefined) {\r\n            console.log(this.props.data)\r\n            let pedidosAux = []\r\n            Object.keys(this.props.data).map(pedido => {\r\n                console.log(pedido)\r\n                pedidosAux.push(this.props.data[pedido])\r\n            })\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {pedidosAux.reverse().map(pedido => (\r\n                            <div className=\"col-12 col-md-6 col-lg-3 form-group d-flex align-items-center\">\r\n                                {this.props.seccion === \"proovedores\" ?\r\n                                    <PedidoProovedor data={pedido} />\r\n                                    :\r\n                                    <PedidoCliente data={pedido} />\r\n                                }\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Fichapedido","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport NavBar from \"./NavBar\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faEdit, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaProovedor extends Component {\r\n    state = {\r\n        edit: false\r\n    }\r\n    async seLLevo() {\r\n        this.agregarArticulo(prompt(\"Que se llevó?\"), \"Llevo\")\r\n        const pedidosRef = await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proovedor.datos.nombre).child(\"pedidos\")\r\n        const date = new Date()\r\n        pedidosRef.push({\r\n            fecha: `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`,\r\n            articulos: this.state.pedido\r\n        })\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n    async trajo() {\r\n        this.agregarArticulo(prompt(\"Que Trajo?\") + \" ($\" + prompt(\"Precio por c/u de los productos\") + \")\", \"Trajo\")\r\n        const pedidosRef = await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proovedor.datos.nombre).child(\"pedidos\")\r\n        const date = new Date()\r\n        pedidosRef.push({\r\n            fecha: `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`,\r\n            articulos: this.state.pedido\r\n        })\r\n    }\r\n    async agregarInfoExtra() {\r\n        let arrayInfo\r\n        if (this.props.proovedor.datos.infoExtra) {\r\n            arrayInfo = this.props.proovedor.datos.infoExtra\r\n        }\r\n        else {\r\n            arrayInfo = []\r\n        }\r\n        arrayInfo.push(prompt(\"Ingresar Informacion Extra\"))\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"proveedores\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\r\n            {\r\n                infoExtra: arrayInfo\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    async agregarNuevaInfo() {\r\n        const propiedad = prompt(\"Ingresar el Titulo de la Informacion ej:DNI\")\r\n        const info = prompt(\"Ingresar La informacion\")\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"proveedores\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\r\n            {\r\n                [propiedad]: info\r\n            }\r\n        )\r\n    }\r\n    editarCliente() {\r\n        if (this.state.edit) {\r\n            this.setState({\r\n                edit: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.database().ref().child(this.props.user.uid).child('proveedores').child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: `/${this.props.seccion}`\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={this.props.handleClick} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faPlus} onClick={e => {\r\n                                    this.agregarInfoExtra()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha agregarNuevaInfo={e => {\r\n                                    this.agregarNuevaInfo().then(\r\n                                        this.editarCliente()\r\n                                    )\r\n                                }} editarCliente={e => {\r\n                                    this.editarCliente()\r\n                                }} edit={this.state.edit} seccion={this.props.seccion} data={this.props.proovedor.datos} />\r\n                            </div>\r\n                        </div>\r\n                        {this.props.seccion === \"Proveedores\" ?\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-success\" onClick={e => {\r\n                                        this.seLLevo()\r\n                                    }}>Se llevo...</button>\r\n                                </div>\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-success\" onClick={e => {\r\n                                        this.trajo()\r\n                                    }}>Trajo...</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                        {this.props.seccion === \"expresos\" ?\r\n                            null\r\n                            :\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 text-center\">\r\n                                    <h2 className=\"name\">Lista de Pedidos</h2>\r\n                                </div>\r\n                                <div className=\"col-12 text-center form-group pt-2\">\r\n                                    <FichaPedidos seccion={this.props.seccion} data={this.props.proovedor.pedidos} />\r\n                                </div>\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FichaProovedor)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaProovedor from \"../components/FichaProovedor\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeProveedor } from \"../actions/index\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ProovedoresList extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    returnBack = () => {\r\n        this.props.changeProveedor(undefined)\r\n    }\r\n    alertNuevoProveedor = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Proveedor</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoProveedor' placeholder=\"Nombre del Proveedor\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoProveedor()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    nuevoProveedor = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoProveedor\").value\r\n        if(nombre){\r\n            firebase.database().ref().child(this.props.user.uid).child('proveedores').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        nombre:nombre,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.proveedor) {\r\n                    const proveedor = this.props.proveedores[this.props.proveedor]\r\n                    if (proveedor) {\r\n                        return (\r\n                            <div>\r\n                                <FichaProovedor proovedor={proveedor} seccion=\"Proveedores\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Proveedor</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Proveedor\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.alertNuevoProveedor}>\r\n                                                Agregar Nuevo Proveedor\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.proveedores?\r\n                                            Object.values(this.props.proveedores).map(proveedor => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/Proveedores/`,\r\n                                                        search: `${proveedor.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeProveedor(proveedor.datos.nombre)\r\n                                                        }}>\r\n                                                            {proveedor.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Proveedores!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Proveedores\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    proveedores: state.proveedores,\r\n    proveedor: state.proveedor\r\n})\r\nconst mapDispatchToProps = {\r\n    changeProveedor,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProovedoresList)","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Ficha from \"./Ficha\"\r\nimport FichaPedidos from \"./FichaPedidos\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrash, faPlus, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from \"firebase\"\r\nimport \"./styles/ficha.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\nclass FichaCliente extends Component {\r\n    state = {\r\n        edit: false,\r\n        redirect: false\r\n    }\r\n    constructor(props) {\r\n        const firebaseConfig = {\r\n            apiKey: \"AIzaSyDPmTjxjMxN2abofP8ZczgFGeYQYSvbXHE\",\r\n            authDomain: \"stock-119e8.firebaseapp.com\",\r\n            databaseURL: \"https://stock-119e8.firebaseio.com\",\r\n            projectId: \"stock-119e8\",\r\n            storageBucket: \"stock-119e8.appspot.com\",\r\n            messagingSenderId: \"1007277754269\",\r\n            appId: \"1:1007277754269:web:d1db0def0da907b2\"\r\n        }\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        }\r\n        super(props)\r\n    }\r\n    agregarArticulo(articulo, accion) {\r\n        const arr = []\r\n        arr.push({\r\n            nombre: articulo,\r\n            cantidad: accion\r\n        })\r\n        this.setState({\r\n            pedido: arr\r\n        })\r\n    }\r\n\r\n    eliminarCliente = () => {\r\n        confirmAlert({\r\n            title: 'Eliminar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Eliminar',\r\n                    onClick: async () => {\r\n                        console.log(this.props.seccion)\r\n                        await firebase.database().ref().child(this.props.user.uid).child(this.props.seccion).child(this.props.proovedor.datos.nombre).remove().then(\r\n                            this.props.handleClick()\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    };\r\n    async agregarInfoExtra() {\r\n        let arrayInfo\r\n        if (this.props.proovedor.datos.infoExtra) {\r\n            arrayInfo = this.props.proovedor.datos.infoExtra\r\n        }\r\n        else {\r\n            arrayInfo = []\r\n        }\r\n        arrayInfo.push(prompt(\"Ingresar Informacion Extra\"))\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"clientes\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\r\n            {\r\n                infoExtra: arrayInfo\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    async agregarNuevaInfo() {\r\n        const propiedad = prompt(\"Ingresar el Titulo de la Informacion ej:DNI\")\r\n        const info = prompt(\"Ingresar La informacion\")\r\n        await firebase.database().ref().child(this.props.user.uid).child(\"clientes\").child(this.props.proovedor.datos.nombre).child(\"datos\").update(\r\n            {\r\n                [propiedad]: info\r\n            }\r\n        )\r\n    }\r\n    logOut() {\r\n        firebase.auth().signOut()\r\n    }\r\n    editarCliente() {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"productList\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row nav\">\r\n                            <div className=\"col-5 offset-1 text-left\">\r\n                                <Link to={{\r\n                                    pathname: \"/clientes\"\r\n                                }}>\r\n                                    <h1> <FontAwesomeIcon className=\"backIcon\" icon={faArrowLeft} onClick={e => {\r\n                                        this.props.handleClick()\r\n                                        this.editarCliente()\r\n                                    }} />\r\n                                    </h1>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-3 offset-3 danger-zone\">\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faPlus} onClick={e => {\r\n                                    this.agregarInfoExtra()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faEdit} onClick={e => {\r\n                                    this.editarCliente()\r\n                                }} /></h1>\r\n                                <h1> <FontAwesomeIcon className=\"backIcon\" icon={faTrash} onClick={e => {\r\n                                    this.eliminarCliente()\r\n                                }} /></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                <Ficha\r\n                                    agregarNuevaInfo={e => {\r\n                                        this.agregarNuevaInfo().then(\r\n                                            this.editarCliente()\r\n                                        )\r\n                                    }}\r\n                                    editarCliente={e => {\r\n                                        this.editarCliente()\r\n                                    }}\r\n                                    edit={this.state.edit}\r\n                                    seccion={this.props.seccion}\r\n                                    data={this.props.proovedor.datos}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className=\"name\">Lista de Pedidos</h2>\r\n                            </div>\r\n                            <div className=\"col-12 text-center form-group pt-2\">\r\n                                <FichaPedidos data={this.props.proovedor.pedidos} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user,\r\n})\r\nexport default connect(mapStateToProps,null)(FichaCliente)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaCliente from \"../components/FichaCliente\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { changeCliente } from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass ClientesList extends Component {\r\n    returnBack() {\r\n        this.props.changeCliente(null)\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.cliente) {\r\n                    const cliente = this.props.clientes[this.props.cliente]\r\n                    if (cliente) {\r\n                        return (\r\n                            <div>\r\n                                <FichaCliente proovedor={cliente} seccion=\"clientes\" handleClick={e => {\r\n                                    this.returnBack()\r\n                                }} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <h1 className=\"title\">No existe el Cliente</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Cliente\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <Link to=\"/NuevoCliente\">\r\n                                                <button type=\"button\" className=\"btn btn-success\">\r\n                                                    Agregar Nuevo Cliente\r\n                                                </button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.clientes?\r\n                                            Object.values(this.props.clientes).map(cliente => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/clientes/`,\r\n                                                        search: `${cliente.datos.nombre}`\r\n                                                    }}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                            this.props.changeCliente(cliente.datos.nombre)\r\n                                                        }}>\r\n                                                            {cliente.datos.nombre}\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    {console.log('hola')}\r\n                                                    <h1 className='text-white'>Aun No Hay Clientes!</h1>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Clientes\" />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cliente: state.cliente,\r\n    clientes: state.clientes\r\n})\r\nconst mapDispatchToProps = {\r\n    changeCliente,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientesList)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport FichaProovedor from \"../components/FichaProovedor\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeExpreso } from \"../actions/index\"\r\n\r\n\r\nclass ExpresosList extends Component {\r\n    returnBack() {\r\n        this.props.changeExpreso(null)\r\n\r\n    }\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        console.log(arrayClientes)\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.expreso) {\r\n                    const expreso = this.props.expresos[this.props.expreso]\r\n                    return (\r\n                        <div>\r\n                            <FichaProovedor seccion=\"expresos\" handleClick={e => {\r\n                                this.returnBack()\r\n                            }} proovedor={expreso} />\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChange(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Expreso\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {Object.values(this.props.expresos).map(expreso => (\r\n                                            <div className=\"col-12 col-md-6 col-lg-4 text-center form-group\">\r\n                                                <Link to={{\r\n                                                    pathname: `/expresos/`,\r\n                                                    search: `${expreso.datos.nombre}`\r\n                                                }}>\r\n                                                    <button type=\"button\" className=\"btn btn-outline-light btn-cliente\" onClick={() => {\r\n                                                        this.props.changeExpreso(expreso.datos.nombre)\r\n                                                    }}>\r\n                                                        {expreso.datos.nombre}\r\n                                                    </button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Expresos\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    expresos: state.data[\"expresos2\"],\r\n    expreso: state.expreso\r\n})\r\nconst mapDispatchToProps = {\r\n    changeExpreso,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpresosList)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraDeuda extends Component {\r\n    pedirCantidad() {\r\n        const nuevaDeuda = prompt(\"Ingresar Canidad\")\r\n        if (nuevaDeuda)\r\n            return nuevaDeuda\r\n        else\r\n            return 0\r\n    }\r\n    sumarDeuda(deudaVieja, adicion) {\r\n        return deudaVieja + parseInt(adicion)\r\n    }\r\n    restarDeuda(deudaVieja, quita) {\r\n        return deudaVieja - parseInt(quita)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 text-center\">\r\n                        <button type=\"button\" className=\"btn btn-outline-success\" onClick={(e) => {\r\n                            this.props.handleClick(this.props.cliente, this.sumarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faPlus} /></button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                            this.props.handleClick(this.props.cliente, this.restarDeuda(this.props.deuda, this.pedirCantidad()))\r\n                        }}><FontAwesomeIcon icon={faMinus} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraDeuda","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport BotoneraDeuda from \"./BotoneraDeuda\"\r\nimport \"./styles/Deuda.css\"\r\n\r\nclass Deuda extends Component {\r\n    render() {\r\n        if (this.props.deuda === 0) {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container-fluid pt-2 pb-2 deuda bg-dark\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-1\">\r\n                            <Link to={{\r\n                                pathname: `/clientes/`,\r\n                                search: `${this.props.cliente}`\r\n                            }}>\r\n                                <h4><span className=\"badge-pill badge-dark p-2\">{this.props.cliente}</span></h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <h3>$ {this.props.deuda}</h3>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <BotoneraDeuda cliente={this.props.cliente} deuda={this.props.deuda} handleClick={this.props.handleClick} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Deuda","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport \"./Styles/PedidosList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Deudas extends Component {\r\n    handleChange(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayDeudas = document.getElementsByClassName(\"col-12 col-md-6 col-lg-4 form-group text-center\")\r\n        forEach.call(arrayDeudas, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 col-md-6 col-lg-4 form-group text-center d-flex\";\r\n            }\r\n        });\r\n    }\r\n    async updateDeuda(cliente, nuevaDeuda,uid) {\r\n        const datosRef = await firebase.database().ref().child(uid).child('clientes').child(cliente).child(\"datos\")\r\n        datosRef.update({\r\n            deuda: nuevaDeuda\r\n        })\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                if (this.props.clientes) {\r\n                    const deudas = []\r\n                    Object.values(this.props.clientes).map(cliente => {\r\n                        if (cliente.datos.deuda != 0) {\r\n                            deudas.push({\r\n                                nombre: cliente.datos.nombre,\r\n                                deuda: cliente.datos.deuda\r\n                            })\r\n                        }\r\n                    })\r\n                    if(deudas.length){\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6 offset-3\">\r\n                                                <form>\r\n                                                    <div className=\"formRow\">\r\n                                                        <div className=\"form-group col-12 text-center\">\r\n                                                            <input type=\"text\" className=\"form-control\" onChange={\r\n                                                                e => {\r\n                                                                    this.handleChange(e)\r\n                                                                }\r\n                                                            } placeholder=\"Buscar Deuda\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {deudas.map(deuda => (\r\n                                                <div className=\"col-12 col-md-6 col-lg-4 form-group text-center\">\r\n                                                    <Deuda cliente={deuda.nombre} deuda={deuda.deuda} handleClick={(cliente,deuda)=>{\r\n                                                        this.updateDeuda(cliente,deuda,this.props.user.uid)\r\n                                                    }} />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"productList\">\r\n                                    <div className=\"container p-absolute-center\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h3 className=\"shadowTitle\">No Hay Deudas Pendientes!</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Deudas\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    clientes: state.clientes\r\n})\r\nexport default connect(mapStateToProps, null)(Deudas)\r\n","import React, { Component } from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport \"./Styles/ChequesList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as firebase from \"firebase\"\r\n\r\nclass ListasDePrecios extends Component {\r\n    async subirDocumento() {\r\n        if (this.state.file) {\r\n            console.log(this.state.file)\r\n            await firebase.storage().ref().child(\"ListasDePrecios\").child(this.state.file.name).put(this.state.file).then(e => {\r\n                this.setState({\r\n                    file: undefined,\r\n                    documentos: undefined,\r\n                    loading: true\r\n                })\r\n                this.fetchData()\r\n            })\r\n        }\r\n    }\r\n    async borrarDocumento(documento) {\r\n        confirmAlert({\r\n            title: 'Eliminar Documento?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Eliminar',\r\n                    onClick: async () => {\r\n                        await firebase.storage().ref().child(\"ListasDePrecios\").child(documento).delete().then(e => {\r\n                            this.setState({\r\n                                documentos: undefined,\r\n                                edit: false,\r\n                                loading: true\r\n                            })\r\n                            this.fetchData()\r\n                        }\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.documentos)\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"productList\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12  col-md-8 offset-md-2 col-lg-6 offset-lg-3 form-group\">\r\n                                        <div class=\"input-group mb-3\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                {this.state.file ?\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={e => {\r\n                                                        this.subirDocumento()\r\n                                                    }}>Subir Documento!</button>\r\n                                                    :\r\n                                                    <button type=\"button\" className=\"btn btn-success disabled\">Subir Documento!</button>\r\n                                                }\r\n                                            </div>\r\n                                            <div class=\"custom-file\">\r\n                                                <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" onChange={e => {\r\n                                                    this.setState(\r\n                                                        {\r\n                                                            file: e.target.files[0]\r\n                                                        }\r\n                                                    )\r\n                                                }} />\r\n                                                <label class=\"custom-file-label\" for=\"inputGroupFile01\">{\r\n                                                    this.state.file ?\r\n                                                        \"Archivo Elegido!\"\r\n                                                        :\r\n                                                        \"Elegir Archivo\"\r\n                                                }</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 form-group text-center\">\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={e => {\r\n                                            if (this.state.edit) {\r\n                                                this.setState({\r\n                                                    edit: false\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                this.setState({\r\n                                                    edit: true\r\n                                                })\r\n                                            }\r\n                                        }}>Eliminar Archivo</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {Object.keys(this.props.documentos).map(key => (\r\n                                        console.log(this.props.documentos[key].url)\r\n                                            (this.state.edit ?\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-danger\" onClick={e => {\r\n                                                        this.borrarDocumento(this.props.documentos[key].nombre)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"col-12 form-group text-center\">\r\n                                                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={e => {\r\n                                                        window.open(this.props.documentos[key].url)\r\n                                                    }}>{this.props.documentos[key].nombre.slice(0, this.props.documentos[key].nombre.indexOf(\".\"))}</button>\r\n                                                </div>\r\n                                            )\r\n                                    ))}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    documentos: state.documentos,\r\n})\r\nexport default connect(mapStateToProps, null)(ListasDePrecios)","import React, { Component } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./styles/Product.css\"\r\nimport * as firebase from \"firebase\"\r\n\r\nclass Product extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"product-election bg-dark pt-4 pb-4\" onClick={this.props.handleClick}>\r\n                <div className=\"product-Info\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <p className=\"colorWhite textBold\">{this.props.nombre}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 form-group text-center\">\r\n                                <h2>\r\n                                    <span className=\"badge badge-íll badge-light\">$ {this.props.precio}</span>\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { faCheck, faTimes, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nclass BotoneraNuevoPedido extends Component {\r\n    state = {\r\n        redirect: false,\r\n        porcentaje: false,\r\n        restar: false,\r\n    }\r\n    porcentaje = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Porcentaje</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" id=\"porcentaje\" className=\"form-control\" placeholder=\"Porcentaje\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group-text-cen\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const porcentaje = document.getElementById(\"porcentaje\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - (this.props.total * porcentaje / 100))\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    restar = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 form-group text-center\">\r\n                                    <h1>Ingresar Cantidad</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <input type=\"number\" className=\"form-control\" id=\"cantidad\" placeholder=\"cantidad\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => {\r\n                                        const cantidad = document.getElementById(\"cantidad\").value\r\n                                        const nuevoTotal = Math.floor(this.props.total - cantidad)\r\n                                        console.log(cantidad)\r\n                                        this.props.modificarTotal(nuevoTotal)\r\n                                        onClose()\r\n                                    }}>\r\n                                        OK!\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    modificarTotal() {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12  text-center form-group\">\r\n                                    <h1>Modificar Total</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.porcentaje()\r\n                                    }}>\r\n                                        Porcentaje\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={e => {\r\n                                        onClose()\r\n                                        this.restar()\r\n                                    }}>\r\n                                        Restar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    cancelarPedido() {\r\n        confirmAlert({\r\n            title: 'Cancelar Pedido?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si, Cancelar',\r\n                    onClick: async () => {\r\n                        this.setState({\r\n                            redirect: true\r\n                        })\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.redirect ?\r\n                    <Redirect to=\"productos\" />\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\"><FontAwesomeIcon icon={faCheck} onClick={this.props.enviarPedido} /></button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h1 onClick={e => {\r\n                        this.modificarTotal()\r\n                    }}>$ {this.props.total}</h1>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light\"><FontAwesomeIcon icon={faTimes} onClick={e => {\r\n                        this.cancelarPedido()\r\n                    }} /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraNuevoPedido","import React, { Component, Fragment } from \"react\"\r\nimport BotoneraNuevoPedido from \"../components/BotoneraNuevoPedido\"\r\n\r\nclass ResumenPedido extends Component {\r\n    render() {\r\n        return (<div className=\"col-8 offset-2 bg-dark text-center nuevoPedido p-4\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h3>{this.props.cliente}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-2\">\r\n                    {Object.keys(this.props.pedido).map(key => (\r\n                        <Fragment>\r\n                            <div className=\"col-10 text-left\">\r\n                                <h3>{this.props.pedido[key].nombre} <span className=\"badge badge-light\">$ {this.props.pedido[key].precio} c/u </span></h3>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <h3>{this.props.pedido[key].cantidad}</h3>\r\n                            </div>\r\n                        </Fragment>\r\n                    )\r\n                    )}\r\n                </div>\r\n                <BotoneraNuevoPedido modificarTotal={total => {\r\n                    this.props.modificarTotal(total)\r\n                }} total={this.props.total} enviarPedido={this.props.enviarPedido} />\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default ResumenPedido","import React, { Component, Fragment } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport ProductElection from \"../components/ProductElection\"\r\nimport * as firebase from \"firebase\"\r\nimport ResumenPedido from \"../components/ResumenPedido\"\r\nimport \"./Styles/ProovedoresList.css\"\r\nimport \"./Styles/NuevoPedido.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestionCircle,faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { connect } from \"react-redux\"\r\nimport {changeCliente} from \"../actions/index\"\r\nclass NuevoPedido extends Component {\r\n    seleccionarDestinatario(cliente) {\r\n        this.setState({\r\n            nuevoCliente: cliente\r\n        })\r\n    }\r\n    async enviarPedido() {\r\n        let arr = []\r\n        Object.keys(this.state.pedido).map(key => {\r\n            arr.push(\r\n                {\r\n                    nombre: this.state.pedido[key].nombre,\r\n                    cantidad: this.state.pedido[key].cantidad,\r\n                    seccion: this.state.pedido[key].seccion\r\n                }\r\n            )\r\n        })\r\n        console.log(arr)\r\n        firebase.database().ref().child(this.props.user.uid).child(\"pedidos\").push(\r\n            {\r\n                cliente: this.state.nuevoCliente,\r\n                precio: this.state.total,\r\n                articulos: arr\r\n            }\r\n        )\r\n    }\r\n    alertEnviarPedido() {\r\n        confirmAlert({\r\n            title: 'Agregar Pedido?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.enviarPedido().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    state = {\r\n        nuevoCliente: undefined,\r\n        total: 0,\r\n        pedido: [],\r\n    }\r\n    agregarArticulo(nombre, cantidad, precio, seccion) {\r\n        const arr = this.state.pedido\r\n        arr.push({\r\n            nombre: nombre,\r\n            cantidad: cantidad,\r\n            precio: precio,\r\n            seccion: seccion\r\n        })\r\n        super.setState({\r\n            ...this.state,\r\n            pedido: arr\r\n        })\r\n    }\r\n    handleChangeProducto(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var array = document.getele\r\n        var arrayProductos = document.getElementsByClassName(\"col-6 col-md-3 col-lg-2 form-group text-center align-items-center\")\r\n        forEach.call(arrayProductos, function (f) {\r\n            if (f.children[0].children[0].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-6 col-md-3 col-lg-2 form-group text-center d-none align-items-center\"\r\n                console.log(f.className)\r\n            }\r\n            else {\r\n                f.className = \"col-6 col-md-3 col-lg-2 form-group text-center d-flex align-items-center\"\r\n            }\r\n        });\r\n    }\r\n    handleChangeCliente(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayClientes = document.getElementsByClassName(\"btn-cliente\")\r\n        forEach.call(arrayClientes, function (f) {\r\n            if (f.innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1)\r\n                f.parentNode.style.display = \"none\";\r\n            else\r\n                f.parentNode.style.display = \"block\";\r\n        });\r\n    }\r\n    modificarTotal(total) {\r\n        console.log(total)\r\n        this.setState({ total: total })\r\n    }\r\n    alertNuevoCliente = () =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar Nuevo Producto</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"text\" class=\"form-control\" id='nombreNuevoCliente' placeholder=\"Nombre del Cliente\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            this.nuevoCliente()\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n    }\r\n    alertElegirProducto = (nombre,precio) =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container alert\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <FontAwesomeIcon className=\"alertIcon plusIcon\" icon={faPlus}  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{nombre}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group\">\r\n                                    <input autoFocus type=\"number\" class=\"form-control\" id='cantidadProducto' placeholder=\"Nombre del Cliente\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col form-group text-center\">\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn btn-success'\r\n                                        onClick={() => {\r\n                                            const cantidadPlus = document.getElementById('cantidadProducto').value\r\n                                                if (cantidadPlus) {\r\n                                                    this.agregarArticulo(nombre,cantidadPlus,precio, \"productos\")\r\n                                                    if (precio) {\r\n                                                        let sumaPrecios\r\n                                                        if (this.state.total) {\r\n                                                            sumaPrecios = this.state.total\r\n                                                        }\r\n                                                        else {\r\n                                                            sumaPrecios = 0\r\n                                                        }\r\n                                                        sumaPrecios += parseInt(precio * cantidadPlus)\r\n                                                        this.setState({\r\n                                                            total: sumaPrecios\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Agregar\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button\r\n                                        className='btn btn-outline-dark'\r\n                                        onClick={() => {\r\n                                            onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancelar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    nuevoCliente = async () =>{\r\n        const nombre = document.getElementById(\"nombreNuevoCliente\").value\r\n        if(nombre){\r\n            this.seleccionarDestinatario(nombre)\r\n            firebase.database().ref().child(this.props.user.uid).child('clientes').update({\r\n                [nombre]:{\r\n                    datos:{\r\n                        nombre:nombre,\r\n                        deuda:0\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            let user = undefined\r\n            user = this.props.user.email\r\n            if (user) {\r\n                if (!this.state.nuevoCliente) {\r\n                    return (\r\n                        <div className=\"nuevo-cliente bg-dark\">\r\n                            <div className=\"container-fluid mt-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 offset-3\">\r\n                                        <form>\r\n                                            <div className=\"formRow\">\r\n                                                <div className=\"form-group col-12 text-center\">\r\n                                                    <input type=\"text\" className=\"form-control\" onChange={\r\n                                                        e => {\r\n                                                            this.handleChangeCliente(e)\r\n                                                        }\r\n                                                    } placeholder=\"Buscar Cliente\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <button type='button' className='btn btn-outline-light' onClick={this.alertNuevoCliente}>\r\n                                            Nuevo Cliente\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.clientes?\r\n                                <div className=\"row\">\r\n                                    {Object.values(this.props.clientes).map(cliente => (\r\n                                        <div className=\"col-12 text-center form-group\">\r\n                                            <button type=\"button\" className=\"btn btn-primary btn-cliente\" onClick={() => {\r\n                                                console.log(cliente.datos.nombre)\r\n                                                this.seleccionarDestinatario(cliente.datos.nombre)\r\n                                            }}>\r\n                                                {cliente.datos.nombre}\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                :\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 text-center\">\r\n                                        <h1 className='text-white'>Aun no hay Clientes!</h1>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"productList\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className=\"name\">Elegir Productos</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 offset-3\">\r\n                                            <form>\r\n                                                <div className=\"formRow\">\r\n                                                    <div className=\"form-group col-12 text-center\">\r\n                                                        <input type=\"text\" className=\"form-control\" onChange={\r\n                                                            e => {\r\n                                                                this.handleChangeProducto(e)\r\n                                                            }\r\n                                                        } placeholder=\"Buscar Producto\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {this.props.productos?\r\n                                            Object.values(this.props.productos).map(producto => ( \r\n                                                <div className=\"col-6 col-md-3 col-lg-2 form-group text-center d-flex align-items-center\" key={producto.nombre}>\r\n                                                    <ProductElection \r\n                                                        handleClick={e => {\r\n                                                            this.alertElegirProducto(producto.nombre, producto.precio)\r\n                                                        }}\r\n                                                        nombre={producto.nombre} \r\n                                                        precio={producto.precio} \r\n                                                    />\r\n                                                </div>\r\n                                            ))\r\n                                        :\r\n                                        <div className=\"col-12 text-center\">\r\n                                            <h1 className='text-white'> Aun No Hay Productos!</h1>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <ResumenPedido\r\n                                            cliente={this.state.nuevoCliente}\r\n                                            pedido={this.state.pedido}\r\n                                            enviarPedido={e => {\r\n                                                this.alertEnviarPedido()\r\n                                            }}\r\n                                            modificarTotal={total => {\r\n                                                this.modificarTotal(total)\r\n                                            }}\r\n                                            total={this.state.total}\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.redirect ?\r\n                                        <Redirect to=\"pedidos\" />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <Login redirect=\"NuevoPedido\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    productos: state.productos,\r\n    clientes:state.clientes\r\n})\r\nconst mapDispatchToProps={\r\n    changeCliente\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoPedido)","import React, { Component } from \"react\"\r\nimport \"./styles/Cheque.css\"\r\nimport * as firebase from \"firebase\"\r\nclass Cheque extends Component {\r\n    async enviarCheque(llave) {\r\n        const date = new Date()\r\n        const enviadoA = prompt(\"Ingresar Nombre Del Destinatario\")\r\n        if (enviadoA) {\r\n            await firebase.database().ref().child('papeles').child(llave).update(\r\n                {\r\n                    [\"Fecha De Salida\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n                    [\"Enviado A\"]: enviadoA\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container cheque p-3 bg-dark\">\r\n                <div className=\"row d-flex align-items-center\">\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Dia\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Entrada)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Cliente\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Cliente)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Banco\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Banco)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Numero\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Numero)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>{this.props.cheque[\"Fecha Del Cheque\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Fecha)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <h6>$ {this.props.cheque[\"Monto\"]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Monto)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Fecha De Salida\"] ?\r\n                                        <h6>{this.props.cheque[\"Fecha De Salida\"]}</h6>\r\n                                        :\r\n                                        <h6 className=\"salida\" onClick={\r\n                                            e => {\r\n                                                this.enviarCheque(this.props.llave)\r\n                                            }\r\n                                        }>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Salida)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    {this.props.cheque[\"Enviado A\"] ?\r\n                                        <h6>{this.props.cheque[\"Enviado A\"]}</h6>\r\n                                        :\r\n                                        <h6>-</h6>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <small>(Enviado A)</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Cheque","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Login from \"../components/Login\"\r\nimport Cheque from \"../components/Cheque\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport Deuda from \"../components/Deuda\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./Styles/ChequesList.css\"\r\n\r\nimport * as firebase from \"firebase\"\r\n\r\nclass ChequesList extends Component {\r\n    state = {\r\n        filtro: \"Numero\",\r\n        redirect: false,\r\n    }\r\n    logOut = async () => {\r\n        await firebase.auth().signOut()\r\n        window.location.reload()\r\n    }\r\n    handleChange(e, filtro) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayCheques = document.getElementsByClassName(\"col-12 form-group chequeList\")\r\n        forEach.call(arrayCheques, function (f) {\r\n            const cheque = f.children[0].children[0].children\r\n            let $filtro = undefined\r\n            switch (filtro) {\r\n                case \"Numero\":\r\n                    $filtro = 3;\r\n                    break;\r\n                case \"Nombre\":\r\n                    $filtro = 1;\r\n                    break;\r\n                case \"Monto\":\r\n                    $filtro = 5;\r\n                    break;\r\n                case \"Banco\":\r\n                    $filtro = 2;\r\n                    break;\r\n                case \"Enviado A\":\r\n                    $filtro = 7;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (cheque[$filtro].children[0].children[0].children[0].children[0].innerHTML.toLowerCase().search(e.target.value.toLowerCase()) == -1) {\r\n                f.className = \"col-12 form-group chequeList d-none\";\r\n            }\r\n            else {\r\n                f.className = \"col-12 form-group chequeList d-block\";\r\n            }\r\n        });\r\n    }\r\n    actualizarBotones(e) {\r\n        var forEach = Array.prototype.forEach;\r\n        var arrayButton = document.getElementsByClassName(\"filtro btn\")\r\n        forEach.call(arrayButton, function (f) {\r\n            f.className = \"filtro btn btn-outline-light\"\r\n        })\r\n        e.target.className = \"filtro btn btn-outline-success\"\r\n    }\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user === \"gomezbonardi@hotmail.com\") {\r\n                return (\r\n                    <div>\r\n                        {\r\n                            this.state.redirect ?\r\n                                <Redirect to=\"/NuevoCheque\" />\r\n                                :\r\n                                <div>\r\n                                    <div className=\"productList\">\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-right\">\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={\r\n                                                        e => {\r\n                                                            this.setState({\r\n                                                                redirect: true\r\n                                                            })\r\n                                                        }\r\n                                                    }>Agregar Cheque</button>\r\n                                                </div>\r\n                                                <div className=\"col-12 text-center form-group\">\r\n                                                    <h2 className=\"name\">Cheques</h2>\r\n                                                </div>\r\n                                                <div className=\"col-12  text-center form-group\">\r\n                                                    <form>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"form-group col-6 offset-3 text-center\">\r\n                                                                <input type=\"text\" className=\"form-control\" onChange={\r\n                                                                    e => {\r\n                                                                        this.handleChange(e, this.state.filtro)\r\n                                                                    }\r\n                                                                } placeholder=\"Buscar Cheque\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"formRow\">\r\n                                                            <div className=\"container\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-success\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Numero\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Numero</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Nombre\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Nombre</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center\">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Banco\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Banco</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Monto\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Monto</button>\r\n                                                                    </div>\r\n                                                                    <div className=\"col text-center \">\r\n                                                                        <button type=\"button\" className=\"filtro btn btn-outline-light\" onClick={\r\n                                                                            e => {\r\n                                                                                this.setState(\r\n                                                                                    {\r\n                                                                                        filtro: \"Enviado A\"\r\n                                                                                    }\r\n                                                                                )\r\n                                                                                this.actualizarBotones(e)\r\n                                                                            }\r\n                                                                        }>Enviado A</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                {Object.keys(this.props.cheques).map(key => (\r\n                                                    <div className=\"col-12 form-group chequeList\">\r\n                                                        <Cheque llave={key} cheque={this.props.cheques[key]} />\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                this.logOut()\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"Cheques\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    cheques: state.cheques\r\n})\r\nexport default connect(mapStateToProps, null)(ChequesList)","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Prompt } from \"react-router\"\r\nimport * as firebase from \"firebase\"\r\nimport \"../components/styles/FormNuevoCliente.css\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nclass FormNuevoCliente extends Component {\r\n    state = {\r\n        nombre: null,\r\n        direccionPrincipal: null,\r\n        direccionSecundaria: null,\r\n        ciudad: null,\r\n        codigoPostal: \" - \",\r\n        expreso: null,\r\n        CUIT: null,\r\n        DNI: null,\r\n        telefono1: null,\r\n        telefono2: null,\r\n        telefono3: null,\r\n        telefono4: null,\r\n    }\r\n\r\n    async submitForm() {\r\n        let cliente = {\r\n            [this.state.nombre]: {\r\n                datos: {\r\n                    nombre: this.state.nombre,\r\n                    direccion: {\r\n                        0: this.state.direccionPrincipal,\r\n                        1: this.state.direccionSecundaria,\r\n                    },\r\n                    telefono: {\r\n                        0: this.state.telefono1,\r\n                        1: this.state.telefono2,\r\n                        2: this.state.telefono3,\r\n                        3: this.state.telefono4,\r\n                    },\r\n                    ciudad: this.state.ciudad + \" CP:\" + this.state.codigoPostal,\r\n                    deuda: 0,\r\n                    expreso: this.state.expreso,\r\n                    CUIT: this.state.CUIT,\r\n                    DNI: this.state.DNI\r\n                }\r\n            }\r\n        }\r\n        await firebase.database().ref().child(this.props.user.uid).child('clientes').update(cliente)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cliente?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 offset-2\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <Prompt\r\n                                when={this.state.DNI}\r\n                                message=\"Estas Seguro que deseas retirarte?\"\r\n                            />\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\">\r\n                                    <label>Nombre</label>\r\n                                    <input type=\"text\" value={this.state.nombre} onChange={e => {\r\n                                        this.setState(\r\n                                            {\r\n                                                ...this.state,\r\n                                                nombre: e.target.value\r\n                                            }\r\n                                        )\r\n                                    }} className=\"form-control\" id=\"nombre\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress\">Direccion Principal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={this.state.direccionPrincipal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionPrincipal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label for=\"inputAddress2\">Direccion Secundaria</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" value={this.state.direccionSecundaria} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            direccionSecundaria: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>Ciudad</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.ciudad} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            ciudad: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label for=\"inputZip\">Codigo Postal</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.codigoPostal} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            codigoPostal: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>expreso</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.expreso} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            expreso: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 1</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono1} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono1: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 2</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono2} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono2: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 3</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono3} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono3: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\">\r\n                                    <label>telefono 4</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.telefono4} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            telefono4: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label>CUIT</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.CUIT} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            CUIT: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label for=\"inputZip\">DNI</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.DNI} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            DNI: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cliente</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/clientes\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(FormNuevoCliente)","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCliente from \"../components/FormNuevoCliente\"\r\n\r\nclass NuevoCliente extends Component {\r\n    constructor(props) {\r\n        const firebaseConfig = {\r\n            apiKey: \"AIzaSyDPmTjxjMxN2abofP8ZczgFGeYQYSvbXHE\",\r\n            authDomain: \"stock-119e8.firebaseapp.com\",\r\n            databaseURL: \"https://stock-119e8.firebaseio.com\",\r\n            projectId: \"stock-119e8\",\r\n            storageBucket: \"stock-119e8.appspot.com\",\r\n            messagingSenderId: \"1007277754269\",\r\n            appId: \"1:1007277754269:web:d1db0def0da907b2\"\r\n        }\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        }\r\n        super(props)\r\n    }\r\n    state = {\r\n        recuperandoUsuario: true\r\n    }\r\n    async authListener() {\r\n        await firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.setState({\r\n                    user: user,\r\n                    recuperandoUsuario: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    user: null,\r\n                    recuperandoUsuario: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    logOut() {\r\n        firebase.auth().signOut()\r\n    }\r\n    async componentDidMount() {\r\n        await this.authListener()\r\n    }\r\n    render() {\r\n        if (this.state.recuperandoUsuario) {\r\n            return (\r\n                <>\r\n                    <SpinnerLoading />\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            try {\r\n                const user = this.state.user.email\r\n                console.log(user)\r\n                if (user) {\r\n                    return (\r\n                        <div>\r\n                            <FormNuevoCliente />\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            catch{\r\n                return (\r\n                    <Login redirect=\"NuevoCliente\" />\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default NuevoCliente","import React, { Component } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport * as firebase from \"firebase\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\n\r\n\r\nclass FormNuevoCheque extends Component {\r\n    state = {\r\n        entrada: null,\r\n        cliente: null,\r\n        banco: null,\r\n        numero: null,\r\n        fecha: null,\r\n        monto: null\r\n    }\r\n\r\n    async submitForm() {\r\n        const date = new Date()\r\n        let cheque = {\r\n            Banco: this.state.banco,\r\n            Cliente: this.state.cliente,\r\n            [\"Fecha Del Cheque\"]: this.state.fecha,\r\n            [\"Fecha Del Dia\"]: date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n            Monto: this.state.monto,\r\n            Numero: this.state.numero,\r\n        }\r\n        await firebase.database().ref().child(\"papeles\").push(cheque)\r\n    }\r\n    confirm() {\r\n        confirmAlert({\r\n            title: 'Agregar Cheque?',\r\n            buttons: [\r\n                {\r\n                    label: 'Agregar',\r\n                    onClick: async () => {\r\n                        this.submitForm().then(\r\n                            this.setState({\r\n                                redirect: true\r\n                            })\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Cancelar'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 offset-3\">\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            this.confirm()\r\n                        }}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Cliente</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.cliente} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            cliente: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label for=\"inputZip\">Banco</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" value={this.state.banco} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            banco: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Numero De Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.numero} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            numero: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Fecha Del Cheque</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.fecha} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            fecha: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Monto</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" value={this.state.monto} onChange={e => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            monto: e.target.value\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Agregar Cheque</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                        {this.state.redirect ?\r\n                            <Redirect to=\"/Cheques\" />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default FormNuevoCheque","import React, { Component } from \"react\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport FormNuevoCheque from \"../components/FormNuevoCheque\"\r\nimport { connect } from \"react-redux\"\r\nclass NuevoCheque extends Component {\r\n    render() {\r\n        try {\r\n            const user = this.props.user.email\r\n            if (user) {\r\n                return (\r\n                    <div>\r\n                        <FormNuevoCheque />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch{\r\n            return (\r\n                <Login redirect=\"NuevoCheque\" />\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\nexport default connect(mapStateToProps, null)(NuevoCheque)","import React, { Component, Fragment } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport withFirebaseAuth from \"react-with-firebase-auth\"\nimport SpinnerLoading from \"../components/SpinnerLoading\"\nimport * as firebase from \"firebase/app\"\nimport Logo from \"../images/logo.png\"\nimport \"./styles/Login.css\"\nimport {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n} from \"../actions/index\"\nimport { connect } from \"react-redux\"\n\nclass Registro extends Component {\n    state = {\n        registro:false,\n        nombre:{\n            valor:undefined,\n            isValid:undefined\n        },\n        mail:{\n            valor:undefined,\n            isValid:true\n        },\n        password:{\n            valor:undefined,\n            isValid:undefined\n        }\n    }\n    async registrar() {\n        if(this.state.nombre.valor && this.state.mail.valor && this.state.password.valor){\n            this.props.isLoading(true)\n            await firebase.auth().createUserWithEmailAndPassword(this.state.mail.valor, this.state.password.valor).then(async result => {\n                result.user.updateProfile({\n                    displayName:this.state.nombre.valor\n                })\n                await firebase.auth().signInWithEmailAndPassword(this.state.mail.valor, this.state.password.valor).then(()=>{\n                    this.props.changeRegistro(false)\n                })\n                alert('Bienvenido')\n                this.props.isLoading(false)\n            })\n            .catch(error => {\n                this.setState({\n                    mail:{\n                        isValid:false\n                    }\n                })\n            })\n        }\n        else{\n            alert('competar formulario')\n        }\n    }\n    updateMail(data) {\n        this.setState(\n            {\n                mail:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updatePass(data) {\n        this.setState(\n            {\n                password:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n    }\n    updateNombre(data) {\n        this.setState(\n            {\n                nombre:{\n                    valor:data,\n                    isValid:true\n                }\n            }\n        )\n        if(!data){\n            this.setState({\n                nombre:{\n                    isValid:false\n                }\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.props.user ?\n                    <Redirect to={\"/\"} />\n                    :\n                    <div className=\"container-fluid login\">\n                        {this.state.loading ?\n                            <div className=\"row\">\n                                {this.state.loading ? <SpinnerLoading /> : null}\n                            </div>\n                            :\n                            <Fragment>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 text-center\">\n                                        <img height=\"125px\" src={Logo} />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\n                                        <form className='needs-validation' noValidate>\n                                            <div className=\"form-row\">\n                                                <div className=\"col-12 form-group\">\n                                                    <label>Nombre Completo</label>\n                                                    <input \n                                                        required \n                                                        autoFocus \n                                                        type=\"text\" \n                                                        className={this.state.nombre.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputNombre\"\n                                                        onChange={e => {\n                                                            this.updateNombre(e.target.value)\n                                                        }} \n                                                        placeholder=\"Nombre Completo\" \n                                                    />\n                                                    <div className=\"valid-feedback\">\n                                                        Looks good!\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">\n                                                        Ingresa un Nombre de Usuario\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Email</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.mail.valor} \n                                                        type=\"email\" \n                                                        onChange={e => {\n                                                            this.updateMail(e.target.value)\n                                                        }} \n                                                        className={this.state.mail.isValid ? \"form-control\" : \"form-control is-invalid\"}\n                                                        id=\"inputEmail\" \n                                                        placeholder=\"Email\" \n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        El Correo Electronico ya esta registrado\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12\">\n                                                    <label>Password</label>\n                                                    <input \n                                                        required \n                                                        value={this.state.password.valor} \n                                                        type=\"password\" \n                                                        onChange={e => {\n                                                            this.updatePass(e.target.value)\n                                                        }} \n                                                        className={this.state.password.isValid ? \"form-control is-valid\" : \"form-control is-invalid\"}\n                                                        id=\"inputPassword\" \n                                                        placeholder=\"Password\" \n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-12 text-center\">\n                                                    <Link to=\"/Productos\">\n                                                        <button \n                                                            type=\"submit\" \n                                                            onClick={e => {\n                                                                e.preventDefault()\n                                                                this.registrar()\n                                                            }} \n                                                            className=\"btn btn-success\">Registrarse Ahora!\n                                                        </button>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </Fragment>\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        loading: state.loading,\n    }\n}\nconst mapDispatchToProps = {\n    changeUser,\n    changeRegistro,\n    isLoading,\n    recuperandoUsuario\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Registro)","import React, { Component, Fragment } from \"react\"\r\nimport {Redirect} from 'react-router-dom'\r\nimport NavBar from \"./NavBar\"\r\nimport SpinnerLoading from \"../components/SpinnerLoading\"\r\nimport * as firebase from \"firebase\"\r\nimport Login from \"../components/Login\"\r\nimport Registro from \"../components/Registro\"\r\nimport {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getDeudas,\r\n    getCheques,\r\n    getDocumentos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario\r\n} from \"../actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nclass Layout extends Component {\r\n    \r\n    logOut = async () => {\r\n        await firebase.auth().signOut()\r\n        window.location.reload()\r\n    }\r\n    async fetchData(id) {\r\n        this.props.isLoading(true)\r\n        const productosRef = await firebase.database().ref().child(id).child('productos')\r\n        productosRef.on(\"value\", snapshot => {\r\n            this.props.getProductos(snapshot.val())\r\n        })\r\n        const pedidosRef = await firebase.database().ref().child(id).child('pedidos')\r\n        pedidosRef.on(\"value\", snapshot => {\r\n            this.props.getPedidos(snapshot.val())\r\n        })\r\n        const clientesRef = await firebase.database().ref().child(id).child('clientes')\r\n        clientesRef.on(\"value\", snapshot => {\r\n            this.props.getClientes(snapshot.val())\r\n        })\r\n        const proveedoresRef = await firebase.database().ref().child(id).child('proveedores')\r\n        proveedoresRef.on(\"value\", snapshot => {\r\n            this.props.getProveedores(snapshot.val())\r\n        })\r\n        const deudasRef = await firebase.database().ref().child(id).child('deudas')\r\n        deudasRef.on(\"value\", snapshot => {\r\n            this.props.getDeudas(snapshot.val())\r\n        })\r\n        const chequesRef = await firebase.database().ref().child(id).child('cheques')\r\n        chequesRef.on(\"value\", snapshot => {\r\n            this.props.getCheques(snapshot.val())\r\n            this.props.isLoading(false)\r\n        })\r\n    }\r\n    async authListener() {\r\n        firebase.auth().onAuthStateChanged(async user=>{\r\n            if (user) {\r\n                await this.fetchData(user.uid)\r\n                this.props.changeUser(user)\r\n            }\r\n            this.props.recuperandoUsuario(false)\r\n        })\r\n    }\r\n    async componentDidMount() {\r\n        await this.authListener()\r\n    }\r\n    render() {\r\n        console.log(this.props.user)\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.recuperarUsuario ?\r\n                        <>\r\n                            <SpinnerLoading title=\"Recuperando Usuario...\" />\r\n                        </>\r\n                        :\r\n                        <div className=\"app\">\r\n                            {!this.props.user ?\r\n                                (this.props.registro?\r\n                                <Registro/>\r\n                                :\r\n                                <Login />\r\n                                )\r\n                                :\r\n                                <>\r\n                                    {this.props.loading ?\r\n                                        <SpinnerLoading title=\"Recuperando Informacion...\" />\r\n                                        :\r\n                                        <>\r\n                                            <NavBar user={this.props.user} handleClick={this.logOut} />\r\n                                            {this.props.children}\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading,\r\n    user: state.user,\r\n    registro:state.registro,\r\n    recuperarUsuario:state.recuperarUsuario,\r\n    documentos: state.documentos\r\n})\r\nconst mapDispatchToProps = {\r\n    getProductos,\r\n    getPedidos,\r\n    getClientes,\r\n    getProveedores,\r\n    getDeudas,\r\n    getCheques,\r\n    getDocumentos,\r\n    changeUser,\r\n    isLoading,\r\n    recuperandoUsuario\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)","import React ,{Component}from 'react';\nimport { Switch, Route, HashRouter } from \"react-router-dom\"\nimport './App.css';\nimport ProductList from \"./Pages/ProductList\"\nimport PedidosList from \"./Pages/PedidosList\"\nimport MecanizadosList from \"./Pages/MecanizadosList\"\nimport NoMecanizadosList from \"./Pages/NoMecanizadosList\"\nimport SurtidoresList from \"./Pages/SurtidoresList\"\nimport ProovedoresList from \"./Pages/ProovedoresList\"\nimport ClientesList from \"./Pages/ClientesList\"\nimport ExpresosList from \"./Pages/ExpresosList\"\nimport Deudas from \"./Pages/Deudas\"\nimport ListasDePrecios from \"./Pages/ListasDePrecios\"\nimport NuevoPedido from \"./Pages/NuevoPedido\"\nimport ChequesList from \"./Pages/ChequesList\"\nimport NuevoCliente from \"./Pages/NuevoCliente\"\nimport NuevoCheque from \"./Pages/NuevoCheque\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Login from './components/Login';\nimport Registro from './components/Registro';\nimport Layout from \"./components/Layout\"\nimport * as firebase from 'firebase'\n\n\nfunction App(){\n    var firebaseConfig = {\n        apiKey: \"AIzaSyCymMsjhvVdAbbOZydlSZDWQ1MfpZckj2A\",\n        authDomain: \"control-de-stock-4a3ca.firebaseapp.com\",\n        databaseURL: \"https://control-de-stock-4a3ca.firebaseio.com\",\n        projectId: \"control-de-stock-4a3ca\",\n        storageBucket: \"control-de-stock-4a3ca.appspot.com\",\n        messagingSenderId: \"602181217176\",\n        appId: \"1:602181217176:web:a8cc162c05c7fdfcbc19ed\"\n      };\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n    }\n\n    return (\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/Registro\" component={Registro} />\n            <Route exact path=\"/productos\" component={ProductList} />\n            <Route exact path=\"/Pedidos\" component={PedidosList} />\n            <Route exact path=\"/Mecanizados\" component={MecanizadosList} />\n            <Route exact path=\"/No-Mecanizados\" component={NoMecanizadosList} />\n            <Route exact path=\"/Surtidores\" component={SurtidoresList} />\n            <Route exact path=\"/Clientes\" component={ClientesList} />\n            <Route exact path=\"/Proveedores\" component={ProovedoresList} />\n            <Route exact path=\"/Expresos\" component={ExpresosList} />\n            <Route exact path=\"/Deudas\" component={Deudas} />\n            <Route exact path=\"/ListasDePrecios\" component={ListasDePrecios} />\n            <Route exact path=\"/NuevoPedido\" component={NuevoPedido} />\n            <Route exact path=\"/NuevoCliente\" component={NuevoCliente} />\n            <Route exact path=\"/Cheques\" component={ChequesList} />\n            <Route exact path=\"/NuevoCheque\" component={NuevoCheque} />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"GET_DATA\":\r\n            switch (action.section) {\r\n                case 'productos':\r\n                    return {\r\n                        ...state,\r\n                        productos: action.payload\r\n                    }\r\n                    break;\r\n                case 'pedidos':\r\n                    return {\r\n                        ...state,\r\n                        pedidos: action.payload\r\n                    }\r\n                    break;\r\n                case 'clientes':\r\n                    return {\r\n                        ...state,\r\n                        clientes: action.payload\r\n                    }\r\n                    break;\r\n                case 'proveedores':\r\n                    return {\r\n                        ...state,\r\n                        proveedores: action.payload\r\n                    }\r\n                    break;\r\n                case 'deudas':\r\n                    return {\r\n                        ...state,\r\n                        deudas: action.payload\r\n                    }\r\n                    break;\r\n                case 'cheques':\r\n                    return {\r\n                        ...state,\r\n                        cheques: action.payload\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case \"GET_DOCUMENTOS\":\r\n            return {\r\n                ...state,\r\n                documentos: action.payload\r\n            }\r\n            break;\r\n        case \"RECUPERANDO_USUARIO\":\r\n            return {\r\n                ...state,\r\n                recuperarUsuario: action.payload\r\n            }\r\n            break;\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_USER\":\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_REGISTRO\":\r\n            return {\r\n                ...state,\r\n                registro: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_CLIENTE\":\r\n            return {\r\n                ...state,\r\n                cliente: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_PROVEEDOR\":\r\n            return {\r\n                ...state,\r\n                proveedor: action.payload\r\n            }\r\n            break;\r\n        case \"CHANGE_EXPRESO\":\r\n            return {\r\n                ...state,\r\n                expreso: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { createStore } from 'redux'\nimport { Provider } from \"react-redux\"\nimport reducer from \"./reducers\"\n\nlet initialState = {\n    registro:false,\n    loading: true,\n    error: null,\n    recuperarUsuario: true,\n    data:{\n        productos:{\n        },\n    }\n}\nconst store = createStore(reducer, initialState)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cf936f02.png\";","module.exports = __webpack_public_path__ + \"static/media/projectManagement.6d29eb92.jpg\";"],"sourceRoot":""}